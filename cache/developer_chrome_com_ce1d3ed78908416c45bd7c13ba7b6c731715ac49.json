{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Chrome Developers - Blog",
  "feed_url": "https://developer.chrome.com/feeds/blog.xml",
  "items": [
    {
      "id": "https://developer.chrome.com/en/blog/new-in-chrome-102/",
      "url": "https://developer.chrome.com/en/blog/new-in-chrome-102/",
      "title": "New in Chrome 102",
      "summary": "\n  \n\nHere's what you need to know:\n\nInstalled PWAs can register as file handlers, making it\neasy for users to open files directly from disk.\nThe inert attribute allows you to mark parts of the DOM as inert.\nThe Navigation API makes it easier for single page apps\nto handle navigation and updates to the URL\nAnd there's plenty more.\n\nI'm Pete LePage. Let's dive in and\nsee what's new for developers in Chrome 102.\n# File Handling API\nThe File Handling API allows installed PWAs to register with the OS as a file\nhandler. Once registered, a user can click on a file to open it with the\ninstalled PWA. This is perfect for PWAs that interact with files, for example,\nimage editors, IDEs, text editors, and so on.\nTo add file handling functionality to your PWA, you'll need to update your\nweb app manifest, adding a file_handlers array with details about the types\nof files your PWA can handle. You'll need to specify the URL to open, the\nmime types, an icon for the file type, and the launch type. The launch type\ndefines whether multiple files should be opened in a single client, or in\nmultiple clients.\n\"file_handlers\": [  {    \"action\": \"/open-csv\",    \"accept\": {\"text/csv\": [\".csv\"]},    \"icons\": [      {        \"src\": \"csv-icon.png\",        \"sizes\": \"256x256\",        \"type\": \"image/png\"      }    ],    \"launch_type\": \"single-client\"  }]\nThen, to access those files when the PWA is launched, you need to specify a\nconsumer for the launchQueue object. Launches are queued until they are\nhandled by the consumer.\n// Access from Window.launchQueue.launchQueue.setConsumer((launchParams) => {  if (!launchParams.files.length) {    // Nothing to do when the queue is empty.    return;  }  for (const fileHandle of launchParams.files) {    // Handle the file.    openFile(fileHandle);  }});\nCheck out Let installed web applications be file handlers\nfor all the details.\n# The inert property\nThe inert property is a global HTML attribute that tells the browser to\nignore user input events for an element, including focus events, and events\nfrom assistive technologies.\nThis can be useful when building UIs. For example, with a modal dialog, you\nwant to \"trap\" the focus inside the modal when it's visible. Or, for a drawer\nthat is not always visible to the user, adding inert ensures that while\nthe drawer is offscreen, a keyboard user cannot accidentally interact with it.\n<div>  <label for=\"button1\">Button 1</label>  <button id=\"button1\">I am not inert</button></div><div inert>  <label for=\"button2\">Button 2</label>  <button id=\"button2\">I am inert</button></div>\nHere, inert has been declared on the second <div> element, so all content\ncontained within, including the <button> and <label>, cannot receive\nfocus or be clicked.\ninert is supported in Chrome 102, and is coming to both Firefox and Safari.\nCheck out Introducing inert for more details.\n# Navigation API\nMany web apps depend on the ability to update the URL without a page\nnavigation. Today, we use the History API, but it's clunky and\ndoesn't always work as expected. Rather than trying to patch the History API's\nrough edges, the Navigation API completely overhauls this space.\nTo use the Navigation API, add a navigate listener on the global navigation\nobject.\nnavigation.addEventListener('navigate', (navigateEvent) => {  switch (navigateEvent.destination.url) {    case 'https://example.com/':      navigateEvent.transitionWhile(loadIndexPage());      break;    case 'https://example.com/cats':      navigateEvent.transitionWhile(loadCatsPage());      break;  }});\nThe event is fundamentally centralized and it will fire for all types of\nnavigations, whether the user performed an action, such as clicking a link,\nsubmitting a form, or going back and forward, even when navigation is\ntriggered programmatically. In most cases, it lets your code override the\nbrowser's default behavior for that action.\n\n  \n\nCheck out the Modern client-side routing: the Navigation API\nfor complete details and a demo you can try out.\n# And more!\nOf course there's plenty more.\n\nThe new Sanitizer API aims to build a robust processor for arbitrary strings\nto be safely inserted into a page.\nThe hidden=until-found attribute makes it possible for the browser to\nsearch text in hidden regions, and reveal that section if a match is found.\n\n# Further reading\nThis covers only some of the key highlights. Check the links below for\nadditional changes in Chrome 102.\n\nWhat's new in Chrome DevTools (102)\nChrome 102 deprecations and removals\nChromeStatus.com updates for Chrome 102\nChromium source repository change list\nChrome release calendar\n\n# Subscribe\nTo stay up to date, subscribe to the\nChrome Developers YouTube channel,\nand you'll get an email notification whenever we launch a new video.\nI'm Pete LePage, and as soon as Chrome 103 is released, I'll be right here to\ntell you what's new in Chrome!",
      "content_html": "<div class=\"youtube\">\n  <iframe class=\"youtube__embed\" src=\"https://www.youtube.com/embed/AGyP85QEBzY\" title=\"youtube embed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n</div>\n<p>Here's what you need to know:</p>\n<ul>\n<li>Installed PWAs can register as <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#file-handlers\">file handlers</a>, making it\neasy for users to open files directly from disk.</li>\n<li>The <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#inert\"><code>inert</code></a> attribute allows you to mark parts of the DOM as inert.</li>\n<li>The <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#navigation-api\">Navigation API</a> makes it easier for single page apps\nto handle navigation and updates to the URL</li>\n<li>And there's plenty <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#more\">more</a>.</li>\n</ul>\n<p>I'm <a href=\"https://petelepage.com/\">Pete LePage</a>. Let's dive in and\nsee what's new for developers in Chrome 102.</p>\n<h2 id=\"file-handlers\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#file-handlers\" aria-hidden=\"true\">#</a> File Handling API</h2>\n<p>The File Handling API allows installed PWAs to register with the OS as a file\nhandler. Once registered, a user can click on a file to open it with the\ninstalled PWA. This is perfect for PWAs that interact with files, for example,\nimage editors, IDEs, text editors, and so on.</p>\n<p>To add file handling functionality to your PWA, you'll need to update your\nweb app manifest, adding a <code>file_handlers</code> array with details about the types\nof files your PWA can handle. You'll need to specify the URL to open, the\nmime types, an icon for the file type, and the launch type. The launch type\ndefines whether multiple files should be opened in a single client, or in\nmultiple clients.</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"file_handlers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br />  <span class=\"token punctuation\">{</span><br />    <span class=\"token property\">\"action\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/open-csv\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"accept\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"text/csv\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".csv\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br />      <span class=\"token punctuation\">{</span><br />        <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"csv-icon.png\"</span><span class=\"token punctuation\">,</span><br />        <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"256x256\"</span><span class=\"token punctuation\">,</span><br />        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span><br />      <span class=\"token punctuation\">}</span><br />    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br />    <span class=\"token property\">\"launch_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"single-client\"</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">]</span></code></pre>\n<p>Then, to access those files when the PWA is launched, you need to specify a\nconsumer for the <code>launchQueue</code> object. Launches are queued until they are\nhandled by the consumer.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Access from Window.launchQueue.</span><br />launchQueue<span class=\"token punctuation\">.</span><span class=\"token function\">setConsumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">launchParams</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br />  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>launchParams<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token comment\">// Nothing to do when the queue is empty.</span><br />    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br />  <span class=\"token punctuation\">}</span><br />  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> fileHandle <span class=\"token keyword\">of</span> launchParams<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token comment\">// Handle the file.</span><br />    <span class=\"token function\">openFile</span><span class=\"token punctuation\">(</span>fileHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Check out <a href=\"https://web.dev/file-handling/\">Let installed web applications be file handlers</a>\nfor all the details.</p>\n<h2 id=\"inert\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#inert\" aria-hidden=\"true\">#</a> The <code>inert</code> property</h2>\n<p>The <code>inert</code> property is a global HTML attribute that tells the browser to\nignore user input events for an element, including focus events, and events\nfrom assistive technologies.</p>\n<p>This can be useful when building UIs. For example, with a modal dialog, you\nwant to &quot;trap&quot; the focus inside the modal when it's visible. Or, for a drawer\nthat is not always visible to the user, adding <code>inert</code> ensures that while\nthe drawer is offscreen, a keyboard user cannot accidentally interact with it.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>I am not inert<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">inert</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>I am inert<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Here, <code>inert</code> has been declared on the second <code>&lt;div&gt;</code> element, so all content\ncontained within, including the <code>&lt;button&gt;</code> and <code>&lt;label&gt;</code>, cannot receive\nfocus or be clicked.</p>\n<p><code>inert</code> is supported in Chrome 102, and is coming to both Firefox and Safari.</p>\n<p>Check out <a href=\"https://developer.chrome.com/articles/inert/\">Introducing inert</a> for more details.</p>\n<h2 id=\"navigation-api\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#navigation-api\" aria-hidden=\"true\">#</a> Navigation API</h2>\n<p>Many web apps depend on the ability to update the URL without a page\nnavigation. Today, we use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API\">History API</a>, but it's clunky and\ndoesn't always work as expected. Rather than trying to patch the History API's\nrough edges, the Navigation API completely overhauls this space.</p>\n<p>To use the Navigation API, add a <code>navigate</code> listener on the global <code>navigation</code>\nobject.</p>\n<pre class=\"language-js\"><code class=\"language-js\">navigation<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigate'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">navigateEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br />  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>navigateEvent<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token keyword\">case</span> <span class=\"token string\">'https://example.com/'</span><span class=\"token operator\">:</span><br />      navigateEvent<span class=\"token punctuation\">.</span><span class=\"token function\">transitionWhile</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadIndexPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><br />    <span class=\"token keyword\">case</span> <span class=\"token string\">'https://example.com/cats'</span><span class=\"token operator\">:</span><br />      navigateEvent<span class=\"token punctuation\">.</span><span class=\"token function\">transitionWhile</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadCatsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>The event is fundamentally centralized and it will fire for all types of\nnavigations, whether the user performed an action, such as clicking a link,\nsubmitting a form, or going back and forward, even when navigation is\ntriggered programmatically. In most cases, it lets your code override the\nbrowser's default behavior for that action.</p>\n<div class=\"youtube\">\n  <iframe class=\"youtube__embed\" src=\"https://www.youtube.com/embed/cgKUMRPAliw\" title=\"youtube embed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n</div>\n<p>Check out the <a href=\"https://developer.chrome.com/docs/web-platform/navigation-api/\">Modern client-side routing: the Navigation API</a>\nfor complete details and a demo you can try out.</p>\n<h2 id=\"more\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#more\" aria-hidden=\"true\">#</a> And more!</h2>\n<p>Of course there's plenty more.</p>\n<ul>\n<li>The new Sanitizer API aims to build a robust processor for arbitrary strings\nto be safely inserted into a page.</li>\n<li>The <code>hidden=until-found</code> attribute makes it possible for the browser to\nsearch text in hidden regions, and reveal that section if a match is found.</li>\n</ul>\n<h2 id=\"further-reading\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#further-reading\" aria-hidden=\"true\">#</a> Further reading</h2>\n<p>This covers only some of the key highlights. Check the links below for\nadditional changes in Chrome 102.</p>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/\">What's new in Chrome DevTools (102)</a></li>\n<li><a href=\"https://developer.chrome.com/blog/deps-rems-102/\">Chrome 102 deprecations and removals</a></li>\n<li><a href=\"https://www.chromestatus.com/features#milestone%3D102\">ChromeStatus.com updates for Chrome 102</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+log/101.0.4951.49..102.0.5005.113\">Chromium source repository change list</a></li>\n<li><a href=\"https://chromiumdash.appspot.com/schedule\">Chrome release calendar</a></li>\n</ul>\n<h2 id=\"subscribe\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-102/#subscribe\" aria-hidden=\"true\">#</a> Subscribe</h2>\n<p>To stay up to date, <a href=\"https://goo.gl/6FP1a5\">subscribe</a> to the\n<a href=\"https://www.youtube.com/user/ChromeDevelopers/\">Chrome Developers YouTube channel</a>,\nand you'll get an email notification whenever we launch a new video.</p>\n<p>I'm Pete LePage, and as soon as Chrome 103 is released, I'll be right here to\ntell you what's new in Chrome!</p>",
      "content_text": "\n  \n\nHere's what you need to know:\n\nInstalled PWAs can register as file handlers, making it\neasy for users to open files directly from disk.\nThe inert attribute allows you to mark parts of the DOM as inert.\nThe Navigation API makes it easier for single page apps\nto handle navigation and updates to the URL\nAnd there's plenty more.\n\nI'm Pete LePage. Let's dive in and\nsee what's new for developers in Chrome 102.\n# File Handling API\nThe File Handling API allows installed PWAs to register with the OS as a file\nhandler. Once registered, a user can click on a file to open it with the\ninstalled PWA. This is perfect for PWAs that interact with files, for example,\nimage editors, IDEs, text editors, and so on.\nTo add file handling functionality to your PWA, you'll need to update your\nweb app manifest, adding a file_handlers array with details about the types\nof files your PWA can handle. You'll need to specify the URL to open, the\nmime types, an icon for the file type, and the launch type. The launch type\ndefines whether multiple files should be opened in a single client, or in\nmultiple clients.\n\"file_handlers\": [  {    \"action\": \"/open-csv\",    \"accept\": {\"text/csv\": [\".csv\"]},    \"icons\": [      {        \"src\": \"csv-icon.png\",        \"sizes\": \"256x256\",        \"type\": \"image/png\"      }    ],    \"launch_type\": \"single-client\"  }]\nThen, to access those files when the PWA is launched, you need to specify a\nconsumer for the launchQueue object. Launches are queued until they are\nhandled by the consumer.\n// Access from Window.launchQueue.launchQueue.setConsumer((launchParams) => {  if (!launchParams.files.length) {    // Nothing to do when the queue is empty.    return;  }  for (const fileHandle of launchParams.files) {    // Handle the file.    openFile(fileHandle);  }});\nCheck out Let installed web applications be file handlers\nfor all the details.\n# The inert property\nThe inert property is a global HTML attribute that tells the browser to\nignore user input events for an element, including focus events, and events\nfrom assistive technologies.\nThis can be useful when building UIs. For example, with a modal dialog, you\nwant to \"trap\" the focus inside the modal when it's visible. Or, for a drawer\nthat is not always visible to the user, adding inert ensures that while\nthe drawer is offscreen, a keyboard user cannot accidentally interact with it.\n<div>  <label for=\"button1\">Button 1</label>  <button id=\"button1\">I am not inert</button></div><div inert>  <label for=\"button2\">Button 2</label>  <button id=\"button2\">I am inert</button></div>\nHere, inert has been declared on the second <div> element, so all content\ncontained within, including the <button> and <label>, cannot receive\nfocus or be clicked.\ninert is supported in Chrome 102, and is coming to both Firefox and Safari.\nCheck out Introducing inert for more details.\n# Navigation API\nMany web apps depend on the ability to update the URL without a page\nnavigation. Today, we use the History API, but it's clunky and\ndoesn't always work as expected. Rather than trying to patch the History API's\nrough edges, the Navigation API completely overhauls this space.\nTo use the Navigation API, add a navigate listener on the global navigation\nobject.\nnavigation.addEventListener('navigate', (navigateEvent) => {  switch (navigateEvent.destination.url) {    case 'https://example.com/':      navigateEvent.transitionWhile(loadIndexPage());      break;    case 'https://example.com/cats':      navigateEvent.transitionWhile(loadCatsPage());      break;  }});\nThe event is fundamentally centralized and it will fire for all types of\nnavigations, whether the user performed an action, such as clicking a link,\nsubmitting a form, or going back and forward, even when navigation is\ntriggered programmatically. In most cases, it lets your code override the\nbrowser's default behavior for that action.\n\n  \n\nCheck out the Modern client-side routing: the Navigation API\nfor complete details and a demo you can try out.\n# And more!\nOf course there's plenty more.\n\nThe new Sanitizer API aims to build a robust processor for arbitrary strings\nto be safely inserted into a page.\nThe hidden=until-found attribute makes it possible for the browser to\nsearch text in hidden regions, and reveal that section if a match is found.\n\n# Further reading\nThis covers only some of the key highlights. Check the links below for\nadditional changes in Chrome 102.\n\nWhat's new in Chrome DevTools (102)\nChrome 102 deprecations and removals\nChromeStatus.com updates for Chrome 102\nChromium source repository change list\nChrome release calendar\n\n# Subscribe\nTo stay up to date, subscribe to the\nChrome Developers YouTube channel,\nand you'll get an email notification whenever we launch a new video.\nI'm Pete LePage, and as soon as Chrome 103 is released, I'll be right here to\ntell you what's new in Chrome!",
      "date_published": "2022-06-27T04:12:57.675Z",
      "date_modified": "2022-06-09T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/generate-summary-reports/",
      "url": "https://developer.chrome.com/en/blog/generate-summary-reports/",
      "title": "Generate summary reports with the aggregation service",
      "summary": "You can now experiment and participate in an origin\ntrial for Attribution\nReporting. There are a number of available developer resources and code samples\nto get started.\nTo generate summary reports in the origin trial, you'll first need to set up\nthe aggregation service. This blog post gives an overview of those steps.\n\nIf you ran an origin trial with this API in 2021, follow the migration\nguide\nto prepare for the latest origin trial.\n\n# Key terms\nIf you haven't already, we recommend you read the overview of Attribution\nReporting and more\nabout summary reports\nbefore learning about the aggregation service set up.\n\nA summary report is a compiled output for the Attribution Reporting API,\nwhich aggregates information about a group of users. Summary reports offer\ndetailed conversion data, such as purchase value and cart contents, with flexibility for click and view data.\nAn aggregatable report is an encrypted report, generated by an individual\nuser's browser. These contain data about individual conversions and\nassociated metrics, as defined by the advertiser or adtech. Learn more about\naggregatable reports.\nThe aggregation service processes data from aggregatable reports to\ncreate a summary report.\n\n# Set up the aggregation service\nThe aggregation service\nproposal\nasks each adtech provider to operate their own instance of the aggregation\nservice in a Trusted Execution Environment (TEE) deployed on a cloud service\nthat supports needed security features.\nFor the initial implementation and origin trial, adtechs can set up\nlocal testing\nor test in TEEs with Amazon Web Services (AWS):\n\nRegister for the Privacy Sandbox Relevance and Measurement origin trial (OT).\nCreate or have an Amazon Web Services account.\nComplete the aggregation service\nonboarding form. After filling out\nthis form we will send a verification email and instructions for how to set\nup the aggregation service.\n\nBoth the local testing tool and the aggregation service running on AWS expect\naggregatable reports to be batched in the\nApache Avro format.\nReview code snippets\nwhich demonstrate how to collect and batch aggregatable reports.\n# Generate summary reports with TEEs on AWS\n\nThis is a general overview of how to generate summary reports in TEEs. Read the\ndetailed developer documentation on testing the aggregation service with\nAWS.\n\nTo generate summary reports, you'll need to set up the aggregation service in\nAWS with Terraform. Terraform will help provision,\nmanage, and decommission the aggregation service on AWS\nNitro Enclave instances.\n\nInstall\nand set up\nthe latest AWS client.\nSet up Terraform.\nDownload the aggregation service\ndependencies.\nSet up a deployment\nenvironment.\nTest your\nsystem.\n\n# Get support\nFor more support with the Attribution Reporting API:\n\nOpen a new Issue on the Privacy Sandbox Developer Support GitHub\nrepository.\nSelect the Issue template for Attribution Reporting.\nOr join the Attribution Reporting mailing list for\ndevelopers\nand ask there.\n\nIf you notice any unexpected behavior:\n\nView Chrome\nissues reported for the API implementation.\nOpen a Chrome bug.\nRaise a new Issue for the Trusted Execution Aggregation\nService.\n",
      "content_html": "<p>You can now <a href=\"https://developer.chrome.com/docs/privacy-sandbox/attribution-reporting-experiment/\">experiment and participate in an origin\ntrial</a> for Attribution\nReporting. There are a number of available developer resources and code samples\nto get started.</p>\n<p>To generate summary reports in the origin trial, you'll first need to set up\nthe aggregation service. This blog post gives an overview of those steps.</p>\n<div class=\"aside aside--note\">\n<p>If you ran an origin trial with this API in 2021, follow the <a href=\"https://docs.google.com/document/d/1NY7SScCYcPc9v5wtf_fVAikFxGQTAFvwldhExN1P03Y/edit?usp=sharing\">migration\nguide</a>\nto prepare for the latest origin trial.</p>\n</div>\n<h2 id=\"key-terms\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/generate-summary-reports/#key-terms\" aria-hidden=\"true\">#</a> Key terms</h2>\n<p>If you haven't already, we recommend you read the <a href=\"https://developer.chrome.com/docs/privacy-sandbox/attribution-reporting-introduction/\">overview of Attribution\nReporting</a> and more\nabout <a href=\"https://developer.chrome.com/docs/privacy-sandbox/attribution-reporting/summary-reports/\">summary reports</a>\nbefore learning about the aggregation service set up.</p>\n<ul>\n<li>A <em>summary report</em> is a compiled output for the Attribution Reporting API,\nwhich aggregates information about a group of users. Summary reports offer\ndetailed conversion data, such as purchase value and cart contents, with flexibility for click and view data.</li>\n<li>An <em>aggregatable report</em> is an encrypted report, generated by an individual\nuser's browser. These contain data about individual conversions and\nassociated metrics, as defined by the advertiser or adtech. Learn more about\n<a href=\"https://github.com/WICG/conversion-measurement-api/blob/main/AGGREGATE.md\">aggregatable reports</a>.</li>\n<li>The <em>aggregation service</em> processes data from aggregatable reports to\ncreate a summary report.</li>\n</ul>\n<h2 id=\"set-up-the-aggregation-service\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/generate-summary-reports/#set-up-the-aggregation-service\" aria-hidden=\"true\">#</a> Set up the aggregation service</h2>\n<p>The <a href=\"https://github.com/WICG/conversion-measurement-api/blob/main/AGGREGATION_SERVICE_TEE.md\">aggregation service\nproposal</a>\nasks each adtech provider to operate their own instance of the aggregation\nservice in a Trusted Execution Environment (TEE) deployed on a cloud service\nthat supports needed security features.</p>\n<p>For the initial implementation and origin trial, adtechs can set up\n<a href=\"https://github.com/google/trusted-execution-aggregation-service/#set-up-local-testing\">local testing</a>\nor <a href=\"https://github.com/google/trusted-execution-aggregation-service/#test-on-aws-with-support-for-encrypted-reports\">test in TEEs with Amazon Web Services</a> (AWS):</p>\n<ol>\n<li><a href=\"https://developer.chrome.com/origintrials/#/view_trial/771241436187197441\">Register</a> for the Privacy Sandbox Relevance and Measurement origin trial (OT).</li>\n<li>Create or have an <a href=\"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html\">Amazon Web Services account</a>.</li>\n<li>Complete the aggregation service\n<a href=\"https://forms.gle/EHoecersGKhpcLPNA\">onboarding form</a>. After filling out\nthis form we will send a verification email and instructions for how to set\nup the aggregation service.</li>\n</ol>\n<p>Both the local testing tool and the aggregation service running on AWS expect\naggregatable reports to be batched in the\n<a href=\"https://avro.apache.org/\">Apache Avro</a> format.\n<a href=\"https://github.com/google/trusted-execution-aggregation-service/blob/main/COLLECTING.md\">Review code snippets</a>\nwhich demonstrate how to collect and batch aggregatable reports.</p>\n<h2 id=\"generate-summary-reports-with-tees-on-aws\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/generate-summary-reports/#generate-summary-reports-with-tees-on-aws\" aria-hidden=\"true\">#</a> Generate summary reports with TEEs on AWS</h2>\n<div class=\"aside aside--note\">\n<p>This is a general overview of how to generate summary reports in TEEs. Read the\ndetailed developer documentation on <a href=\"https://github.com/google/trusted-execution-aggregation-service/#test-on-aws-with-support-for-encrypted-reports\">testing the aggregation service with\nAWS</a>.</p>\n</div>\n<p>To generate summary reports, you'll need to set up the aggregation service in\nAWS with <a href=\"https://www.terraform.io/\">Terraform</a>. Terraform will help provision,\nmanage, and decommission the aggregation service on AWS\n<a href=\"https://aws.amazon.com/ec2/nitro/nitro-enclaves/\">Nitro Enclave instances</a>.</p>\n<ol>\n<li><a href=\"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html\">Install</a>\nand <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html\">set up</a>\nthe latest AWS client.</li>\n<li><a href=\"https://github.com/google/trusted-execution-aggregation-service/#set-up-terraform\">Set up Terraform</a>.</li>\n<li>Download the <a href=\"https://github.com/google/trusted-execution-aggregation-service/#download-dependencies\">aggregation service\ndependencies</a>.</li>\n<li>Set up a <a href=\"https://github.com/google/trusted-execution-aggregation-service/#set-up-your-deployment-environment\">deployment\nenvironment</a>.</li>\n<li><a href=\"https://github.com/google/trusted-execution-aggregation-service/#testing-the-system\">Test your\nsystem</a>.</li>\n</ol>\n<h2 id=\"get-support\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/generate-summary-reports/#get-support\" aria-hidden=\"true\">#</a> Get support</h2>\n<p>For more support with the Attribution Reporting API:</p>\n<ul>\n<li>Open a new Issue on the <a href=\"https://github.com/GoogleChromeLabs/privacy-sandbox-dev-support/issues/new/choose\">Privacy Sandbox Developer Support GitHub\nrepository</a>.\nSelect the Issue template for Attribution Reporting.</li>\n<li>Or <a href=\"https://groups.google.com/u/1/a/chromium.org/g/attribution-reporting-api-dev\">join the Attribution Reporting mailing list for\ndevelopers</a>\nand ask there.</li>\n</ul>\n<p>If you notice any unexpected behavior:</p>\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/list?q=component%3AInternals%3EConversionMeasurement\">View Chrome\nissues</a> reported for the API implementation.</li>\n<li>Open a <a href=\"https://crbug.com/new\">Chrome bug</a>.</li>\n<li>Raise a new Issue for the <a href=\"https://github.com/google/trusted-execution-aggregation-service/issues\">Trusted Execution Aggregation\nService</a>.</li>\n</ul>",
      "content_text": "You can now experiment and participate in an origin\ntrial for Attribution\nReporting. There are a number of available developer resources and code samples\nto get started.\nTo generate summary reports in the origin trial, you'll first need to set up\nthe aggregation service. This blog post gives an overview of those steps.\n\nIf you ran an origin trial with this API in 2021, follow the migration\nguide\nto prepare for the latest origin trial.\n\n# Key terms\nIf you haven't already, we recommend you read the overview of Attribution\nReporting and more\nabout summary reports\nbefore learning about the aggregation service set up.\n\nA summary report is a compiled output for the Attribution Reporting API,\nwhich aggregates information about a group of users. Summary reports offer\ndetailed conversion data, such as purchase value and cart contents, with flexibility for click and view data.\nAn aggregatable report is an encrypted report, generated by an individual\nuser's browser. These contain data about individual conversions and\nassociated metrics, as defined by the advertiser or adtech. Learn more about\naggregatable reports.\nThe aggregation service processes data from aggregatable reports to\ncreate a summary report.\n\n# Set up the aggregation service\nThe aggregation service\nproposal\nasks each adtech provider to operate their own instance of the aggregation\nservice in a Trusted Execution Environment (TEE) deployed on a cloud service\nthat supports needed security features.\nFor the initial implementation and origin trial, adtechs can set up\nlocal testing\nor test in TEEs with Amazon Web Services (AWS):\n\nRegister for the Privacy Sandbox Relevance and Measurement origin trial (OT).\nCreate or have an Amazon Web Services account.\nComplete the aggregation service\nonboarding form. After filling out\nthis form we will send a verification email and instructions for how to set\nup the aggregation service.\n\nBoth the local testing tool and the aggregation service running on AWS expect\naggregatable reports to be batched in the\nApache Avro format.\nReview code snippets\nwhich demonstrate how to collect and batch aggregatable reports.\n# Generate summary reports with TEEs on AWS\n\nThis is a general overview of how to generate summary reports in TEEs. Read the\ndetailed developer documentation on testing the aggregation service with\nAWS.\n\nTo generate summary reports, you'll need to set up the aggregation service in\nAWS with Terraform. Terraform will help provision,\nmanage, and decommission the aggregation service on AWS\nNitro Enclave instances.\n\nInstall\nand set up\nthe latest AWS client.\nSet up Terraform.\nDownload the aggregation service\ndependencies.\nSet up a deployment\nenvironment.\nTest your\nsystem.\n\n# Get support\nFor more support with the Attribution Reporting API:\n\nOpen a new Issue on the Privacy Sandbox Developer Support GitHub\nrepository.\nSelect the Issue template for Attribution Reporting.\nOr join the Attribution Reporting mailing list for\ndevelopers\nand ask there.\n\nIf you notice any unexpected behavior:\n\nView Chrome\nissues reported for the API implementation.\nOpen a Chrome bug.\nRaise a new Issue for the Trusted Execution Aggregation\nService.\n",
      "date_published": "2022-06-27T04:12:57.675Z",
      "date_modified": "2022-06-06T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/deps-rems-103/",
      "url": "https://developer.chrome.com/en/blog/deps-rems-103/",
      "title": "Deprecations and removals in Chrome 103",
      "summary": "\nVisit ChromeStatus.com for lists of current deprecations and previous removals.\n\nChrome 103 beta was released on May 26, 2022 and is expected to become the\nstable version in late June, 2022.\n# Block external protocol in sandboxed iframes\nSandboxed iframes are not blocked from opening external applications. Currently, developers sandbox untrusted content and block user navigation. Blocking probably should have also included links to external apps or to the Play store. This has now been fixed.\nSites that need navigation can add the following values to the <iframe> element's sandbox property:\n\nallow-popups\nallow-top-navigation\nallow-top-navigation-with-user-activation\n\n# Remove Battery Status API on insecure origins\nThe Battery Status API is no longer supported on insecure contexts, specifically HTTP pages and HTTPS iframes embedded in HTTP pages. This is being removed in accordance with our policy of deprecating powerful features on insecure origins, This also follows a spec change.\n# Remove  element\nGiven the removal of plugins from the web platform, and the relative lack of use of <param>, it is being removed from the web platform.\n# Deprecation policy\nTo keep the platform healthy, we sometimes remove APIs from the Web Platform\nwhich have run their course. There can be many reasons why we would remove an\nAPI, such as:\n\nThey are superseded by newer APIs.\nThey are updated to reflect changes to specifications to bring alignment and\nconsistency with other browsers.\nThey are early experiments that never came to fruition in other browsers and\nthus can increase the burden of support for web developers.\n\nSome of these changes will have an effect on a very small number of sites. To\nmitigate issues ahead of time, we try to give developers advanced notice so they\ncan make the required changes to keep their sites running.\nChrome currently has a process for deprecations and removals of\nAPI's,\nessentially:\n\nAnnounce on the\nblink-dev\nmailing list.\nSet warnings and give time scales in the Chrome DevTools Console when usage\nis detected on the page.\nWait, monitor, and then remove the feature as usage drops.\n\nYou can find a list of all deprecated features on chromestatus.com using the\ndeprecated filter and\nremoved features by applying the removed\nfilter. We will also try to\nsummarize some of the changes, reasoning, and migration paths in these posts.",
      "content_html": "<div class=\"aside aside--note\">\n<p>Visit ChromeStatus.com for lists of <a href=\"https://www.chromestatus.com/features#browsers.chrome.status%3A%22Deprecated%22\">current deprecations</a> and <a href=\"https://www.chromestatus.com/features#browsers.chrome.status:%22Removed%22\">previous removals</a>.</p>\n</div>\n<p>Chrome 103 beta was released on May 26, 2022 and is expected to become the\nstable version in late June, 2022.</p>\n<h2 id=\"block-external-protocol-in-sandboxed-iframes\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-103/#block-external-protocol-in-sandboxed-iframes\" aria-hidden=\"true\">#</a> Block external protocol in sandboxed iframes</h2>\n<p>Sandboxed iframes are not blocked from opening external applications. Currently, developers sandbox untrusted content and block user navigation. Blocking probably should have also included links to external apps or to the Play store. <a href=\"https://chromestatus.com/feature/5680742077038592\">This has now been fixed</a>.</p>\n<p>Sites that need navigation can add the following values to the <code>&lt;iframe&gt;</code> element's sandbox property:</p>\n<ul>\n<li><code>allow-popups</code></li>\n<li><code>allow-top-navigation</code></li>\n<li><code>allow-top-navigation-with-user-activation</code></li>\n</ul>\n<h2 id=\"remove-battery-status-api-on-insecure-origins\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-103/#remove-battery-status-api-on-insecure-origins\" aria-hidden=\"true\">#</a> Remove Battery Status API on insecure origins</h2>\n<p>The Battery Status API is <a href=\"https://chromestatus.com/feature/4878376799043584\">no longer supported on insecure contexts</a>, specifically HTTP pages and HTTPS iframes embedded in HTTP pages. This is being removed in accordance with our policy of <a href=\"https://www.chromium.org/Home/chromium-security/deprecating-powerful-features-on-insecure-origins\">deprecating powerful features on insecure origins</a>, This also follows <a href=\"https://github.com/w3c/battery/issues/15\">a spec change</a>.</p>\n<h2 id=\"remove-element\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-103/#remove-element\" aria-hidden=\"true\">#</a> Remove <param /> element</h2>\n<p>Given the removal of plugins from the web platform, and the relative lack of use of <code>&lt;param&gt;</code>, it is being <a href=\"https://chromestatus.com/feature/6283184588193792\">removed from the web platform</a>.</p>\n<h2 id=\"deprecation-policy\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-103/#deprecation-policy\" aria-hidden=\"true\">#</a> Deprecation policy</h2>\n<p>To keep the platform healthy, we sometimes remove APIs from the Web Platform\nwhich have run their course. There can be many reasons why we would remove an\nAPI, such as:</p>\n<ul>\n<li>They are superseded by newer APIs.</li>\n<li>They are updated to reflect changes to specifications to bring alignment and\nconsistency with other browsers.</li>\n<li>They are early experiments that never came to fruition in other browsers and\nthus can increase the burden of support for web developers.</li>\n</ul>\n<p>Some of these changes will have an effect on a very small number of sites. To\nmitigate issues ahead of time, we try to give developers advanced notice so they\ncan make the required changes to keep their sites running.</p>\n<p>Chrome currently has a <a href=\"http://www.chromium.org/blink#TOC-Launch-Process:-Deprecation\">process for deprecations and removals of\nAPI's</a>,\nessentially:</p>\n<ul>\n<li>Announce on the\n<a href=\"https://groups.google.com/a/chromium.org/forum/#!forum/blink-dev\">blink-dev</a>\nmailing list.</li>\n<li>Set warnings and give time scales in the Chrome DevTools Console when usage\nis detected on the page.</li>\n<li>Wait, monitor, and then remove the feature as usage drops.</li>\n</ul>\n<p>You can find a list of all deprecated features on chromestatus.com using the\n<a href=\"https://www.chromestatus.com/features#deprecated\">deprecated filter</a> and\nremoved features by applying the <a href=\"https://www.chromestatus.com/features#removed\">removed\nfilter</a>. We will also try to\nsummarize some of the changes, reasoning, and migration paths in these posts.</p>",
      "content_text": "\nVisit ChromeStatus.com for lists of current deprecations and previous removals.\n\nChrome 103 beta was released on May 26, 2022 and is expected to become the\nstable version in late June, 2022.\n# Block external protocol in sandboxed iframes\nSandboxed iframes are not blocked from opening external applications. Currently, developers sandbox untrusted content and block user navigation. Blocking probably should have also included links to external apps or to the Play store. This has now been fixed.\nSites that need navigation can add the following values to the <iframe> element's sandbox property:\n\nallow-popups\nallow-top-navigation\nallow-top-navigation-with-user-activation\n\n# Remove Battery Status API on insecure origins\nThe Battery Status API is no longer supported on insecure contexts, specifically HTTP pages and HTTPS iframes embedded in HTTP pages. This is being removed in accordance with our policy of deprecating powerful features on insecure origins, This also follows a spec change.\n# Remove  element\nGiven the removal of plugins from the web platform, and the relative lack of use of <param>, it is being removed from the web platform.\n# Deprecation policy\nTo keep the platform healthy, we sometimes remove APIs from the Web Platform\nwhich have run their course. There can be many reasons why we would remove an\nAPI, such as:\n\nThey are superseded by newer APIs.\nThey are updated to reflect changes to specifications to bring alignment and\nconsistency with other browsers.\nThey are early experiments that never came to fruition in other browsers and\nthus can increase the burden of support for web developers.\n\nSome of these changes will have an effect on a very small number of sites. To\nmitigate issues ahead of time, we try to give developers advanced notice so they\ncan make the required changes to keep their sites running.\nChrome currently has a process for deprecations and removals of\nAPI's,\nessentially:\n\nAnnounce on the\nblink-dev\nmailing list.\nSet warnings and give time scales in the Chrome DevTools Console when usage\nis detected on the page.\nWait, monitor, and then remove the feature as usage drops.\n\nYou can find a list of all deprecated features on chromestatus.com using the\ndeprecated filter and\nremoved features by applying the removed\nfilter. We will also try to\nsummarize some of the changes, reasoning, and migration paths in these posts.",
      "date_published": "2022-06-27T04:12:57.675Z",
      "date_modified": "2022-05-26T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/chips-origin-trial-extended/",
      "url": "https://developer.chrome.com/en/blog/chips-origin-trial-extended/",
      "title": "Cookies Having Independent State (CHIPS) origin trial extended",
      "summary": "CHIPS is a Privacy\nSandbox proposal that introduces a mechanism to opt-in to having third-party\ncookies partitioned by top-level site using a new cookie attribute,\nPartitioned.\nThe experiment started in Chrome 100 on March 29, 2022 and was scheduled to run\nuntil June 14, 2022.\nTo give developers more time to test the feature and gather more feedback, an\nextension to the experiment will run through Chrome 104 until the release of Chrome 105, on August 30, 2022.\nStarting in version 103, Chrome will include an alternative CHIPS origin trial design for HTTP\ncookies, which should enable an opt-in mechanism that will make deployment\neasier for large organizations.\nIn the new design, sending Accept-CH: Sec-CH-Partitioned-Cookies header will\nno longer be required to enroll in the origin trial. Sites will only need to\nsend the Origin-Trial header with their CHIPS origin trial token when they are sending\nresponses that include the Set-Cookie header with the Partitioned\nattribute.\nTo enroll in the origin trial and start experimenting, head over to\nCHIPS origin trial instructions.",
      "content_html": "<p><a href=\"https://developer.chrome.com/docs/privacy-sandbox/chips/\">CHIPS</a> is a Privacy\nSandbox proposal that introduces a mechanism to opt-in to having third-party\ncookies partitioned by top-level site using a new cookie attribute,\n<code>Partitioned</code>.</p>\n<p>The experiment started in Chrome 100 on March 29, 2022 and was scheduled to run\nuntil June 14, 2022.</p>\n<p>To give developers more time to test the feature and gather more feedback, an\n<a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/kZRtetS8jsY\">extension to the experiment will run through Chrome 104</a> until the release of Chrome 105, on August 30, 2022.</p>\n<p>Starting in version 103, Chrome will include an alternative CHIPS origin trial design for HTTP\ncookies, which should enable an opt-in mechanism that will make deployment\neasier for large organizations.</p>\n<p>In the new design, sending <code>Accept-CH: Sec-CH-Partitioned-Cookies</code> header will\nno longer be required to enroll in the origin trial. Sites will only need to\nsend the <code>Origin-Trial</code> header with their CHIPS origin trial token when they are sending\nresponses that include the <code>Set-Cookie</code> header with the <code>Partitioned</code>\nattribute.</p>\n<p>To enroll in the origin trial and start experimenting, head over to\n<a href=\"https://developer.chrome.com/blog/chips-origin-trial/\">CHIPS origin trial instructions</a>.</p>",
      "content_text": "CHIPS is a Privacy\nSandbox proposal that introduces a mechanism to opt-in to having third-party\ncookies partitioned by top-level site using a new cookie attribute,\nPartitioned.\nThe experiment started in Chrome 100 on March 29, 2022 and was scheduled to run\nuntil June 14, 2022.\nTo give developers more time to test the feature and gather more feedback, an\nextension to the experiment will run through Chrome 104 until the release of Chrome 105, on August 30, 2022.\nStarting in version 103, Chrome will include an alternative CHIPS origin trial design for HTTP\ncookies, which should enable an opt-in mechanism that will make deployment\neasier for large organizations.\nIn the new design, sending Accept-CH: Sec-CH-Partitioned-Cookies header will\nno longer be required to enroll in the origin trial. Sites will only need to\nsend the Origin-Trial header with their CHIPS origin trial token when they are sending\nresponses that include the Set-Cookie header with the Partitioned\nattribute.\nTo enroll in the origin trial and start experimenting, head over to\nCHIPS origin trial instructions.",
      "date_published": "2022-06-27T04:12:57.675Z",
      "date_modified": "2022-05-26T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/early-hints/",
      "url": "https://developer.chrome.com/en/blog/early-hints/",
      "title": "Faster page loads using server think-time with Early Hints",
      "summary": "# What is Early Hints?\nWebsites have become more sophisticated over time. As such, it's not unusual that a server needs to perform non-trivial work (for example, access to databases, or CDNs accessing the origin server) to produce the HTML for the requested page. Unfortunately, this \"server think-time\" results in extra latency before the browser can start rendering the page. Indeed, the connection effectively goes idle for as long as it takes the server to prepare the response.\n\n\nWithout Early Hints: everything is blocked on the server determining how to respond for the main resource.\n\nEarly Hints is an HTTP status code (103 Early Hints) used to send a preliminary HTTP response ahead of a final response. This allows a server to send hints to the browser about critical sub-resources (for example,  stylesheet for the page, critical JavaScript) or origins that will be likely used by the page, while the server is busy generating the main resource. The browser can use those hints to warm up connections, and request sub-resources, while waiting for the main resource. In other words, Early Hints helps the browser take advantage of such \"server think-time\" by doing some work in advance, thereby speeding up page loads.\n\n\nWith Early Hints: the server can serve a partial response with resource hints while it determines the final response\n\nIn some cases, the performance improvement to the Largest Contentful Paint can go from several hundred milliseconds, as observed by Shopify and by Cloudflare, and up to a second faster, as seen in this before/after comparison:\n\n\nBefore/After comparison of Early Hints on a test website done with WebPageTest (Moto G4 - DSL)\n\n# Implementing Early Hints\nEarly Hints is available from Chrome version 103, as a response to navigation requests, or user interactions that change the url in the status bar, with support for both preconnect and preload hints.\nBefore going deep into the topic, please note that Early Hints are not useful if your server can send a 200 (or other final responses) right away. Instead, consider using the regular link rel=preload or link rel=preconnect on the main response (Link rel HTTP header), or in the main response (<link>  elements), in such situations. For the cases where your server needs a little time to generate the main response, read on!\nThe first step to take advantage of Early Hints consists of identifying the top landing pages, that is, the pages where your users typically start when they visit your website. This could be the homepage, or popular product listing pages if you have lots of users coming from other websites. The reason these entry points matter more than other pages is because Early Hints' usefulness decreases as the user navigates around your website (that is, the browser is more likely to have all the sub-resources it needs on the second or third subsequent navigation). It's also always a good idea to deliver a great first impression!\nNow that you have this prioritized list of landing pages, the next step consists of identifying which origins or sub-resources would be good candidates for preconnect or preload hints, as a first approximation. Typically, those would be origins and sub-resources that contribute the most to key user metrics such as Largest Contentful Paint, or First Contentful Paint. More concretely, look for render-blocking sub-resources such as synchronous JavaScript, stylesheets, or even web fonts. Similarly, look for origins that host sub-resources that contribute a lot to key user metrics. Note: if your main resources are already using  or , you may consider these  origins or resources among the candidates for Early Hints. See this article for more details.\nWhile this represents a decent starting point, it's not necessarily sufficient. The second step consists of minimizing the risk of using Early Hints on resources or origins that might be obsolete, or no longer used by the main resource. For instance, resources that are frequently updated and versioned (for example,  example.com/css/main.fa231e9c.css) may not be the best choice.  Note that this concern isn't specific to Early Hints, it applies to any link rel=preload or rel=preconnect wherever they might be present. This is the sort of detail that's best dealt with automation or templating (for example, a manual process is more likely to lead to mismatched hash or version urls between link rel=preload and the actual HTML tag using the resource).\nAs an example, consider the following flow:\nGET /main.htmlHost: example.comUser-Agent: [....] Chrome/103.0.0.0 [...]\nThe server predicts that main.abcd100.css will be needed, and suggests preloading it via Early Hints:\n103 Early HintsLink: </main.abcd100.css>; rel=preload; as=style[...]\nA few moments later, the webpage, including the linked CSS is served. Unfortunately, this CSS resource is frequently updated, and the main resource is already five versions ahead (abcd105) of the predicted CSS resource (abcd100).\n200 OK[...]<HTML><head>   <title>Example</title>   <link rel=\"stylesheet\" href=\"/main.abcd105.css\">\nIn general, aim for resources and origins that are fairly stable, and largely independent of the outcome for the main resource. If necessary, you may consider splitting your key resources in two: a stable part designed to be used with Early Hints, and a more dynamic part left to be fetched after the main resource is received by the browser:\n<HTML><head>   <title>Example</title>   <link rel=\"stylesheet\" href=\"/main.css\">   <link rel=\"stylesheet\" href=\"/experimental.3eab3290.css\">\nFinally, on the server side, look for main resource requests sent by browsers known to support Early Hints, and respond immediately with 103 Early Hints. In the 103 response, include the relevant preconnect and preload hints. Once the main resource is ready, follow up with the usual response (for example, 200 OK if successful). For backward compatibility, it's good practice to also include LINK HTTP headers in the final response, perhaps even augmenting with critical resources that became evident as part of generating the main resource (for example, the dynamic part of a key resource if you followed the \"split in two\" suggestion). Here is what this would look like:\nGET /main.htmlHost: example.comUser-Agent: [....] Chrome/103.0.0.0 [...]103 Early HintsLink: <https://fonts.google.com>; rel=preconnectLink: </main.css>; rel=preload; as=styleLink: </common.js>; rel=preload; as=script\nA few moments later:\n200 OKContent-Length: 7531Content-Type: text/html; charset=UTF-8Content-encoding: brLink: <https://fonts.google.com>; rel=preconnectLink: </main.css>; rel=preload; as=styleLink: </common.js>; rel=preload; as=scriptLink: </experimental.3eab3290.css>; rel=preload; as=style<HTML><head>   <title>Example</title>   <link rel=\"stylesheet\" href=\"/main.css\">   <link rel=\"stylesheet\" href=\"/experimental.3eab3290.css\">   <script src=\"/common.js\"></script>   <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n# Support for Early Hints by HTTP server software\nHere is a quick summary of the level of support for Early Hints among popular OSS HTTP server software:\n\nApache: supported via mod_http2.\nH2O: supported.\nNGINX: experimental module.\nNode: not yet supported by core. Available as a draft plugin for Fastify.\n\n# Enabling Early Hints, the easy way\nIf you are using one of the following CDNs or platforms, you may not need to manually implement Early Hints. Refer to your solution provider's online documentation to find out if it supports Early Hints, or refer to the non-exhaustive list here:\n\nEarly Hints at Cloudflare\nEarly Hints at Fastly.\n\n# Advanced pattern\nIf you have fully applied Early Hints to your key landing pages and find yourself looking for more opportunities, you might be interested in the following advanced pattern.\nFor visitors who are on their nth page request as part of a typical user journey, you may want to adapt the Early Hints response to content that is lower and deeper in the page, in other words using Early Hints on lower priority resources. This may sound counter-intuitive given that we recommended focussing on high priority, render-blocking sub-resources or origins. However, by the time a visitor has navigated for a while, it's very likely that their browser already has all the critical resources. From there on, it might make sense to switch your attention toward lower priority resources. For instance, this could mean using Early Hints to load product images, or additional JS/CSS that are only needed for less common user interactions.\n# Current limitations\nHere are the limitations of Early Hints as implemented in Chrome 103 and future releases until further notice:\n\nOnly available for navigation requests (that is,. main resource for the top level document).\nOnly supports preconnect and preload (that is, prefetch isn't supported).\nEarly Hint followed by a cross-origin redirect on the final response will result in Chrome dropping the resources and connections it obtained via Early Hints.\n\n# What's next?\nDepending on interest from the community, we may augment our implementation of Early Hints with the following capabilities:\n\nEarly Hints sent on sub-resource requests.\nEarly Hints sent on iframe main resource requests.\nSupport for prefetch in Early Hints.\n\nWe welcome your input on which aspects to prioritize, and how to further improve Early Hints.\n# Relationship to H2/Push\nIf you are familiar with the deprecated HTTP2/Push feature, you may wonder how Early Hints differs. While Early Hints requires a round trip for the browser to start fetching critical sub-resources, with HTTP2/Push the server could start pushing sub-resources alongside the response. While this sounds amazing, this resulted in a key structural downside. Indeed, with HTTP2/Push it was extremely hard to avoid pushing sub-resources that the browser already had. This \"over-pushing\" effect resulted in a less efficient usage of the network bandwidth, which significantly hindered the performance benefits. Overall, Chrome data showed that HTTP2/Push was in fact a net negative for performance across the web.\nBy contrast, Early Hints performs better in practice because it combines the ability to send a preliminary response with hints that leave the browser in charge of fetching, or connecting to, what it actually needs. While Early Hints doesn't cover all the use cases that HTTP2/Push could address in theory, we believe that Early Hints is a more practical solution for speeding up navigations.\nHero image by Pierre Bamin.",
      "content_html": "<h2 id=\"what-is-early-hints\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#what-is-early-hints\" aria-hidden=\"true\">#</a> What is Early Hints?</h2>\n<p>Websites have become more sophisticated over time. As such, it's not unusual that a server needs to perform non-trivial work (for example, access to databases, or CDNs accessing the origin server) to produce the HTML for the requested page. Unfortunately, this &quot;server think-time&quot; results in extra latency before the browser can start rendering the page. Indeed, the connection effectively goes idle for as long as it takes the server to prepare the response.</p>\n<figure>\n<img alt=\"Image showing server think time gap of 200ms between load of page and load of other resources.\" decoding=\"async\" height=\"365\" loading=\"lazy\" sizes=\"(min-width: 325px) 325px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format\" srcset=\"https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=200 200w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=228 228w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=260 260w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=296 296w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=338 338w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=385 385w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=439 439w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=500 500w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=571 571w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/PlT26PkzghLo1EnoXSMI.png?auto=format&w=650 650w\" width=\"325\" />\n<figcaption>Without Early Hints: everything is blocked on the server determining how to respond for the main resource.</figcaption>\n</figure>\n<p>Early Hints is an HTTP status code (<code>103 Early Hints</code>) used to send a preliminary HTTP response ahead of a final response. This allows a server to send hints to the browser about critical sub-resources (for example,  stylesheet for the page, critical JavaScript) or origins that will be likely used by the page, while the server is busy generating the main resource. The browser can use those hints to warm up connections, and request sub-resources, while waiting for the main resource. In other words, Early Hints helps the browser take advantage of such &quot;server think-time&quot; by doing some work in advance, thereby speeding up page loads.</p>\n<figure>\n<img alt=\"Image showing how Early Hints allows the page to send a partial response.\" decoding=\"async\" height=\"357\" loading=\"lazy\" sizes=\"(min-width: 347px) 347px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format\" srcset=\"https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=200 200w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=228 228w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=260 260w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=296 296w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=338 338w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=385 385w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=439 439w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=500 500w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=571 571w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=650 650w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/jBvw3bncw5GZ9DcsH4jy.png?auto=format&w=694 694w\" width=\"347\" />\n<figcaption>With Early Hints: the server can serve a partial response with resource hints while it determines the final response</figcaption>\n</figure>\n<p>In some cases, the performance improvement to the <a href=\"http://web.dev/lcp\">Largest Contentful Paint</a> can go from several hundred milliseconds, as observed by <a href=\"https://twitter.com/colinbendell/status/1539322190541295616\">Shopify</a> and <a href=\"http://blog.cloudflare.com/early-hints-performance\">by Cloudflare</a>, and up to a second faster, as seen in this before/after comparison:</p>\n<figure>\n<img alt=\"Comparison of two sites.\" decoding=\"async\" height=\"450\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format\" srcset=\"https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=200 200w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=228 228w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=260 260w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=296 296w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=338 338w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=385 385w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=439 439w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=500 500w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=571 571w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=650 650w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=741 741w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=845 845w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=964 964w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=1098 1098w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=1252 1252w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=1428 1428w, https://wd.imgix.net/image/kheDArv5csY6rvQUJDbWRscckLr1/oMiX9VrAFUtE9U4S3UTt.jpg?auto=format&w=1600 1600w\" width=\"800\" />\n<figcaption>Before/After comparison of Early Hints on a test website done with <a href=\"https://www.webpagetest.org/\">WebPageTest</a> (Moto G4 - DSL)</figcaption>\n</figure>\n<h2 id=\"implementing-early-hints\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#implementing-early-hints\" aria-hidden=\"true\">#</a> Implementing Early Hints</h2>\n<p>Early Hints is available from Chrome version 103, as a response to navigation requests, or user interactions that change the url in the status bar, with support for both preconnect and preload hints.</p>\n<p>Before going deep into the topic, please note that Early Hints are not useful if your server can send a 200 (or other final responses) right away. Instead, consider using the regular <code>link rel=preload</code> or <code>link rel=preconnect</code> on the main response (<a href=\"https://developer.mozilla.org/docs/Web/HTTP/Headers/Link\">Link rel HTTP header</a>), or in the main response (<code>&lt;link&gt;</code>  elements), in such situations. For the cases where your server needs a little time to generate the main response, read on!</p>\n<p>The first step to take advantage of Early Hints consists of identifying the top landing pages, that is, the pages where your users typically start when they visit your website. This could be the homepage, or popular product listing pages if you have lots of users coming from other websites. The reason these entry points matter more than other pages is because Early Hints' usefulness decreases as the user navigates around your website (that is, the browser is more likely to have all the sub-resources it needs on the second or third subsequent navigation). It's also always a good idea to deliver a great first impression!</p>\n<p>Now that you have this prioritized list of landing pages, the next step consists of identifying which origins or sub-resources would be good candidates for <a href=\"https://web.dev/uses-rel-preconnect\">preconnect</a> or <a href=\"https://web.dev/preload-critical-assets/\">preload</a> hints, as a first approximation. Typically, those would be origins and sub-resources that contribute the most to key user metrics such as <a href=\"https://web.dev/lcp/\">Largest Contentful Paint</a>, or <a href=\"https://web.dev/first-contentful-paint/\">First Contentful Paint</a>. More concretely, look for render-blocking sub-resources such as synchronous JavaScript, stylesheets, or even web fonts. Similarly, look for origins that host sub-resources that contribute a lot to key user metrics. Note: if your main resources are already using <link rel=\"preconnect\" /> or <link rel=\"preload\" />, you may consider these  origins or resources among the candidates for Early Hints. See <a href=\"https://web.dev/lcp/#how-to-improve-lcp\">this article</a> for more details.</p>\n<p>While this represents a decent starting point, it's not necessarily sufficient. The second step consists of minimizing the risk of using Early Hints on resources or origins that might be obsolete, or no longer used by the main resource. For instance, resources that are frequently updated and versioned (for example,  <code>example.com/css/main.fa231e9c.css</code>) may not be the best choice.  Note that this concern isn't specific to Early Hints, it applies to any link <code>rel=preload</code> or <code>rel=preconnect</code> wherever they might be present. This is the sort of detail that's best dealt with automation or templating (for example, a manual process is more likely to lead to mismatched hash or version urls between <code>link rel=preload</code> and the actual HTML tag using the resource).</p>\n<p>As an example, consider the following flow:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">GET /main.html<br />Host: example.com<br />User-Agent: <span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">]</span> Chrome/103.0.0.0 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></code></pre>\n<p>The server predicts that <code>main.abcd100.css</code> will be needed, and suggests preloading it via Early Hints:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token number\">103</span> Early Hints<br />Link: <span class=\"token operator\">&lt;</span>/main.abcd100.css<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preload<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">as</span><span class=\"token operator\">=</span>style<br /><span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></code></pre>\n<p>A few moments later, the webpage, including the linked CSS is served. Unfortunately, this CSS resource is frequently updated, and the main resource is already five versions ahead (<code>abcd105</code>) of the predicted CSS resource (<code>abcd100)</code>.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token number\">200</span> OK<br /><span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span><br /><span class=\"token operator\">&lt;</span>HTML<span class=\"token operator\">></span><br /><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/main.abcd105.css\"</span><span class=\"token operator\">></span></code></pre>\n<p>In general, aim for resources and origins that are fairly stable, and largely independent of the outcome for the main resource. If necessary, you may consider splitting your key resources in two: a stable part designed to be used with Early Hints, and a more dynamic part left to be fetched after the main resource is received by the browser:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">&lt;</span>HTML<span class=\"token operator\">></span><br /><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/main.css\"</span><span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/experimental.3eab3290.css\"</span><span class=\"token operator\">></span></code></pre>\n<p>Finally, on the server side, look for main resource requests sent by browsers known to support Early Hints, and respond immediately with 103 Early Hints. In the 103 response, include the relevant preconnect and preload hints. Once the main resource is ready, follow up with the usual response (for example, 200 OK if successful). For backward compatibility, it's good practice to also include LINK HTTP headers in the final response, perhaps even augmenting with critical resources that became evident as part of generating the main resource (for example, the dynamic part of a key resource if you followed the &quot;split in two&quot; suggestion). Here is what this would look like:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">GET /main.html<br />Host: example.com<br />User-Agent: <span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">]</span> Chrome/103.0.0.0 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span><br /><span class=\"token number\">103</span> Early Hints<br />Link: <span class=\"token operator\">&lt;</span>https://fonts.google.com<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preconnect<br />Link: <span class=\"token operator\">&lt;</span>/main.css<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preload<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">as</span><span class=\"token operator\">=</span>style<br />Link: <span class=\"token operator\">&lt;</span>/common.js<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preload<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">as</span><span class=\"token operator\">=</span>script</code></pre>\n<p>A few moments later:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token number\">200</span> OK<br />Content-Length: <span class=\"token number\">7531</span><br />Content-Type: text/html<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>UTF-8<br />Content-encoding: br<br />Link: <span class=\"token operator\">&lt;</span>https://fonts.google.com<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preconnect<br />Link: <span class=\"token operator\">&lt;</span>/main.css<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preload<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">as</span><span class=\"token operator\">=</span>style<br />Link: <span class=\"token operator\">&lt;</span>/common.js<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preload<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">as</span><span class=\"token operator\">=</span>script<br />Link: <span class=\"token operator\">&lt;</span>/experimental.3eab3290.css<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span>preload<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">as</span><span class=\"token operator\">=</span>style<br /><span class=\"token operator\">&lt;</span>HTML<span class=\"token operator\">></span><br /><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/main.css\"</span><span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"/experimental.3eab3290.css\"</span><span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>script <span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span><span class=\"token string\">\"/common.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">></span><br />   <span class=\"token operator\">&lt;</span>link <span class=\"token assign-left variable\">rel</span><span class=\"token operator\">=</span><span class=\"token string\">\"preconnect\"</span> <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"https://fonts.googleapis.com\"</span><span class=\"token operator\">></span></code></pre>\n<h2 id=\"support-for-early-hints-by-http-server-software\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#support-for-early-hints-by-http-server-software\" aria-hidden=\"true\">#</a> Support for Early Hints by HTTP server software</h2>\n<p>Here is a quick summary of the level of support for Early Hints among popular OSS HTTP server software:</p>\n<ul>\n<li><strong>Apache:</strong> <a href=\"https://httpd.apache.org/docs/2.4/howto/http2.html#earlyhints\">supported</a> via mod_http2.</li>\n<li><strong>H2O:</strong> <a href=\"https://github.com/h2o/h2o/pull/1767\">supported</a>.</li>\n<li><strong>NGINX:</strong> <a href=\"https://github.com/nginx-modules/ngx_http_early_hints\">experimental module</a>.</li>\n<li><strong>Node:</strong> not yet supported by core. Available as a <a href=\"https://www.npmjs.com/package/fastify-early-hints\">draft plugin for Fastify</a>.</li>\n</ul>\n<h2 id=\"enabling-early-hints-the-easy-way\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#enabling-early-hints-the-easy-way\" aria-hidden=\"true\">#</a> Enabling Early Hints, the easy way</h2>\n<p>If you are using one of the following CDNs or platforms, you may not need to manually implement Early Hints. Refer to your solution provider's online documentation to find out if it supports Early Hints, or refer to the non-exhaustive list here:</p>\n<ul>\n<li><a href=\"https://developers.cloudflare.com/cache/about/early-hints/\">Early Hints at Cloudflare</a></li>\n<li><a href=\"https://www.google.com/url?q=https://www.fastly.com/blog/beyond-server-push-experimenting-with-the-103-early-hints-status-code%23:~:text%3Dabout%2520this%2520feature.-,Sending%2520103%2520Early%2520Hints,in%2520VCL%252C%2520like%2520this%253A&amp;sa=D&amp;source=docs&amp;ust=1655290700718877&amp;usg=AOvVaw07p23rkLcV4vplasZJBjEx\">Early Hints at Fastly</a>.</li>\n</ul>\n<h2 id=\"advanced-pattern\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#advanced-pattern\" aria-hidden=\"true\">#</a> Advanced pattern</h2>\n<p>If you have fully applied Early Hints to your key landing pages and find yourself looking for more opportunities, you might be interested in the following advanced pattern.</p>\n<p>For visitors who are on their <em>n</em>th page request as part of a typical user journey, you may want to adapt the Early Hints response to content that is lower and deeper in the page, in other words using Early Hints on lower priority resources. This may sound counter-intuitive given that we recommended focussing on high priority, render-blocking sub-resources or origins. However, by the time a visitor has navigated for a while, it's very likely that their browser already has all the critical resources. From there on, it might make sense to switch your attention toward lower priority resources. For instance, this could mean using Early Hints to load product images, or additional JS/CSS that are only needed for less common user interactions.</p>\n<h2 id=\"current-limitations\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#current-limitations\" aria-hidden=\"true\">#</a> Current limitations</h2>\n<p>Here are the limitations of Early Hints as implemented in Chrome 103 and future releases until further notice:</p>\n<ul>\n<li>Only available for navigation requests (that is,. main resource for the top level document).</li>\n<li>Only supports preconnect and preload (that is, prefetch isn't supported).</li>\n<li>Early Hint followed by a cross-origin redirect on the final response will result in Chrome dropping the resources and connections it obtained via Early Hints.</li>\n</ul>\n<h2 id=\"whats-next\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#whats-next\" aria-hidden=\"true\">#</a> What's next?</h2>\n<p>Depending on interest from the community, we may augment our implementation of Early Hints with the following capabilities:</p>\n<ul>\n<li>Early Hints sent on sub-resource requests.</li>\n<li>Early Hints sent on iframe main resource requests.</li>\n<li>Support for prefetch in Early Hints.</li>\n</ul>\n<p>We welcome <a href=\"https://github.com/bashi/early-hints-explainer/issues\">your input</a> on which aspects to prioritize, and how to further improve Early Hints.</p>\n<h2 id=\"relationship-to-h2push\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/early-hints/#relationship-to-h2push\" aria-hidden=\"true\">#</a> Relationship to H2/Push</h2>\n<p>If you are familiar with the deprecated <a href=\"https://en.wikipedia.org/wiki/HTTP/2_Server_Push\">HTTP2/Push</a> feature, you may wonder how Early Hints differs. While Early Hints requires a round trip for the browser to start fetching critical sub-resources, with HTTP2/Push the server could start pushing sub-resources alongside the response. While this sounds amazing, this resulted in a key structural downside. Indeed, with HTTP2/Push it was extremely hard to avoid pushing sub-resources that the browser already had. This &quot;over-pushing&quot; effect resulted in a less efficient usage of the network bandwidth, which significantly hindered the performance benefits. Overall, Chrome data showed that HTTP2/Push was in fact a net negative for performance across the web.</p>\n<p>By contrast, Early Hints performs better in practice because it combines the ability to send a preliminary response with hints that leave the browser in charge of fetching, or connecting to, what it actually needs. While Early Hints doesn't cover all the use cases that HTTP2/Push could address in theory, we believe that Early Hints is a more practical solution for speeding up navigations.</p>\n<p><em>Hero image by <a href=\"https://unsplash.com/@bamin?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Pierre Bamin</a>.</em></p>",
      "content_text": "# What is Early Hints?\nWebsites have become more sophisticated over time. As such, it's not unusual that a server needs to perform non-trivial work (for example, access to databases, or CDNs accessing the origin server) to produce the HTML for the requested page. Unfortunately, this \"server think-time\" results in extra latency before the browser can start rendering the page. Indeed, the connection effectively goes idle for as long as it takes the server to prepare the response.\n\n\nWithout Early Hints: everything is blocked on the server determining how to respond for the main resource.\n\nEarly Hints is an HTTP status code (103 Early Hints) used to send a preliminary HTTP response ahead of a final response. This allows a server to send hints to the browser about critical sub-resources (for example,  stylesheet for the page, critical JavaScript) or origins that will be likely used by the page, while the server is busy generating the main resource. The browser can use those hints to warm up connections, and request sub-resources, while waiting for the main resource. In other words, Early Hints helps the browser take advantage of such \"server think-time\" by doing some work in advance, thereby speeding up page loads.\n\n\nWith Early Hints: the server can serve a partial response with resource hints while it determines the final response\n\nIn some cases, the performance improvement to the Largest Contentful Paint can go from several hundred milliseconds, as observed by Shopify and by Cloudflare, and up to a second faster, as seen in this before/after comparison:\n\n\nBefore/After comparison of Early Hints on a test website done with WebPageTest (Moto G4 - DSL)\n\n# Implementing Early Hints\nEarly Hints is available from Chrome version 103, as a response to navigation requests, or user interactions that change the url in the status bar, with support for both preconnect and preload hints.\nBefore going deep into the topic, please note that Early Hints are not useful if your server can send a 200 (or other final responses) right away. Instead, consider using the regular link rel=preload or link rel=preconnect on the main response (Link rel HTTP header), or in the main response (<link>  elements), in such situations. For the cases where your server needs a little time to generate the main response, read on!\nThe first step to take advantage of Early Hints consists of identifying the top landing pages, that is, the pages where your users typically start when they visit your website. This could be the homepage, or popular product listing pages if you have lots of users coming from other websites. The reason these entry points matter more than other pages is because Early Hints' usefulness decreases as the user navigates around your website (that is, the browser is more likely to have all the sub-resources it needs on the second or third subsequent navigation). It's also always a good idea to deliver a great first impression!\nNow that you have this prioritized list of landing pages, the next step consists of identifying which origins or sub-resources would be good candidates for preconnect or preload hints, as a first approximation. Typically, those would be origins and sub-resources that contribute the most to key user metrics such as Largest Contentful Paint, or First Contentful Paint. More concretely, look for render-blocking sub-resources such as synchronous JavaScript, stylesheets, or even web fonts. Similarly, look for origins that host sub-resources that contribute a lot to key user metrics. Note: if your main resources are already using  or , you may consider these  origins or resources among the candidates for Early Hints. See this article for more details.\nWhile this represents a decent starting point, it's not necessarily sufficient. The second step consists of minimizing the risk of using Early Hints on resources or origins that might be obsolete, or no longer used by the main resource. For instance, resources that are frequently updated and versioned (for example,  example.com/css/main.fa231e9c.css) may not be the best choice.  Note that this concern isn't specific to Early Hints, it applies to any link rel=preload or rel=preconnect wherever they might be present. This is the sort of detail that's best dealt with automation or templating (for example, a manual process is more likely to lead to mismatched hash or version urls between link rel=preload and the actual HTML tag using the resource).\nAs an example, consider the following flow:\nGET /main.htmlHost: example.comUser-Agent: [....] Chrome/103.0.0.0 [...]\nThe server predicts that main.abcd100.css will be needed, and suggests preloading it via Early Hints:\n103 Early HintsLink: </main.abcd100.css>; rel=preload; as=style[...]\nA few moments later, the webpage, including the linked CSS is served. Unfortunately, this CSS resource is frequently updated, and the main resource is already five versions ahead (abcd105) of the predicted CSS resource (abcd100).\n200 OK[...]<HTML><head>   <title>Example</title>   <link rel=\"stylesheet\" href=\"/main.abcd105.css\">\nIn general, aim for resources and origins that are fairly stable, and largely independent of the outcome for the main resource. If necessary, you may consider splitting your key resources in two: a stable part designed to be used with Early Hints, and a more dynamic part left to be fetched after the main resource is received by the browser:\n<HTML><head>   <title>Example</title>   <link rel=\"stylesheet\" href=\"/main.css\">   <link rel=\"stylesheet\" href=\"/experimental.3eab3290.css\">\nFinally, on the server side, look for main resource requests sent by browsers known to support Early Hints, and respond immediately with 103 Early Hints. In the 103 response, include the relevant preconnect and preload hints. Once the main resource is ready, follow up with the usual response (for example, 200 OK if successful). For backward compatibility, it's good practice to also include LINK HTTP headers in the final response, perhaps even augmenting with critical resources that became evident as part of generating the main resource (for example, the dynamic part of a key resource if you followed the \"split in two\" suggestion). Here is what this would look like:\nGET /main.htmlHost: example.comUser-Agent: [....] Chrome/103.0.0.0 [...]103 Early HintsLink: <https://fonts.google.com>; rel=preconnectLink: </main.css>; rel=preload; as=styleLink: </common.js>; rel=preload; as=script\nA few moments later:\n200 OKContent-Length: 7531Content-Type: text/html; charset=UTF-8Content-encoding: brLink: <https://fonts.google.com>; rel=preconnectLink: </main.css>; rel=preload; as=styleLink: </common.js>; rel=preload; as=scriptLink: </experimental.3eab3290.css>; rel=preload; as=style<HTML><head>   <title>Example</title>   <link rel=\"stylesheet\" href=\"/main.css\">   <link rel=\"stylesheet\" href=\"/experimental.3eab3290.css\">   <script src=\"/common.js\"></script>   <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n# Support for Early Hints by HTTP server software\nHere is a quick summary of the level of support for Early Hints among popular OSS HTTP server software:\n\nApache: supported via mod_http2.\nH2O: supported.\nNGINX: experimental module.\nNode: not yet supported by core. Available as a draft plugin for Fastify.\n\n# Enabling Early Hints, the easy way\nIf you are using one of the following CDNs or platforms, you may not need to manually implement Early Hints. Refer to your solution provider's online documentation to find out if it supports Early Hints, or refer to the non-exhaustive list here:\n\nEarly Hints at Cloudflare\nEarly Hints at Fastly.\n\n# Advanced pattern\nIf you have fully applied Early Hints to your key landing pages and find yourself looking for more opportunities, you might be interested in the following advanced pattern.\nFor visitors who are on their nth page request as part of a typical user journey, you may want to adapt the Early Hints response to content that is lower and deeper in the page, in other words using Early Hints on lower priority resources. This may sound counter-intuitive given that we recommended focussing on high priority, render-blocking sub-resources or origins. However, by the time a visitor has navigated for a while, it's very likely that their browser already has all the critical resources. From there on, it might make sense to switch your attention toward lower priority resources. For instance, this could mean using Early Hints to load product images, or additional JS/CSS that are only needed for less common user interactions.\n# Current limitations\nHere are the limitations of Early Hints as implemented in Chrome 103 and future releases until further notice:\n\nOnly available for navigation requests (that is,. main resource for the top level document).\nOnly supports preconnect and preload (that is, prefetch isn't supported).\nEarly Hint followed by a cross-origin redirect on the final response will result in Chrome dropping the resources and connections it obtained via Early Hints.\n\n# What's next?\nDepending on interest from the community, we may augment our implementation of Early Hints with the following capabilities:\n\nEarly Hints sent on sub-resource requests.\nEarly Hints sent on iframe main resource requests.\nSupport for prefetch in Early Hints.\n\nWe welcome your input on which aspects to prioritize, and how to further improve Early Hints.\n# Relationship to H2/Push\nIf you are familiar with the deprecated HTTP2/Push feature, you may wonder how Early Hints differs. While Early Hints requires a round trip for the browser to start fetching critical sub-resources, with HTTP2/Push the server could start pushing sub-resources alongside the response. While this sounds amazing, this resulted in a key structural downside. Indeed, with HTTP2/Push it was extremely hard to avoid pushing sub-resources that the browser already had. This \"over-pushing\" effect resulted in a less efficient usage of the network bandwidth, which significantly hindered the performance benefits. Overall, Chrome data showed that HTTP2/Push was in fact a net negative for performance across the web.\nBy contrast, Early Hints performs better in practice because it combines the ability to send a preliminary response with hints that leave the browser in charge of fetching, or connecting to, what it actually needs. While Early Hints doesn't cover all the use cases that HTTP2/Push could address in theory, we believe that Early Hints is a more practical solution for speeding up navigations.\nHero image by Pierre Bamin.",
      "date_published": "2022-06-27T04:12:57.674Z",
      "date_modified": "2022-06-23T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/deps-rems-104/",
      "url": "https://developer.chrome.com/en/blog/deps-rems-104/",
      "title": "Deprecations and removals in Chrome 104",
      "summary": "\nVisit ChromeStatus.com for lists of current deprecations and previous removals.\n\nChrome 104 beta was released on June 23, 2022 and is expected to become the\nstable version in early August, 2022.\n# Block third-party contexts navigating to filesystem URLs\niframes can no longer navigate to filesystem URLs. Top frame support for navigating to filesystem URLs was dropped in Chrome 68.\n# Remove non-standard client hint mode\nFour client hints (dpr, width, viewport-width, and device-memory) have a default allowlist of self but behave as though they have a default allowlist of * on Android, contrary to the spec. This is now fixed, increasing privacy on Android by requiring explicit delegation of these hints.\n# Remove U2F API (cryptotoken)\nChrome's legacy U2F API for interacting with security keys is no longer supported. U2F security keys themselves are not deprecated and will continue to work.\nAffected sites should migrate to the Web Authentication API. Credentials that were originally registered via the U2F API can be challenged via web authentication. USB security keys that are supported by the U2F API are also supported by the Web Authentication API.\nU2F is Chrome's original security key API. It allows sites to register public key credentials on USB security keys and challenge them for building phishing-resistant two-factor authentication systems. U2F never became an open web standard and was subsumed by the Web Authentication API (launched in Chrome 67). Chrome never directly supported the FIDO U2F JavaScript API, but rather shipped a component extension called cryptotoken, which exposes an equivalent chrome.runtime.sendMessage() method. U2F and Cryptotoken are firmly in maintenance mode and have encouraged sites to migrate to the Web Authentication API for the last two years.\n# Deprecation policy\nTo keep the platform healthy, we sometimes remove APIs from the Web Platform\nwhich have run their course. There can be many reasons why we would remove an\nAPI, such as:\n\nThey are superseded by newer APIs.\nThey are updated to reflect changes to specifications to bring alignment and\nconsistency with other browsers.\nThey are early experiments that never came to fruition in other browsers and\nthus can increase the burden of support for web developers.\n\nSome of these changes will have an effect on a very small number of sites. To\nmitigate issues ahead of time, we try to give developers advanced notice so they\ncan make the required changes to keep their sites running.\nChrome currently has a process for deprecations and removals of\nAPI's,\nessentially:\n\nAnnounce on the\nblink-dev\nmailing list.\nSet warnings and give time scales in the Chrome DevTools Console when usage\nis detected on the page.\nWait, monitor, and then remove the feature as usage drops.\n\nYou can find a list of all deprecated features on chromestatus.com using the\ndeprecated filter and\nremoved features by applying the removed\nfilter. We will also try to\nsummarize some of the changes, reasoning, and migration paths in these posts.",
      "content_html": "<div class=\"aside aside--note\">\n<p>Visit ChromeStatus.com for lists of <a href=\"https://www.chromestatus.com/features#browsers.chrome.status%3A%22Deprecated%22\">current deprecations</a> and <a href=\"https://www.chromestatus.com/features#browsers.chrome.status:%22Removed%22\">previous removals</a>.</p>\n</div>\n<p>Chrome 104 beta was released on June 23, 2022 and is expected to become the\nstable version in early August, 2022.</p>\n<h2 id=\"block-third-party-contexts-navigating-to-filesystem-urls\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-104/#block-third-party-contexts-navigating-to-filesystem-urls\" aria-hidden=\"true\">#</a> Block third-party contexts navigating to filesystem URLs</h2>\n<p>iframes can <a href=\"https://chromestatus.com/feature/5816343679991808\">no longer navigate to filesystem URLs</a>. Top frame support for navigating to filesystem URLs was dropped in Chrome 68.</p>\n<h2 id=\"remove-non-standard-client-hint-mode\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-104/#remove-non-standard-client-hint-mode\" aria-hidden=\"true\">#</a> Remove non-standard client hint mode</h2>\n<p>Four client hints (<code>dpr</code>, <code>width</code>, <code>viewport-width</code>, and <code>device-memory</code>) have a default allowlist of <code>self</code> but behave as though they have a default allowlist of <code>*</code> on Android, contrary to the spec. <a href=\"https://www.chromestatus.com/feature/5694492182052864\">This is now fixed</a>, increasing privacy on Android by requiring explicit delegation of these hints.</p>\n<h2 id=\"remove-u2f-api-cryptotoken\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-104/#remove-u2f-api-cryptotoken\" aria-hidden=\"true\">#</a> Remove U2F API (cryptotoken)</h2>\n<p>Chrome's legacy U2F API for interacting with security keys <a href=\"https://www.chromestatus.com/feature/5759004926017536\">is no longer supported</a>. U2F security keys themselves are not deprecated and will continue to work.</p>\n<p>Affected sites should migrate to the <a href=\"https://developer.mozilla.org/docs/Web/API/Web_Authentication_API\">Web Authentication API</a>. Credentials that were originally registered via the U2F API can be challenged via web authentication. USB security keys that are supported by the U2F API are also supported by the Web Authentication API.</p>\n<p>U2F is Chrome's original security key API. It allows sites to register public key credentials on USB security keys and challenge them for building phishing-resistant two-factor authentication systems. U2F never became an open web standard and was subsumed by the Web Authentication API (launched in Chrome 67). Chrome never directly supported the FIDO U2F JavaScript API, but rather shipped a component extension called cryptotoken, which exposes an equivalent <code>chrome.runtime.sendMessage()</code> method. U2F and Cryptotoken are firmly in maintenance mode and have encouraged sites to migrate to the Web Authentication API for the last two years.</p>\n<h2 id=\"deprecation-policy\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/deps-rems-104/#deprecation-policy\" aria-hidden=\"true\">#</a> Deprecation policy</h2>\n<p>To keep the platform healthy, we sometimes remove APIs from the Web Platform\nwhich have run their course. There can be many reasons why we would remove an\nAPI, such as:</p>\n<ul>\n<li>They are superseded by newer APIs.</li>\n<li>They are updated to reflect changes to specifications to bring alignment and\nconsistency with other browsers.</li>\n<li>They are early experiments that never came to fruition in other browsers and\nthus can increase the burden of support for web developers.</li>\n</ul>\n<p>Some of these changes will have an effect on a very small number of sites. To\nmitigate issues ahead of time, we try to give developers advanced notice so they\ncan make the required changes to keep their sites running.</p>\n<p>Chrome currently has a <a href=\"http://www.chromium.org/blink#TOC-Launch-Process:-Deprecation\">process for deprecations and removals of\nAPI's</a>,\nessentially:</p>\n<ul>\n<li>Announce on the\n<a href=\"https://groups.google.com/a/chromium.org/forum/#!forum/blink-dev\">blink-dev</a>\nmailing list.</li>\n<li>Set warnings and give time scales in the Chrome DevTools Console when usage\nis detected on the page.</li>\n<li>Wait, monitor, and then remove the feature as usage drops.</li>\n</ul>\n<p>You can find a list of all deprecated features on chromestatus.com using the\n<a href=\"https://www.chromestatus.com/features#deprecated\">deprecated filter</a> and\nremoved features by applying the <a href=\"https://www.chromestatus.com/features#removed\">removed\nfilter</a>. We will also try to\nsummarize some of the changes, reasoning, and migration paths in these posts.</p>",
      "content_text": "\nVisit ChromeStatus.com for lists of current deprecations and previous removals.\n\nChrome 104 beta was released on June 23, 2022 and is expected to become the\nstable version in early August, 2022.\n# Block third-party contexts navigating to filesystem URLs\niframes can no longer navigate to filesystem URLs. Top frame support for navigating to filesystem URLs was dropped in Chrome 68.\n# Remove non-standard client hint mode\nFour client hints (dpr, width, viewport-width, and device-memory) have a default allowlist of self but behave as though they have a default allowlist of * on Android, contrary to the spec. This is now fixed, increasing privacy on Android by requiring explicit delegation of these hints.\n# Remove U2F API (cryptotoken)\nChrome's legacy U2F API for interacting with security keys is no longer supported. U2F security keys themselves are not deprecated and will continue to work.\nAffected sites should migrate to the Web Authentication API. Credentials that were originally registered via the U2F API can be challenged via web authentication. USB security keys that are supported by the U2F API are also supported by the Web Authentication API.\nU2F is Chrome's original security key API. It allows sites to register public key credentials on USB security keys and challenge them for building phishing-resistant two-factor authentication systems. U2F never became an open web standard and was subsumed by the Web Authentication API (launched in Chrome 67). Chrome never directly supported the FIDO U2F JavaScript API, but rather shipped a component extension called cryptotoken, which exposes an equivalent chrome.runtime.sendMessage() method. U2F and Cryptotoken are firmly in maintenance mode and have encouraged sites to migrate to the Web Authentication API for the last two years.\n# Deprecation policy\nTo keep the platform healthy, we sometimes remove APIs from the Web Platform\nwhich have run their course. There can be many reasons why we would remove an\nAPI, such as:\n\nThey are superseded by newer APIs.\nThey are updated to reflect changes to specifications to bring alignment and\nconsistency with other browsers.\nThey are early experiments that never came to fruition in other browsers and\nthus can increase the burden of support for web developers.\n\nSome of these changes will have an effect on a very small number of sites. To\nmitigate issues ahead of time, we try to give developers advanced notice so they\ncan make the required changes to keep their sites running.\nChrome currently has a process for deprecations and removals of\nAPI's,\nessentially:\n\nAnnounce on the\nblink-dev\nmailing list.\nSet warnings and give time scales in the Chrome DevTools Console when usage\nis detected on the page.\nWait, monitor, and then remove the feature as usage drops.\n\nYou can find a list of all deprecated features on chromestatus.com using the\ndeprecated filter and\nremoved features by applying the removed\nfilter. We will also try to\nsummarize some of the changes, reasoning, and migration paths in these posts.",
      "date_published": "2022-06-27T04:12:57.674Z",
      "date_modified": "2022-06-23T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/",
      "url": "https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/",
      "title": "Attribution Reporting updates in June 2022",
      "summary": "The Attribution Reporting proposal is changing for Chrome version 104,\nwith new API mechanisms, functionality, and updates to the aggregation service.\nTo get the latest information on versions, sign up for Chrome OS release\nnotifications.\n# Who are these updates for?\nThese updates are for you if:\n\nYou already are familiar with the API—for example, if you've been observing\nor participating in the discussions on the WICG repository and want to\nunderstand the changes made to the API.\nYou're using the Attribution Reporting API in a demo or plan to test in the\norigin trial.\n\nIf you're just getting started with this API and/or have not experimented with\nit yet, go directly to the introduction to the\nAPI instead.\n\nThe Google Chrome team will host developer office\nhours,\nwhere developers who are testing and integrating the Privacy Sandbox\ntechnologies can learn more about Attribution Reporting in Chrome's Privacy\nSandbox.\n\n# Attribution Reporting API updates\nThe API handbook\nand Attribution Reporting demo\nhave been updated to reflect the latest changes to the Attribution Reporting\nclient-side API.\nMost changes don't require action. Those that do require updates for your\nimplementation have been highlighted below.\n# (Action required) unified headers for registration\nThe headers have been unified. There is now just one header for sources and one\nfor triggers, formatted in JSON.\n\nTo register attribution sources, you can respond to registration requests\nwith the header Attribution-Reporting-Register-Source.\nTo complete trigger registration, set the\nAttribution-Reporting-Register-Trigger header.\n\nThis change requires action. Refer to the\nAPI handbook\nfor more information.\n# (Action required) aggregation keys are now a dictionary\nTo register attribution sources,\ncontinue to use aggregation_keys, but now stored as a JSON dictionary instead\nof a list.\nFor example:\n\"aggregation_keys\": {    // Generate a \"0x159\" key piece for the key named \"campaignCounts\".    \"campaignCounts\": \"0x159\", // User saw ad from campaign 345 (out of 511)    // Generates a \"0x5\" key piece (low order bits of the key) for     // the key named \"geoValue\".    \"geoValue\": \"0x5\" // Source-side geo region = 5 (US), out of a possible ~100 regions }\nThis change requires action. Refer to the\nAPI handbook\nfor more information.\n# Report generation\nYou can choose to generate only aggregatable reports, which can be aggregated\ninto summary reports. If your filters don't match any event triggers, then no\nevent-level reports will be generated.\n# Unified debug key setting\nThe debug key should now be set in the source and trigger headers, instead of\nwith separate headers. Learn more about how to debug\nreports.\n# Register attribution sources\nScript tags can now be used to register attribution sources, similar to support\nfor the <img> tag.\n# More API updates\nOther changes that have been made and cited in the API handbook include:\n\nSources can be registered with JavaScript request APIs.\nwindow.registerSource was removed.\nIt is now optional to include a value for attributionsrc when registering\nsources.\nAttribution-Reporting-Eligible header added to incoming source\nregistration requests.\nThere was a minor change to encodeURIComponent.\nThe privacy budget key was removed\nfrom the shared_info field in aggregatable reports.\n\n# Support for the Aggregation Service\nIn Chrome 104, we intend to update the format of some information inside of\naggregatable reports. We are currently building support for this change in the\nAggregation Service. This document will be updated, as well the\nchangelog,\nafter the changes are shipped.\nWe've gathered a document of practical tips and strategies to generate summary\nreports.\nThere are a number of insights, including:\n\nOverview of noise in summary report generation\nA detailed explanation of dimensions, keys, and values\nAggregation keys in practice, including a key structure map\nAggregatable values in practice, and implications of the contribution budget\nGuide to experimenting with epsilon\n\n# Read more about the updates\n\nRead the API handbook.\nRead What you should know about the API.\nRead Experiment with Attribution Reporting: Strategy and tips for summary reports.\n\nThe header image is from Diana Polekhina on Unsplash.",
      "content_html": "<p>The Attribution Reporting proposal is changing for Chrome version 104,\nwith new API mechanisms, functionality, and updates to the aggregation service.\nTo get the latest information on versions, sign up for <a href=\"https://groups.google.com/a/google.com/g/cros-rel-notify\">Chrome OS release\nnotifications</a>.</p>\n<h2 id=\"who-are-these-updates-for\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#who-are-these-updates-for\" aria-hidden=\"true\">#</a> Who are these updates for?</h2>\n<p>These updates are for you if:</p>\n<ul>\n<li>You already are familiar with the API—for example, if you've been observing\nor participating in the discussions on the WICG repository and want to\nunderstand the changes made to the API.</li>\n<li>You're using the Attribution Reporting API in a demo or plan to test in the\n<a href=\"https://developer.chrome.com/blog/privacy-sandbox-unified-origin-trial/\">origin trial</a>.</li>\n</ul>\n<p>If you're just getting started with this API and/or have not experimented with\nit yet, go directly to the <a href=\"https://developer.chrome.com/docs/privacy-sandbox/attribution-reporting-introduction/\">introduction to the\nAPI</a> instead.</p>\n<div class=\"aside aside--note\">\n<p>The Google Chrome team will host <a href=\"https://docs.google.com/document/d/14GNexALd7dLBJe-MdLFuAjiZI3EhfNvk8zTs5Ct6nnM/edit?usp=sharing\">developer office\nhours</a>,\nwhere developers who are testing and integrating the Privacy Sandbox\ntechnologies can learn more about Attribution Reporting in Chrome's Privacy\nSandbox.</p>\n</div>\n<h2 id=\"attribution-reporting-api-updates\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#attribution-reporting-api-updates\" aria-hidden=\"true\">#</a> Attribution Reporting API updates</h2>\n<p>The <a href=\"https://docs.google.com/document/d/1BXchEk-UMgcr2fpjfXrQ3D8VhTR-COGYS1cwK_nyLfg/edit\">API handbook</a>\nand <a href=\"https://github.com/GoogleChromeLabs/trust-safety-demo/pull/27/files\">Attribution Reporting demo</a>\nhave been updated to reflect the latest changes to the Attribution Reporting\nclient-side API.</p>\n<p>Most changes don't require action. Those that do require updates for your\nimplementation have been highlighted below.</p>\n<h3 id=\"action-required-unified-headers-for-registration\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#action-required-unified-headers-for-registration\" aria-hidden=\"true\">#</a> (Action required) unified headers for registration</h3>\n<p>The headers have been unified. There is now just one header for sources and one\nfor triggers, formatted in JSON.</p>\n<ul>\n<li>To register attribution sources, you can respond to registration requests\nwith the header <code>Attribution-Reporting-Register-Source</code>.</li>\n<li>To complete trigger registration, set the\n<code>Attribution-Reporting-Register-Trigger</code> header.</li>\n</ul>\n<p>This change requires action. Refer to the\n<a href=\"https://docs.google.com/document/d/1BXchEk-UMgcr2fpjfXrQ3D8VhTR-COGYS1cwK_nyLfg/edit\">API handbook</a>\nfor more information.</p>\n<h3 id=\"action-required-aggregation-keys-are-now-a-dictionary\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#action-required-aggregation-keys-are-now-a-dictionary\" aria-hidden=\"true\">#</a> (Action required) aggregation keys are now a dictionary</h3>\n<p>To <a href=\"https://github.com/GoogleChromeLabs/trust-safety-demo/blob/f653de6d9562c4c5f5ca04a1c89fd97c5aedce5a/conversion-measurement/adtech/server.js#L118\">register attribution sources</a>,\ncontinue to use <code>aggregation_keys</code>, but now stored as a JSON dictionary instead\nof a list.</p>\n<p>For example:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"aggregation_keys\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token comment\">// Generate a \"0x159\" key piece for the key named \"campaignCounts\".</span><br />    <span class=\"token property\">\"campaignCounts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x159\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// User saw ad from campaign 345 (out of 511)</span><br /><br />    <span class=\"token comment\">// Generates a \"0x5\" key piece (low order bits of the key) for </span><br />    <span class=\"token comment\">// the key named \"geoValue\".</span><br />    <span class=\"token property\">\"geoValue\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x5\"</span> <span class=\"token comment\">// Source-side geo region = 5 (US), out of a possible ~100 regions</span><br /> <span class=\"token punctuation\">}</span></code></pre>\n<p>This change requires action. Refer to the\n<a href=\"https://docs.google.com/document/d/1BXchEk-UMgcr2fpjfXrQ3D8VhTR-COGYS1cwK_nyLfg/edit\">API handbook</a>\nfor more information.</p>\n<h3 id=\"report-generation\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#report-generation\" aria-hidden=\"true\">#</a> Report generation</h3>\n<p>You can choose to generate only aggregatable reports, which can be aggregated\ninto summary reports. If your filters don't match any event triggers, then no\nevent-level reports will be generated.</p>\n<h3 id=\"unified-debug-key-setting\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#unified-debug-key-setting\" aria-hidden=\"true\">#</a> Unified debug key setting</h3>\n<p>The debug key should now be set in the source and trigger headers, instead of\nwith separate headers. Learn more about <a href=\"https://docs.google.com/document/d/1PawakBkknAJQSGa-R8LyxLOwqGX4JDa5GZ5r6M-_E74/edit#heading=h.fvp017tkgw79\">how to debug\nreports</a>.</p>\n<h3 id=\"register-attribution-sources\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#register-attribution-sources\" aria-hidden=\"true\">#</a> Register attribution sources</h3>\n<p>Script tags can now be used to register attribution sources, similar to support\nfor the <code>&lt;img&gt;</code> tag.</p>\n<h3 id=\"more-api-updates\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#more-api-updates\" aria-hidden=\"true\">#</a> More API updates</h3>\n<p>Other changes that have been made and cited in the API handbook include:</p>\n<ul>\n<li>Sources can be registered with JavaScript request APIs.</li>\n<li><code>window.registerSource</code> was removed.</li>\n<li>It is now optional to include a value for <code>attributionsrc</code> when registering\nsources.</li>\n<li><code>Attribution-Reporting-Eligible</code> header added to incoming source\nregistration requests.</li>\n<li>There was a minor change to <code>encodeURIComponent</code>.</li>\n<li>The <a href=\"https://github.com/WICG/attribution-reporting-api/pull/471\">privacy budget key was removed</a>\nfrom the <code>shared_info</code> field in aggregatable reports.</li>\n</ul>\n<h2 id=\"support-for-the-aggregation-service\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#support-for-the-aggregation-service\" aria-hidden=\"true\">#</a> Support for the Aggregation Service</h2>\n<p>In Chrome 104, we intend to update the format of some information inside of\naggregatable reports. We are currently building support for this change in the\nAggregation Service. This document will be updated, as well the\n<a href=\"https://developer.chrome.com/docs/privacy-sandbox/attribution-reporting-updates/#changelog\">changelog</a>,\nafter the changes are shipped.</p>\n<p>We've gathered a document of <a href=\"https://docs.google.com/document/d/1bU0a_njpDcRd9vDR0AJjwJjrf3Or8vAzyfuK8JZDEfo/edit?usp=sharing\">practical tips and strategies to generate summary\nreports</a>.\nThere are a number of insights, including:</p>\n<ul>\n<li>Overview of noise in summary report generation</li>\n<li>A detailed explanation of dimensions, keys, and values</li>\n<li>Aggregation keys in practice, including a key structure map</li>\n<li>Aggregatable values in practice, and implications of the contribution budget</li>\n<li>Guide to experimenting with epsilon</li>\n</ul>\n<h2 id=\"read-more-about-the-updates\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/attribution-reporting-updates-june-2022/#read-more-about-the-updates\" aria-hidden=\"true\">#</a> Read more about the updates</h2>\n<ul>\n<li>Read the <a href=\"https://docs.google.com/document/d/1BXchEk-UMgcr2fpjfXrQ3D8VhTR-COGYS1cwK_nyLfg/edit\">API handbook</a>.</li>\n<li>Read <a href=\"https://docs.google.com/document/d/1lvrKd5Vv7SYLMGZb0Fz7bpGNEl0LOx9i1waAHw2sUg8/edit\">What you should know about the API</a>.</li>\n<li>Read <a href=\"https://docs.google.com/document/d/1bU0a_njpDcRd9vDR0AJjwJjrf3Or8vAzyfuK8JZDEfo/edit?usp=sharing\">Experiment with Attribution Reporting: Strategy and tips for summary reports</a>.</li>\n</ul>\n<p><em>The header image is from <a href=\"https://unsplash.com/@diana_pole\">Diana Polekhina</a> on <a href=\"https://unsplash.com/\">Unsplash</a>.</em></p>",
      "content_text": "The Attribution Reporting proposal is changing for Chrome version 104,\nwith new API mechanisms, functionality, and updates to the aggregation service.\nTo get the latest information on versions, sign up for Chrome OS release\nnotifications.\n# Who are these updates for?\nThese updates are for you if:\n\nYou already are familiar with the API—for example, if you've been observing\nor participating in the discussions on the WICG repository and want to\nunderstand the changes made to the API.\nYou're using the Attribution Reporting API in a demo or plan to test in the\norigin trial.\n\nIf you're just getting started with this API and/or have not experimented with\nit yet, go directly to the introduction to the\nAPI instead.\n\nThe Google Chrome team will host developer office\nhours,\nwhere developers who are testing and integrating the Privacy Sandbox\ntechnologies can learn more about Attribution Reporting in Chrome's Privacy\nSandbox.\n\n# Attribution Reporting API updates\nThe API handbook\nand Attribution Reporting demo\nhave been updated to reflect the latest changes to the Attribution Reporting\nclient-side API.\nMost changes don't require action. Those that do require updates for your\nimplementation have been highlighted below.\n# (Action required) unified headers for registration\nThe headers have been unified. There is now just one header for sources and one\nfor triggers, formatted in JSON.\n\nTo register attribution sources, you can respond to registration requests\nwith the header Attribution-Reporting-Register-Source.\nTo complete trigger registration, set the\nAttribution-Reporting-Register-Trigger header.\n\nThis change requires action. Refer to the\nAPI handbook\nfor more information.\n# (Action required) aggregation keys are now a dictionary\nTo register attribution sources,\ncontinue to use aggregation_keys, but now stored as a JSON dictionary instead\nof a list.\nFor example:\n\"aggregation_keys\": {    // Generate a \"0x159\" key piece for the key named \"campaignCounts\".    \"campaignCounts\": \"0x159\", // User saw ad from campaign 345 (out of 511)    // Generates a \"0x5\" key piece (low order bits of the key) for     // the key named \"geoValue\".    \"geoValue\": \"0x5\" // Source-side geo region = 5 (US), out of a possible ~100 regions }\nThis change requires action. Refer to the\nAPI handbook\nfor more information.\n# Report generation\nYou can choose to generate only aggregatable reports, which can be aggregated\ninto summary reports. If your filters don't match any event triggers, then no\nevent-level reports will be generated.\n# Unified debug key setting\nThe debug key should now be set in the source and trigger headers, instead of\nwith separate headers. Learn more about how to debug\nreports.\n# Register attribution sources\nScript tags can now be used to register attribution sources, similar to support\nfor the <img> tag.\n# More API updates\nOther changes that have been made and cited in the API handbook include:\n\nSources can be registered with JavaScript request APIs.\nwindow.registerSource was removed.\nIt is now optional to include a value for attributionsrc when registering\nsources.\nAttribution-Reporting-Eligible header added to incoming source\nregistration requests.\nThere was a minor change to encodeURIComponent.\nThe privacy budget key was removed\nfrom the shared_info field in aggregatable reports.\n\n# Support for the Aggregation Service\nIn Chrome 104, we intend to update the format of some information inside of\naggregatable reports. We are currently building support for this change in the\nAggregation Service. This document will be updated, as well the\nchangelog,\nafter the changes are shipped.\nWe've gathered a document of practical tips and strategies to generate summary\nreports.\nThere are a number of insights, including:\n\nOverview of noise in summary report generation\nA detailed explanation of dimensions, keys, and values\nAggregation keys in practice, including a key structure map\nAggregatable values in practice, and implications of the contribution budget\nGuide to experimenting with epsilon\n\n# Read more about the updates\n\nRead the API handbook.\nRead What you should know about the API.\nRead Experiment with Attribution Reporting: Strategy and tips for summary reports.\n\nThe header image is from Diana Polekhina on Unsplash.",
      "date_published": "2022-06-27T04:12:57.674Z",
      "date_modified": "2022-06-23T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/new-in-chrome-103/",
      "url": "https://developer.chrome.com/en/blog/new-in-chrome-103/",
      "title": "New in Chrome 103",
      "summary": "\n  \n\nHere's what you need to know:\n\nThere's a new HTTP 103 status code that helps the browser\ndecide what content to preload before the page has even started to arrive.\nThe Local Font Access API gives web applications the ability\nto enumerate and use fonts installed on the user's computer.\nAbortSignal.timeout() is an easier way to implement\ntimeouts on asynchronous APIs.\nAnd there's plenty more.\n\nI'm Pete LePage. Let's dive in and\nsee what's new for developers in Chrome 103.\n# HTTP 103 status code 103 - early hints\nOne way you can improve page performance is to use resource hints. They give\nthe browser \"hints\" about what stuff it might need later. For example,\npreloading files, or connecting to a different server.\n<link as=\"font\" crossorigin=\"anonymous\"      href=\"...\" rel=\"preload\"><link as=\"font\" crossorigin=\"anonymous\"      href=\"...\" rel=\"preload\"><link href=\"https://web-dev.imgix.net\"      rel=\"preconnect\">\nBut the browser can't act on those hints until the server sends at least\npart of the page.\nImagine the browser requests a page, but the server requires a few hundred\nmilliseconds to generate it. Until the browser starts to receive the page,\nit just sits there and waits. But, if the server knows the page will always\nneed a certain set of subresources, for example, a CSS file, some JavaScript,\nand a few images, it can immediately respond with the new HTTP 103\nEarly Hints status code, and ask the browser to preload those subresources.\nThen, once the server has generated the page, it can send it with the normal\nHTTP 200 response. As the page comes in, the browser has already started\nloading the required resources.\nSince this is a new HTTP status code, using it requires updates to your server.\nGet started with HTTP 103 Early hints:\n\nExplainer for Early Hints\nApache 2 Early Hints configuration\nUsing Early Hints on Cloudflare\nFastly Beyond Server Push: The 103 Early Hints Status Code\n\n# Local Font Access API\nFonts on the web have always been a challenge, and especially so for apps\nthat let users create their own graphics and designs. Until now, web apps\ncould only really use web fonts. There was no way to get a list of fonts the user had installed on their\ncomputer. And, there was no way to access the full font table data, critical\nif you need to implement your own custom text stack.\nThe new Local Font Access API gives web applications the ability to enumerate\nthe local fonts on the user's device, and provides access to the font table data.\nTo get a list of fonts installed on the device, you'll first need to request\npermission.\n// Ask for permission to use the APItry {  const status = await navigator.permissions.request({    name: 'local-fonts',  });  if (status.state !== 'granted') {    throw new Error('No Permission.');  }} catch (err) {  if (err.name !== 'TypeError') {    throw err;  }}\nThen, call window.queryLocalFonts(). It returns an array of all the fonts\ninstalled on the users device.\nconst opts = {};const pickedFonts = await self.queryLocalFonts();for (const fontData of pickedFonts) {  console.log(fontData.postscriptName);  console.log(fontData.fullName);  console.log(fontData.family);  console.log(fontData.style);}\nIf you're only interested in a subset of fonts, you can filter them by adding\na postscriptNames parameter.\nconst opts = {  postscriptNames: [    'Verdana',    'Verdana-Bold',    'Verdana-Italic',  ],};const pickedFonts = await self.queryLocalFonts(opts);\nCheck out Tom's article Use advanced typography with local fonts\non web.dev for complete details.\n# Easier Timeouts with AbortSignal.timeout()\nIn JavaScript, AbortController and AbortSignal are used to cancel an\nasynchronous call.\nFor example, when making a fetch() request, you can create an\nAbortSignal, and pass it to fetch(). If you want to cancel the fetch()\nbefore it returns, call abort() on the instance of the AbortSignal. Up\nuntil now, if you wanted it to abort after a specific amount of time, you'd\nneed to wrap it in a setTimeout().\nconst controller = new AbortController();const signal = controller.signal;const resp = fetch(url, { signal });setTimeout(() => {  // abort the fetch after 6 seconds  controller.abort();}, 6000);\nThankfully, that just got easier with a new timeout() static method on\nAbortSignal. It returns an AbortSignal object that is automatically\naborted after the given number of milliseconds. What used to be a handful of\nlines of code, is now just one.\nconst signal = AbortSignal.timeout(6000);const resp = fetch(url, { signal });\nAbortSignal.timeout()\nis supported in Chrome 103, and is already in Firefox, and Safari.\n# And more!\nOf course there's plenty more.\n\nThe avif image file format is now sharable by Web Share\nChromium now matches Firefox by firing popstate immediately after URL\nchanges. The order of events is now: popstate then hashchange on both\nplatforms.\nAnd Element.isVisible() tells you whether an element is visible or not.\n\n\nIn the video, I mentioned Element.isVisible() is available in stable, but\nit is currently only available behind a feature flag.\n\n# Further reading\nThis covers only some of the key highlights. Check the links below for\nadditional changes in Chrome 103.\n\nWhat's new in Chrome DevTools (103)\nChrome 103 deprecations and removals\nChromeStatus.com updates for Chrome 103\nChromium source repository change list\nChrome release calendar\n\n# Subscribe\nTo stay up to date, subscribe to the\nChrome Developers YouTube channel,\nand you'll get an email notification whenever we launch a new video.\nI'm Pete LePage, and as soon as Chrome 104 is released, I'll be right here to\ntell you what's new in Chrome!",
      "content_html": "<div class=\"youtube\">\n  <iframe class=\"youtube__embed\" src=\"https://www.youtube.com/embed/e8LUoJClVo4\" title=\"youtube embed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n</div>\n<p>Here's what you need to know:</p>\n<ul>\n<li>There's a new <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#http103\">HTTP 103 status code</a> that helps the browser\ndecide what content to preload before the page has even started to arrive.</li>\n<li>The <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#local-fonts\">Local Font Access API</a> gives web applications the ability\nto enumerate and use fonts installed on the user's computer.</li>\n<li><a href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#abort-timeout\"><code>AbortSignal.timeout()</code></a> is an easier way to implement\ntimeouts on asynchronous APIs.</li>\n<li>And there's plenty <a href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#more\">more</a>.</li>\n</ul>\n<p>I'm <a href=\"https://petelepage.com/\">Pete LePage</a>. Let's dive in and\nsee what's new for developers in Chrome 103.</p>\n<h2 id=\"http103\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#http103\" aria-hidden=\"true\">#</a> HTTP 103 status code 103 - early hints</h2>\n<p>One way you can improve page performance is to use resource hints. They give\nthe browser &quot;hints&quot; about what stuff it might need later. For example,\npreloading files, or connecting to a different server.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><br />      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><br />      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://web-dev.imgix.net<span class=\"token punctuation\">\"</span></span><br />      <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preconnect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>But the browser can't act on those hints until the server sends at least\npart of the page.</p>\n<p>Imagine the browser requests a page, but the server requires a few hundred\nmilliseconds to generate it. Until the browser starts to receive the page,\nit just sits there and waits. But, if the server knows the page will always\nneed a certain set of subresources, for example, a CSS file, some JavaScript,\nand a few images, it can immediately respond with the new HTTP 103\nEarly Hints status code, and ask the browser to preload those subresources.</p>\n<p>Then, once the server has generated the page, it can send it with the normal\nHTTP 200 response. As the page comes in, the browser has already started\nloading the required resources.</p>\n<p>Since this is a new HTTP status code, using it requires updates to your server.</p>\n<p>Get started with HTTP 103 Early hints:</p>\n<ul>\n<li><a href=\"https://github.com/bashi/early-hints-explainer/blob/main/explainer.md\">Explainer for Early Hints</a></li>\n<li><a href=\"https://httpd.apache.org/docs/2.4/howto/http2.html#earlyhints\">Apache 2 Early Hints configuration</a></li>\n<li><a href=\"https://developers.cloudflare.com/cache/about/early-hints/\">Using Early Hints on Cloudflare</a></li>\n<li><a href=\"https://www.fastly.com/blog/beyond-server-push-experimenting-with-the-103-early-hints-status-code\">Fastly Beyond Server Push: The 103 Early Hints Status Code</a></li>\n</ul>\n<h2 id=\"local-fonts\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#local-fonts\" aria-hidden=\"true\">#</a> Local Font Access API</h2>\n<p>Fonts on the web have always been a challenge, and especially so for apps\nthat let users create their own graphics and designs. Until now, web apps\ncould only really use web fonts. There was no way to get a list of fonts the user had installed on their\ncomputer. And, there was no way to access the full font table data, critical\nif you need to implement your own custom text stack.</p>\n<p>The new Local Font Access API gives web applications the ability to enumerate\nthe local fonts on the user's device, and provides access to the font table data.</p>\n<p>To get a list of fonts installed on the device, you'll first need to request\npermission.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Ask for permission to use the API</span><br /><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>permissions<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br />    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'local-fonts'</span><span class=\"token punctuation\">,</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>state <span class=\"token operator\">!==</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No Permission.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">'TypeError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span><br />  <span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">}</span></code></pre>\n<p>Then, call <code>window.queryLocalFonts()</code>. It returns an array of all the fonts\ninstalled on the users device.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> opts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">const</span> pickedFonts <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">queryLocalFonts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> fontData <span class=\"token keyword\">of</span> pickedFonts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fontData<span class=\"token punctuation\">.</span>postscriptName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fontData<span class=\"token punctuation\">.</span>fullName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fontData<span class=\"token punctuation\">.</span>family<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fontData<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token punctuation\">}</span></code></pre>\n<p>If you're only interested in a subset of fonts, you can filter them by adding\na <code>postscriptNames</code> parameter.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> opts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token literal-property property\">postscriptNames</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br />    <span class=\"token string\">'Verdana'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token string\">'Verdana-Bold'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token string\">'Verdana-Italic'</span><span class=\"token punctuation\">,</span><br />  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">const</span> pickedFonts <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">queryLocalFonts</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Check out Tom's article <a href=\"https://web.dev/local-fonts/\">Use advanced typography with local fonts</a>\non web.dev for complete details.</p>\n<h2 id=\"abort-timeout\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#abort-timeout\" aria-hidden=\"true\">#</a> Easier Timeouts with AbortSignal.timeout()</h2>\n<p>In JavaScript, <code>AbortController</code> and <code>AbortSignal</code> are used to cancel an\nasynchronous call.</p>\n<p>For example, when making a <code>fetch()</code> request, you can create an\n<code>AbortSignal</code>, and pass it to <code>fetch()</code>. If you want to cancel the <code>fetch()</code>\nbefore it returns, call <code>abort()</code> on the instance of the <code>AbortSignal</code>. Up\nuntil now, if you wanted it to abort after a specific amount of time, you'd\nneed to wrap it in a <code>setTimeout()</code>.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">const</span> signal <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br /><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br />  <span class=\"token comment\">// abort the fetch after 6 seconds</span><br />  controller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Thankfully, that just got easier with a new <code>timeout()</code> static method on\n<code>AbortSignal</code>. It returns an <code>AbortSignal</code> object that is automatically\naborted after the given number of milliseconds. What used to be a handful of\nlines of code, is now just one.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> signal <span class=\"token operator\">=</span> AbortSignal<span class=\"token punctuation\">.</span><span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/AbortSignal\"><code>AbortSignal.timeout()</code></a>\nis supported in Chrome 103, and is already in Firefox, and Safari.</p>\n<h2 id=\"more\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#more\" aria-hidden=\"true\">#</a> And more!</h2>\n<p>Of course there's plenty more.</p>\n<ul>\n<li>The <code>avif</code> image file format is now sharable by Web Share</li>\n<li>Chromium now matches Firefox by firing <code>popstate</code> immediately after URL\nchanges. The order of events is now: <code>popstate</code> then <code>hashchange</code> on both\nplatforms.</li>\n<li>And <code>Element.isVisible()</code> tells you whether an element is visible or not.</li>\n</ul>\n<div class=\"aside aside--note\">\n<p>In the video, I mentioned <code>Element.isVisible()</code> is available in stable, but\nit is currently only available behind a feature flag.</p>\n</div>\n<h2 id=\"further-reading\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#further-reading\" aria-hidden=\"true\">#</a> Further reading</h2>\n<p>This covers only some of the key highlights. Check the links below for\nadditional changes in Chrome 103.</p>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/\">What's new in Chrome DevTools (103)</a></li>\n<li><a href=\"https://developer.chrome.com/blog/deps-rems-103/\">Chrome 103 deprecations and removals</a></li>\n<li><a href=\"https://www.chromestatus.com/features#milestone%3D103\">ChromeStatus.com updates for Chrome 103</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+log/102.0.5005.113..103.0.5060.60\">Chromium source repository change list</a></li>\n<li><a href=\"https://chromiumdash.appspot.com/schedule\">Chrome release calendar</a></li>\n</ul>\n<h2 id=\"subscribe\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-chrome-103/#subscribe\" aria-hidden=\"true\">#</a> Subscribe</h2>\n<p>To stay up to date, <a href=\"https://goo.gl/6FP1a5\">subscribe</a> to the\n<a href=\"https://www.youtube.com/user/ChromeDevelopers/\">Chrome Developers YouTube channel</a>,\nand you'll get an email notification whenever we launch a new video.</p>\n<p>I'm Pete LePage, and as soon as Chrome 104 is released, I'll be right here to\ntell you what's new in Chrome!</p>",
      "content_text": "\n  \n\nHere's what you need to know:\n\nThere's a new HTTP 103 status code that helps the browser\ndecide what content to preload before the page has even started to arrive.\nThe Local Font Access API gives web applications the ability\nto enumerate and use fonts installed on the user's computer.\nAbortSignal.timeout() is an easier way to implement\ntimeouts on asynchronous APIs.\nAnd there's plenty more.\n\nI'm Pete LePage. Let's dive in and\nsee what's new for developers in Chrome 103.\n# HTTP 103 status code 103 - early hints\nOne way you can improve page performance is to use resource hints. They give\nthe browser \"hints\" about what stuff it might need later. For example,\npreloading files, or connecting to a different server.\n<link as=\"font\" crossorigin=\"anonymous\"      href=\"...\" rel=\"preload\"><link as=\"font\" crossorigin=\"anonymous\"      href=\"...\" rel=\"preload\"><link href=\"https://web-dev.imgix.net\"      rel=\"preconnect\">\nBut the browser can't act on those hints until the server sends at least\npart of the page.\nImagine the browser requests a page, but the server requires a few hundred\nmilliseconds to generate it. Until the browser starts to receive the page,\nit just sits there and waits. But, if the server knows the page will always\nneed a certain set of subresources, for example, a CSS file, some JavaScript,\nand a few images, it can immediately respond with the new HTTP 103\nEarly Hints status code, and ask the browser to preload those subresources.\nThen, once the server has generated the page, it can send it with the normal\nHTTP 200 response. As the page comes in, the browser has already started\nloading the required resources.\nSince this is a new HTTP status code, using it requires updates to your server.\nGet started with HTTP 103 Early hints:\n\nExplainer for Early Hints\nApache 2 Early Hints configuration\nUsing Early Hints on Cloudflare\nFastly Beyond Server Push: The 103 Early Hints Status Code\n\n# Local Font Access API\nFonts on the web have always been a challenge, and especially so for apps\nthat let users create their own graphics and designs. Until now, web apps\ncould only really use web fonts. There was no way to get a list of fonts the user had installed on their\ncomputer. And, there was no way to access the full font table data, critical\nif you need to implement your own custom text stack.\nThe new Local Font Access API gives web applications the ability to enumerate\nthe local fonts on the user's device, and provides access to the font table data.\nTo get a list of fonts installed on the device, you'll first need to request\npermission.\n// Ask for permission to use the APItry {  const status = await navigator.permissions.request({    name: 'local-fonts',  });  if (status.state !== 'granted') {    throw new Error('No Permission.');  }} catch (err) {  if (err.name !== 'TypeError') {    throw err;  }}\nThen, call window.queryLocalFonts(). It returns an array of all the fonts\ninstalled on the users device.\nconst opts = {};const pickedFonts = await self.queryLocalFonts();for (const fontData of pickedFonts) {  console.log(fontData.postscriptName);  console.log(fontData.fullName);  console.log(fontData.family);  console.log(fontData.style);}\nIf you're only interested in a subset of fonts, you can filter them by adding\na postscriptNames parameter.\nconst opts = {  postscriptNames: [    'Verdana',    'Verdana-Bold',    'Verdana-Italic',  ],};const pickedFonts = await self.queryLocalFonts(opts);\nCheck out Tom's article Use advanced typography with local fonts\non web.dev for complete details.\n# Easier Timeouts with AbortSignal.timeout()\nIn JavaScript, AbortController and AbortSignal are used to cancel an\nasynchronous call.\nFor example, when making a fetch() request, you can create an\nAbortSignal, and pass it to fetch(). If you want to cancel the fetch()\nbefore it returns, call abort() on the instance of the AbortSignal. Up\nuntil now, if you wanted it to abort after a specific amount of time, you'd\nneed to wrap it in a setTimeout().\nconst controller = new AbortController();const signal = controller.signal;const resp = fetch(url, { signal });setTimeout(() => {  // abort the fetch after 6 seconds  controller.abort();}, 6000);\nThankfully, that just got easier with a new timeout() static method on\nAbortSignal. It returns an AbortSignal object that is automatically\naborted after the given number of milliseconds. What used to be a handful of\nlines of code, is now just one.\nconst signal = AbortSignal.timeout(6000);const resp = fetch(url, { signal });\nAbortSignal.timeout()\nis supported in Chrome 103, and is already in Firefox, and Safari.\n# And more!\nOf course there's plenty more.\n\nThe avif image file format is now sharable by Web Share\nChromium now matches Firefox by firing popstate immediately after URL\nchanges. The order of events is now: popstate then hashchange on both\nplatforms.\nAnd Element.isVisible() tells you whether an element is visible or not.\n\n\nIn the video, I mentioned Element.isVisible() is available in stable, but\nit is currently only available behind a feature flag.\n\n# Further reading\nThis covers only some of the key highlights. Check the links below for\nadditional changes in Chrome 103.\n\nWhat's new in Chrome DevTools (103)\nChrome 103 deprecations and removals\nChromeStatus.com updates for Chrome 103\nChromium source repository change list\nChrome release calendar\n\n# Subscribe\nTo stay up to date, subscribe to the\nChrome Developers YouTube channel,\nand you'll get an email notification whenever we launch a new video.\nI'm Pete LePage, and as soon as Chrome 104 is released, I'll be right here to\ntell you what's new in Chrome!",
      "date_published": "2022-06-27T04:12:57.674Z",
      "date_modified": "2022-06-21T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/media-query-range-syntax/",
      "url": "https://developer.chrome.com/en/blog/media-query-range-syntax/",
      "title": "New syntax for range media queries in Chrome 104",
      "summary": "Media Queries enabled responsive design, and the range features that enable testing the minimum and maximum size of the viewport are used by around 80% of sites that use media queries. The Media Queries Level 4 specification includes a new syntax for these range queries.\nThe new syntax has been available in Firefox since Firefox 63, and will be available in Chrome from 104. Let’s take a look at how it can streamline your queries.\nA typical media query testing for a minimum viewport width, would be written as follows:\n@media (min-width: 400px) {  // Styles for viewports with a width of 400 pixels or greater.}\nThe new syntax allows for the use of a comparison operator:\n@media (width >= 400px) {  // Styles for viewports with a width of 400 pixels or greater.}\nTesting for a maximum width:\n@media (max-width: 30em) {  // Styles for viewports with a width of 30em or less.}\nAnd, the version using the level 4 syntax:\n@media (width <= 30em) {  // Styles for viewports with a width of 30em or less.}\nThis syntax has the potential to streamline queries, in particular when testing between two widths. In the following example, the media query tests for a viewport with a minimum width of 400px, and a maximum width of 600px.\n@media (min-width: 400px) and (max-width: 600px) {  // Styles for viewports between 400px and 600px.}\nThis can be rewritten in the new syntax as:\n@media (400px <= width <= 600px )  {  // Styles for viewports between 400px and 600px.}\nThe feature that you are testing, in this case width, goes between the two values.\nIn addition to making media queries less verbose, the new syntax has the advantage of accuracy. The min- and max- queries are inclusive of the specified values, for example min-width: 400px tests for a width of 400px or greater. The new syntax allows you to be more explicit about what you mean and avoid the potential of clashing queries.\nTo use the new range syntax while accounting for browsers that have not yet implemented it, there is a PostCSS plugin that will rewrite the new syntax to the old in your stylesheets.\nHero image by William Warby.",
      "content_html": "<p>Media Queries enabled <a href=\"https://web.dev/learn/design/\">responsive design</a>, and the range features that enable testing the minimum and maximum size of the viewport are used <a href=\"https://almanac.httparchive.org/en/2021/css#media-features-in-use\">by around 80% of sites</a> that use media queries. The Media Queries Level 4 specification includes a new syntax for these range queries.</p>\n<p>The new syntax has been available in Firefox since Firefox 63, and will be available in Chrome from 104. Let’s take a look at how it can streamline your queries.</p>\n<p>A typical media query testing for a minimum viewport width, would be written as follows:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br />  // Styles for viewports with a width of 400 pixels or greater.<br /><span class=\"token punctuation\">}</span></code></pre>\n<p>The new syntax allows for the use of a comparison operator:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span>width >= 400px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br />  // Styles for viewports with a width of 400 pixels or greater.<br /><span class=\"token punctuation\">}</span></code></pre>\n<p>Testing for a maximum width:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 30em<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br />  // Styles for viewports with a width of 30em or less.<br /><span class=\"token punctuation\">}</span></code></pre>\n<p>And, the version using the level 4 syntax:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span>width &lt;= 30em<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br />  // Styles for viewports with a width of 30em or less.<br /><span class=\"token punctuation\">}</span></code></pre>\n<p>This syntax has the potential to streamline queries, in particular when testing between two widths. In the following example, the media query tests for a viewport with a minimum width of 400px, and a maximum width of 600px.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br />  // Styles for viewports between 400px and 600px.<br /><span class=\"token punctuation\">}</span></code></pre>\n<p>This can be rewritten in the new syntax as:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span>400px &lt;= width &lt;= 600px <span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">{</span><br />  // Styles for viewports between 400px and 600px.<br /><span class=\"token punctuation\">}</span></code></pre>\n<p>The feature that you are testing, in this case <code>width</code>, goes between the two values.</p>\n<p>In addition to making media queries less verbose, the new syntax has the advantage of accuracy. The <code>min-</code> and <code>max-</code> queries are inclusive of the specified values, for example <code>min-width: 400px</code> tests for a width of 400px or greater. The new syntax allows you to be more explicit about what you mean and avoid the potential of clashing queries.</p>\n<p>To use the new range syntax while accounting for browsers that have not yet implemented it, there is a <a href=\"https://github.com/postcss/postcss-media-minmax\">PostCSS plugin</a> that will rewrite the new syntax to the old in your stylesheets.</p>\n<p>Hero image by <a href=\"https://unsplash.com/es/@wwarby?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">William Warby</a>.</p>",
      "content_text": "Media Queries enabled responsive design, and the range features that enable testing the minimum and maximum size of the viewport are used by around 80% of sites that use media queries. The Media Queries Level 4 specification includes a new syntax for these range queries.\nThe new syntax has been available in Firefox since Firefox 63, and will be available in Chrome from 104. Let’s take a look at how it can streamline your queries.\nA typical media query testing for a minimum viewport width, would be written as follows:\n@media (min-width: 400px) {  // Styles for viewports with a width of 400 pixels or greater.}\nThe new syntax allows for the use of a comparison operator:\n@media (width >= 400px) {  // Styles for viewports with a width of 400 pixels or greater.}\nTesting for a maximum width:\n@media (max-width: 30em) {  // Styles for viewports with a width of 30em or less.}\nAnd, the version using the level 4 syntax:\n@media (width <= 30em) {  // Styles for viewports with a width of 30em or less.}\nThis syntax has the potential to streamline queries, in particular when testing between two widths. In the following example, the media query tests for a viewport with a minimum width of 400px, and a maximum width of 600px.\n@media (min-width: 400px) and (max-width: 600px) {  // Styles for viewports between 400px and 600px.}\nThis can be rewritten in the new syntax as:\n@media (400px <= width <= 600px )  {  // Styles for viewports between 400px and 600px.}\nThe feature that you are testing, in this case width, goes between the two values.\nIn addition to making media queries less verbose, the new syntax has the advantage of accuracy. The min- and max- queries are inclusive of the specified values, for example min-width: 400px tests for a width of 400px or greater. The new syntax allows you to be more explicit about what you mean and avoid the potential of clashing queries.\nTo use the new range syntax while accounting for browsers that have not yet implemented it, there is a PostCSS plugin that will rewrite the new syntax to the old in your stylesheets.\nHero image by William Warby.",
      "date_published": "2022-06-27T04:12:57.674Z",
      "date_modified": "2022-06-16T00:00:00.000Z"
    },
    {
      "id": "https://developer.chrome.com/en/blog/new-in-devtools-103/",
      "url": "https://developer.chrome.com/en/blog/new-in-devtools-103/",
      "title": "What's New In DevTools (Chrome 103)",
      "summary": "\nInterested in helping improve DevTools? Sign up to participate in Google User Research here.\n\n\n  \n\n# Capture double-click and right-click events in the Recorder panel\nThe Recorder panel can now capture double-click and right-click events.\n\nIn this example, start a recording and try to perform the following steps:\n\nDouble-click the card to enlarge it\nRight-click the card and select an action from the context menu\n\nTo understand how Recorder captured these events, expand the steps:\n\nDouble-click is captured as type: doubleClick.\nRight-click event is captured as type: click but with the button property is set to secondary. The button value of a normal mouse click is primary.\n\nChromium issues: 1300839, 1322879, 1299701, 1323688\n# New timespan and snapshot mode in the Lighthouse panel\nYou can now use Lighthouse to measure your website’s performance beyond page load.\n\nThe Lighthouse panel now supports 3 modes of user flow measurement:\n\nNavigation reports analyze a single page load. Navigation is the most common report type. All Lighthouse reports before the current version are navigation reports.\nTimespans reports analyze an arbitrary time period, typically containing user interactions.\nSnapshots reports analyze the page in a particular state, typically after the user has interacted with it.\n\nFor example, let’s measure the performance of adding items to cart on this demo page. Select the Timespan mode and click Start timespan. Scroll and add a few items to the cart. Once you are done, click on End timespan to generate a Lighthouse report of the user interactions.\n\nSee User flows in Lighthouse to learn about the unique use cases, benefits, and limitations of each mode.\nChromium issue: 1291284\n# Performance Insights updates\n# Improved zoom control in the Performance Insights panel\nDevTools will now zoom in based on your mouse cursor rather than the playhead position.With the latest cursor-based zoom, you can move your mouse to anywhere in the track, and zoom in to the desired area right away.\n          \nSee Performance Insights to learn how to get actionable insights and improve your website’s performance with the panel.\nChromium issue: 1313382\n# Confirm to delete a performance recording\nDevTools now shows a confirmation dialog before deleting a performance recording.\n\nChromium issue: 1318087\n# Reorder panes in the Elements panel\nYou can now reorder panes in the Elements panel based on your preference.\nFor example, when you open DevTools on a narrow screen, the Accessibility pane is hidden under the Show more button. If you frequently debug accessibility issues, you can now drag the pane to the front for easier access.\n\nChromium issue: 1146146\n# Picking a color outside of the browser\nDevTools now supports picking a color outside of the browser. Previously, you could only pick a color within the browser.\nIn the Styles pane, click on any color preview to open a color picker. Use the eyedropper to pick color from anywhere.\n\nChromium issue: 1245191\n# Improved inline value preview during debugging\nThe debugger now shows the inline values preview correctly.\nIn this example, the double function has an input parameter  a and a variable x. Put a breakpoint at the return line and run the code. The inline preview shows values a and x correctly. Previously, the debugger did not show the value x in the inline preview.\n\nChromium issue: 1316340\n# Support large blobs for virtual authenticators\nThe WebAuthn tab now has the new Supports large blob checkbox for virtual authenticators.\nThis checkbox is disabled by default. You can enable it only for the authenticators with ctap2 protocol that support resident keys.\n\nChromium issue: 1321803\n# New keyboard shortcuts in the Sources panel\nTwo new keyboard shortcuts are now available in the  Sources panel:\n\nToggle navigation sidebar (left) with Control / Command + Shift + Y\nToggle debugger sidebar (right) with Control / Command + Shift + H\n\n\nChromium issues: 1226363\n# Sourcemaps improvements\nPreviously, developers experience random failure during:\n\nDebugging with Codepen example\nIdentifying source location of performance issues in a Codepen example\nMissing Component tab when React DevTools is enabled\n\nHere are a few fixes on sourcemaps to improve the overall debugging experience:\n\nCorrect mapping between location and offset for inline scripts and source location\nUse fallback information for frame’s text location\nProperly resolve relative urls with frame's URL\n\nChromium issues: 1319828, 1318635, 1305475\n# Download the preview channels\nConsider using the Chrome Canary, Dev or Beta as your default development browser. These preview channels give you access to the latest DevTools features, test cutting-edge web platform APIs, and find issues on your site before your users do!\n# Getting in touch with the Chrome DevTools team\nUse the following options to discuss the new features and changes in the post, or anything else related to DevTools.\n\nSubmit a suggestion or feedback to us via crbug.com.\nReport a DevTools issue using the More options      > Help > Report a DevTools issues in DevTools.\nTweet at @ChromeDevTools.\nLeave comments on our What's new in DevTools YouTube videos.\n\n# What's New in DevTools\nA list of everything that has been covered in the What's New In DevTools series.\n# Chrome 103\n\nCapture double-click and right-click events in the Recorder panel\nNew timespan and snapshot mode in the Lighthouse panel\nImproved zoom control in the Performance Insights panel\nConfirm to delete a performance recording\nPicking a color outside of the browser\nImproved inline value preview during debugging\nSupport large blobs for virtual authenticators\nNew keyboard shortcuts in the Sources panel\nSourcemaps improvements\n\n# Chrome 102\n\nPreview feature: New Performance insights panel\nNew shortcuts to emulate light and dark themes\nImproved security on the Network Preview tab\nImproved reloading at breakpoint\nConsole updates\nCancel user flow recording at the start\nDisplay inherited highlight pseudo-elements in the Styles pane\nMiscellaneous highlights\n[Experimental] Copy CSS changes\n[Experimental] Picking color outside of browser\n\n# Chrome 101\n\nImport and export recorded user flows as a JSON file\nView cascade layers in the Styles pane\nSupport for the hwb() color function\nImproved the display of private properties\nMiscellaneous highlights\n[Experimental] New timespan and snapshot mode in the Lighthouse panel\n\n# Chrome 100\n\nView and edit @supports at rules in the Styles pane\nSupport common selectors by default\nCustomize the recording’s selector\nRename a recording\nPreview class/function properties on hover\nPartially presented frames in the Performance panel\nMiscellaneous highlights\n\n# Chrome 99\n\nThrottling WebSocket requests\nNew Reporting API pane in the Application panel\nSupport wait until element is visible/clickable in the Recorder panel\nBetter console styling, formatting and filtering\nDebug Chrome extension with sourcemap files\nImproved source folder tree in the Sources panel\nDisplay worker source files in the Sources panel\nChrome’s Auto Dark Theme updates\nTouch-friendly color-picker and split pane\nMiscellaneous highlights\n\n# Chrome 98\n\nPreview feature: Full-page accessibility tree\nMore precise changes in the Changes tab\nSet longer timeout for user flow recording\nEnsure your pages are cacheable with the Back/forward cache tab\nNew Properties pane filter\nEmulate the CSS forced-colors media feature\nShow rulers on hover command\nSupport row-reverse and column-reverse in the Flexbox editor\nNew keyboard shortcuts to replay XHR and expand all search results\nLighthouse 9 in the Lighthouse panel\nImproved Sources panel\nMiscellaneous highlights\n[Experimental] Endpoints in the Reporting API pane\n\n# Chrome 97\n\nPreview feature: New Recorder panel\nRefresh device list in Device Mode\nAutocomplete with Edit as HTML\nImproved code debugging experience\nSyncing DevTools settings across devices\n\n# Chrome 96\n\nPreview feature: New CSS Overview panel\nRestored and improved CSS length edit and copy experince\nEmulate the CSS prefers-contrast media feature\nEmulate the Chrome’s Auto Dark Theme feature\nCopy declarations as JavaScript in the Styles pane\nNew Payload tab in the Network panel\nImproved the display of properties in the Properties pane\nOption to hide CORS errors in the Console\nProper Intl objects preview and evaluation in the Console\nConsistent async stack traces\nRetain the Console sidebar\nDeprecated Application cache pane in the Application panel\n[Experimental] New Reporting API pane in the Application panel\n\n# Chrome 95\n\nNew CSS length authoring tools\nHide issues in the Issues tab\nImproved the display of properties\nLighthouse 8.4 in the Lighthouse panel\nSort snippets in the Sources panel\nNew links to translated release notes and report a translation bug\nImproved UI for DevTools command menu\n\n# Chrome 94\n\nUse DevTools in your preferred language\nNew Nest Hub devices in the Device list\nOrigin trials in the Frame details view\nNew CSS container queries badge\nNew checkbox to invert the network filters\nUpcoming deprecation of the Console sidebar\nDisplay raw Set-Cookies headers in the Issues tab and Network panel\nConsistent display native accessors as own properties in the Console\nProper error stack traces for inline scripts with #sourceURL\nChange color format in the Computed pane\nReplace custom tooltips with native HTML tooltips\n[Experimental] Hide issues in the Issues tab\n\n# Chrome 93\n\nEditable CSS container queries  in the Styles pane\nWeb bundle preview in the Network panel\nAttribution Reporting API debugging\nBetter string handling in the Console\nImproved CORS debugging\nLighthouse 8.1\nNew note URL in the Manifest pane\nFixed CSS matching selectors\nPretty-printing JSON responses in the Network panel\n\n# Chrome 92\n\nCSS grid editor\nSupport for const redeclarations in the Console\nSource order viewer\nNew shortcut to view frame details\nEnhanced CORS debugging support\nRename XHR label to Fetch/XHR\nFilter Wasm resource type in the Network panel\nUser-Agent Client Hints for devices in the Network conditions tab\nReport Quirks mode issues in the Issues tab\nInclude Compute Intersections in the Performance panel\nLighthouse 7.5 in the Lighthouse panel\nDeprecated \"Restart frame\" context menu in the call stack\n[Experimental] Protocol monitor\n[Experimental] Puppeteer Recorder\n\n# Chrome 91\n\nWeb Vitals information pop up\nNew Memory inspector\nVisualize CSS scroll-snap\nNew badge settings pane\nEnhanced image preview with aspect ratio information\nNew network conditions button with options to configure Content-Encodings\nshortcut to view computed value\naccent-color keyword\nCategorize issue types with colors and icons\nDelete Trust tokens\nBlocked features in the Frame details view\nFilter experiments in the Experiments setting\nNew Vary Header column in the Cache storage pane\nSupport JavaScript private brand check\nEnhanced support for breakpoints debugging\nSupport hover preview with [] notation\nImproved outline of HTML files\nProper error stack traces for Wasm debugging\n\n# Chrome 90\n\nNew CSS flexbox debugging tools\nNew Core Web Vitals overlay\nMoved issue count to the Console status bar\nReport Trusted Web Activity issues\nFormat strings as (valid) JavaScript string literals in the Console\nNew Trust Tokens pane in the Application panel\nEmulate the CSS color-gamut media feature\nImproved Progressive Web Apps tooling\nNew Remote Address Space column in the Network panel\nPerformance improvements\nDisplay allowed/disallowed features in the Frame details view\nNew SameParty column in the Cookies pane\nDeprecated non-standard fn.displayName support\nDeprecation of Don't show Chrome Data Saver warning in the Settings menu\n[Experimental] Automatic low-contrast issue reporting in the Issues tab\n[Experimental] Full accessibility tree view in the Elements panel\n\n# Chrome 89\n\nDebugging support for Trusted Types violations\nCapture node screenshot beyond viewport\nNew Trust Tokens tab for network requests\nLighthouse 7 in the Lighthouse panel\nSupport forcing the CSS :target state\nNew shortcut to duplicate element\nColor pickers for custom CSS properties\nNew shortcuts to copy CSS properties\nNew option to show URL-decoded cookies\nClear only visible cookies\nNew option to clear third-party cookies in the Storage pane\nEdit User-Agent Client Hints for custom devices\nPersist \"record network log\" setting\nView WebTransport connections in the Network panel\n\"Online\" renamed to \"No throttling\"\nNew copy options in the Console, Sources panel, and Styles pane\nNew Service Workers information in the Frame details view\nMeasure Memory information in the Frame details view\nProvide feedback from the Issues tab\nDropped frames in the Performance panel\nEmulate foldable and dual-screen in Device Mode\n[Experimental] Automate browser testing with Puppeteer Recorder\n[Experimental] Font editor in the Styles pane\n[Experimental] CSS flexbox debugging tools\n[Experimental] New CSP Violations tab\n[Experimental] New color contrast calculation - Advanced Perceptual Contrast Algorithm (APCA)\n\n# Chrome 88\n\nFaster DevTools startup\nNew CSS angle visualization tools\nEmulate unsupported image types\nSimulate storage quota size in the Storage pane\nNew Web Vitals lane in the Performance panel\nReport CORS errors in the Network panel\nCross-origin isolation information in the Frame details view\nNew Web Workers information in the Frame details view\nDisplay opener frame details for opened windows\nOpen Network panel from the Service Workers pane\nCopy property value\nCopy stacktrace for network initiator\nPreview Wasm variable value on mouseover\nEvaluate Wasm variable in the Console\nConsistent units of measurement for file/memory sizes\nHighlight pseudo elements in the Elements panel\n[Experimental] CSS Flexbox debugging tools\n[Experimental] Customize chords keyboard shortcuts\n\n# Chrome 87\n\nNew CSS Grid debugging tools\nNew WebAuthn tab\nMove tools between top and bottom panel\nNew Computed sidebar pane in the Styles pane\nGrouping CSS properties in the Computed pane\nLighthouse 6.3 in the Lighthouse panel\nperformance.mark() events in the Timings section\nNew resource-type and url filters in the Network panel\nFrame details view updates\nDeprecation of Settings in the More tools menu\n[Experimental] View and fix color contrast issues in the CSS Overview panel\n[Experimental] Customize keyboard shortcuts in DevTools\n\n# Chrome 86\n\nNew Media panel\nCapture node screenshots via Elements panel context menu\nIssues tab updates\nEmulate missing local fonts\nEmulate inactive users\nEmulate prefers-reduced-data\nSupport for new JavaScript features\nLighthouse 6.2 in the Lighthouse panel\nDeprecation of \"other origins\" listing in the Service Workers pane\nShow coverage summary for filtered items\nNew frame details view in Application panel\nAccessible color suggestion in the Styles pane\nReinstate Properties pane in the Elements panel\nHuman-readable X-Client-Data header values in the Network panel\nAuto-complete custom fonts in the Styles pane\nConsistently display resource type in Network panel\nClear buttons in the Elements and Network panels\n\n# Chrome 85\n\nStyle editing for CSS-in-JS frameworks\nLighthouse 6 in the Lighthouse panel\nFirst Meaningful Paint (FMP) deprecation\nSupport for new JavaScript features\nNew app shortcut warnings in the Manifest pane\nService worker respondWith events in the Timing tab\nConsistent display of the Computed pane\nBytecode offsets for WebAssembly files\nLine-wise copy and cut in Sources Panel\nConsole settings updates\nPerformance panel updates\nNew icons for breakpoints, conditional breakpoints, and logpoints\n\n# Chrome 84\n\nFix site issues with the new Issues tab\nView accessibility information in the Inspect Mode tooltip\nPerformance panel updates\nMore accurate promise terminology in the Console\nStyles pane updates\nDeprecation of the Properties pane in the Elements panel\nApp shortcuts support in the Manifest pane\n\n# Chrome 83\n\nEmulate vision deficiencies\nEmulate locales\nCross-Origin Embedder Policy (COEP) debugging\nNew icons for breakpoints, conditional breakpoints, and logpoints\nView network requests that set a specific cookie\nDock to left from the Command Menu\nThe Settings option in the Main Menu has moved\nThe Audits panel is now the Lighthouse panel\nDelete all Local Overrides in a folder\nUpdated Long Tasks UI\nMaskable icon support in the Manifest pane\n\n# Chrome 82\nChrome 82 was cancelled.\n# Chrome 81\n\nMoto G4 support in Device Mode\nCookie-related updates\nMore accurate web app manifest icons\nHover over CSS content properties to see unescaped values\nSource map errors in the Console\nSetting for disabling scrolling past the end of a file\n\n# Chrome 80\n\nSupport for let and class redeclarations in the Console\nImproved WebAssembly debugging\nRequest Initiator Chains in the Initiator tab\nHighlight the selected network request in the Overview\nURL and path columns in the Network panel\nUpdated User-Agent strings\nNew Audits panel configuration UI\nPer-function or per-block code coverage modes\nCode coverage must now be initiated by a page reload\n\n# Chrome 79\n\nDebug why a cookie was blocked\nView cookie values\nSimulate different prefers-color-scheme and prefers-reduced-motion preferences\nCode coverage updates\nDebug why a network resource was requested\nConsole and Sources panels respect indentation preferences again\nNew shortcuts for cursor navigation\n\n# Chrome 78\n\nMulti-client support in the Audits panel\nPayment Handler debugging\nLighthouse 5.2 in the Audits panel\nLargest Contentful Paint in the Performance panel\nFile DevTools issues from the Main Menu\n\n# Chrome 77\n\nCopy element styles\nVisualize layout shifts\nLighthouse 5.1 in the Audits panel\nOS theme syncing\nKeyboard shortcut for opening the Breakpoint Editor\nPrefetch cache in the Network panel\nPrivate properties when viewing objects\nNotifications and push messages in the Application panel\n\n# Chrome 76\n\nAutocomplete with CSS values\nA new UI for network settings\nWebSocket messages in HAR exports\nHAR import and export buttons\nReal-time memory usage\nService worker registration port numbers\nInspect Background Fetch and Background Sync events\nPuppeteer for Firefox\n\n# Chrome 75\n\nMeaningful presets when autocompleting CSS functions\nClear site data from the Command Menu\nView all IndexedDB databases\nView a resource's uncompressed size on hover\nInline breakpoints in the Breakpoints pane\nIndexedDB and Cache resource counts\nSetting for disabling the detailed Inspect tooltip\nSetting for toggling tab indentation in the Editor\n\n# Chrome 74\n\nHighlight all nodes affected by CSS property\nLighthouse v4 in the Audits panel\nWebSocket binary message viewer\nCapture area screenshot in the Command Menu\nService worker filters in the Network panel\nPerformance panel updates\nLong tasks in Performance panel recordings\nFirst Paint in the Timing section\nBonus tip: Shortcut for viewing RGB and HSL color codes (video)\n\n# Chrome 73\n\nLogpoints\nDetailed tooltips in Inspect Mode\nExport code coverage data\nNavigate the Console with a keyboard\nAAA contrast ratio line in the Color Picker\nSave custom geolocation overrides\nCode folding\nFrames tab renamed to Messages tab\nBonus tip: Network panel filtering by property (video)\n\n# Chrome 72\n\nVisualize performance metrics in the Performance panel\nHighlight text nodes in the DOM Tree\nCopy the JS path to a DOM node\nAudits panel updates, including a new audit\nthat detects JS libraries and new keywords for accessing the Audits panel from the Command Menu\nBonus tip: Use Device Mode to inspect media queries (video)\n\n# Chrome 71\n\nHover over a Live Expression result to highlight a DOM node\nStore DOM nodes as global variables\nInitiator and priority information now in HAR imports and exports\nAccess the Command Menu from the Main Menu\nPicture-in-Picture breakpoints\nBonus tip: Use monitorEvents() to log a node's fired events in the\nConsole (video)\n\n# Chrome 70\n\nLive Expressions in the Console\nHighlight DOM nodes during Eager Evaluation\nPerformance panel optimizations\nMore reliable debugging\nEnable network throttling from the Command Menu\nAutocomplete Conditional Breakpoints\nBreak on AudioContext events\nDebug Node.js apps with ndb\nBonus tip: Measure real world user interactions with the User Timing API\n\n# Chrome 68\n\nEager Evaluation\nArgument hints\nFunction autocompletion\nES2017 keywords\nLighthouse 3.0 in the Audits panel\nBigInt support\nAdding property paths to the Watch pane\n\"Show timestamps\" moved to Settings\nBonus tip: Lesser-known Console methods (video)\n\n# Chrome 67\n\nSearch across all network headers\nCSS variable value previews\nCopy as fetch\nNew audits, desktop configuration options, and viewing traces\nStop infinite loops\nUser Timing in the Performance tabs\nJavaScript VM instances clearly listed in the Memory panel\nNetwork tab renamed to Page tab\nDark theme updates\nCertificate transparency information in the Security panel\nSite isolation features in the Performance panel\nBonus tip: Layers panel + Animations Inspector (video)\n\n# Chrome 66\n\nBlackboxing in the Network panel\nAuto-adjust zooming in Device Mode\nPretty-printing in the Preview and Response tabs\nPreviewing HTML content in the Preview tab\nLocal Overrides support for styles inside of HTML\nBonus tip: Blackbox framework scripts to make Event Listener Breakpoints more useful\n\n# Chrome 65\n\nLocal Overrides\nNew accessibility tools\nThe Changes tab\nNew SEO and performance audits\nMultiple recordings in the Performance panel\nReliable code stepping with workers in async code\nBonus tip: Automate DevTools actions with Puppeteer (video)\n\n# Chrome 64\n\nPerformance Monitor\nConsole Sidebar\nGroup similar Console messages\nBonus tip: Toggle hover pseudo-class (video)\n\n# Chrome 63\n\nMulti-client remote debugging support\nWorkspaces 2.0\n4 new audits\nSimulate push notifications with custom data\nTrigger background sync events with custom tags\nBonus tip: Event listener breakpoints (video)\n\n# Chrome 62\n\nTop-level await in the Console\nNew screenshot workflows\nCSS Grid highlighting\nA new Console API for querying objects\nNew Console filters\nHAR imports in the Network panel\nPreviewable cache resources\nMore predictable cache debugging\nBlock-level code coverage\n\n# Chrome 61\n\nMobile device throttling simulation\nView storage usage\nView when a service worker cached responses\nEnable the FPS meter from the Command Menu\nSet mousewheel behavior to zoom or scroll\nDebugging support for ES6 modules\n\n# Chrome 60\n\nNew Audits panel\n3rd-Party Badges\nA new gesture for Continue To Here\nStep into async\nMore informative object previews in the Console\nMore informative context selection in the Console\nReal-time updates in the Coverage tab\nSimpler network throttling options\nAsync stacks on by default\n\n# Chrome 59\n\nCSS and JS code coverage\nFull-page screenshots\nBlock requests\nStep over async await\nUnified Command Menu\n",
      "content_html": "<!-- image/dPDCek3EhZgLQPGtEG3y0fTn4v82/zDmJK6jWRUal7SAiezJl.jpg -->\n<div class=\"aside aside--note\">\n<p>Interested in helping improve DevTools? Sign up to participate in <a href=\"https://google.qualtrics.com/jfe/form/SV_9YbKj35IGoGsDBj?reserved=1&amp;utm_source=Website%20feature&amp;Q_Language=en&amp;utm_medium=own_web&amp;utm_campaign=Q4&amp;productTag=chrm&amp;campaignDate=November2020&amp;referral_code=UXFm430458\">Google User Research here</a>.</p>\n</div>\n<div class=\"youtube\">\n  <iframe class=\"youtube__embed\" src=\"https://www.youtube.com/embed/LyMts4yfQu8\" title=\"youtube embed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n</div>\n<h2 id=\"recorder\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#recorder\" aria-hidden=\"true\">#</a> Capture double-click and right-click events in the Recorder panel</h2>\n<p>The <strong>Recorder</strong> panel can now capture double-click and right-click events.</p>\n<img alt=\"Capture double-click and right-click events in the Recorder panel\" decoding=\"async\" height=\"572\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/qsleBCUrr2twMujW0R94.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>In this <a href=\"https://jec.fyi/demo/dbl-right-click\">example</a>, start a <a href=\"https://developer.chrome.com/docs/devtools/recorder/#record\">recording</a> and try to perform the following steps:</p>\n<ul>\n<li>Double-click the card to enlarge it</li>\n<li>Right-click the card and select an action from the context menu</li>\n</ul>\n<p>To understand how <strong>Recorder</strong> captured these events, expand the steps:</p>\n<ul>\n<li><strong>Double-click</strong> is captured as <code>type: doubleClick</code>.</li>\n<li><strong>Right-click</strong> event is captured as <code>type: click</code> but with the <code>button</code> property is set to <code>secondary</code>. The <code>button</code> value of a normal mouse click is <code>primary</code>.</li>\n</ul>\n<p>Chromium issues: <a href=\"https://crbug.com/1300839\">1300839</a>, <a href=\"https://crbug.com/1322879\">1322879</a>, <a href=\"https://crbug.com/1299701\">1299701</a>, <a href=\"https://crbug.com/1323688\">1323688</a></p>\n<h2 id=\"lighthouse\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#lighthouse\" aria-hidden=\"true\">#</a> New timespan and snapshot mode in the Lighthouse panel</h2>\n<p>You can now use <strong>Lighthouse</strong> to measure your website’s performance beyond page load.</p>\n<img alt=\"New timespan and snapshot mode in the Lighthouse panel\" decoding=\"async\" height=\"507\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/3GGcCxlOGrnXLMfp0t9y.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>The <strong>Lighthouse</strong> panel now supports 3 modes of user flow measurement:</p>\n<ul>\n<li><a href=\"https://github.com/GoogleChrome/lighthouse/blob/master/docs/user-flows.md#navigation\">Navigation</a> reports analyze a single page load. Navigation is the most common report type. All Lighthouse reports before the current version are navigation reports.</li>\n<li><a href=\"https://github.com/GoogleChrome/lighthouse/blob/master/docs/user-flows.md#timespan\">Timespans</a> reports analyze an arbitrary time period, typically containing user interactions.</li>\n<li><a href=\"https://github.com/GoogleChrome/lighthouse/blob/master/docs/user-flows.md#snapshot\">Snapshots</a> reports analyze the page in a particular state, typically after the user has interacted with it.</li>\n</ul>\n<p>For example, let’s measure the performance of adding items to cart on this <a href=\"https://coffee-cart.netlify.app/\">demo page</a>. Select the <strong>Timespan</strong> mode and click <strong>Start timespan</strong>. Scroll and add a few items to the cart. Once you are done, click on <strong>End timespan</strong> to generate a Lighthouse report of the user interactions.</p>\n<img alt=\"Timespan mode\" decoding=\"async\" height=\"549\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/pq9Vg8xOUzplWAlXGJEa.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>See <a href=\"https://github.com/GoogleChrome/lighthouse/blob/master/docs/user-flows.md\">User flows in Lighthouse</a> to learn about the unique use cases, benefits, and limitations of each mode.</p>\n<p>Chromium issue: <a href=\"https://crbug.com/1291284\">1291284</a></p>\n<h2 id=\"performance\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#performance\" aria-hidden=\"true\">#</a> Performance Insights updates</h2>\n<h3 id=\"zoom\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#zoom\" aria-hidden=\"true\">#</a> Improved zoom control in the Performance Insights panel</h3>\n<p>DevTools will now zoom in based on your mouse cursor rather than the playhead position.With the latest cursor-based zoom, you can move your mouse to anywhere in the track, and <a href=\"https://developer.chrome.com/docs/devtools/performance-insights/#navigate\">zoom in</a> to the desired area right away.</p>\n<p><video autoplay=\"\" class=\"screenshot\" loop=\"\" muted=\"\">      <source src=\"https://storage.googleapis.com/web-dev-uploads/video/dPDCek3EhZgLQPGtEG3y0fTn4v82/U8d1PjOFZuGkyOXHQ5Z8.mp4\" type=\"video/mp4\" />    </video></p>\n<p>See <a href=\"https://developer.chrome.com/docs/devtools/performance-insights/\">Performance Insights</a> to learn how to get actionable insights and improve your website’s performance with the panel.</p>\n<p>Chromium issue: <a href=\"https://crbug.com/1313382\">1313382</a></p>\n<h3 id=\"delete\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#delete\" aria-hidden=\"true\">#</a> Confirm to delete a performance recording</h3>\n<p>DevTools now shows a confirmation dialog before <a href=\"https://developer.chrome.com/docs/devtools/performance-insights/#delete\">deleting a performance recording</a>.</p>\n<img alt=\"Confirm to delete a performance recording\" decoding=\"async\" height=\"549\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/DaoCroAA60WmMLpuVU9P.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>Chromium issue: <a href=\"https://crbug.com/1318087\">1318087</a></p>\n<h2 id=\"reorder-pane\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#reorder-pane\" aria-hidden=\"true\">#</a> Reorder panes in the Elements panel</h2>\n<p>You can now reorder panes in the <strong>Elements</strong> panel based on your preference.</p>\n<p>For example, when you open DevTools on a narrow screen, the <a href=\"https://developer.chrome.com/docs/devtools/accessibility/reference/#pane\">Accessibility</a> pane is hidden under the <strong>Show more</strong> button. If you frequently debug accessibility issues, you can now drag the pane to the front for easier access.</p>\n<img alt=\"Reorder panes in the Elements panel\" decoding=\"async\" height=\"616\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/hcaQzMTxecNyw4RY0PMX.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>Chromium issue: <a href=\"https://crbug.com/1146146\">1146146</a></p>\n<h2 id=\"color\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#color\" aria-hidden=\"true\">#</a> Picking a color outside of the browser</h2>\n<p>DevTools now supports picking a color outside of the browser. Previously, you could only pick a color within the browser.</p>\n<p>In the <strong>Styles</strong> pane, click on any color preview to open a color picker. Use the eyedropper to pick color from anywhere.</p>\n<img alt=\"Picking a color outside of the browser\" class=\"screenshot\" decoding=\"async\" height=\"450\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/JAp1UdPCnWNduuNadLVz.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>Chromium issue: <a href=\"https://crbug.com/1245191\">1245191</a></p>\n<h2 id=\"inline-preview\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#inline-preview\" aria-hidden=\"true\">#</a> Improved inline value preview during debugging</h2>\n<p>The debugger now shows the inline values preview correctly.</p>\n<p>In this example, the <code>double</code> function has an input parameter  <code>a</code> and a variable <code>x</code>. Put a breakpoint at the <code>return</code> line and run the code. The inline preview shows values <code>a</code> and <code>x</code> correctly. Previously, the debugger did not show the value <code>x</code> in the inline preview.</p>\n<img alt=\"Improved inline value preview during debugging\" decoding=\"async\" height=\"534\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/XMHyRsyK24fWLK7o72K7.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>Chromium issue: <a href=\"https://crbug.com/1316340\">1316340</a></p>\n<h2 id=\"webauthn\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#webauthn\" aria-hidden=\"true\">#</a> Support large blobs for virtual authenticators</h2>\n<p>The <a href=\"https://developer.chrome.com/docs/devtools/webauthn/\">WebAuthn</a> tab now has the new <strong>Supports large blob</strong> checkbox for virtual authenticators.</p>\n<p>This checkbox is disabled by default. You can enable it only for the authenticators with <code>ctap2</code> protocol that support resident keys.</p>\n<img alt=\"Support large blobs for virtual authenticators\" decoding=\"async\" height=\"601\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/m58oDW2ZwCMxX6zoUoJM.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>Chromium issue: <a href=\"https://crbug.com/1321803\">1321803</a></p>\n<h2 id=\"shortcuts\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#shortcuts\" aria-hidden=\"true\">#</a> New keyboard shortcuts in the Sources panel</h2>\n<p>Two new keyboard shortcuts are now available in the  <strong>Sources</strong> panel:</p>\n<ul>\n<li>Toggle <strong>navigation</strong> sidebar (left) with <kbd>Control / Command</kbd> + <kbd>Shift</kbd> + <kbd>Y</kbd></li>\n<li>Toggle <strong>debugger</strong> sidebar (right) with <kbd>Control / Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd></li>\n</ul>\n<img alt=\"New keyboard shortcuts for the Sources panel\" decoding=\"async\" height=\"494\" loading=\"lazy\" sizes=\"(min-width: 800px) 800px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format\" srcset=\"https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=200 200w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=228 228w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=260 260w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=296 296w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=338 338w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=385 385w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=439 439w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=500 500w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=571 571w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=650 650w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=741 741w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=845 845w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=964 964w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=1098 1098w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=1252 1252w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=1428 1428w, https://wd.imgix.net/image/dPDCek3EhZgLQPGtEG3y0fTn4v82/1PacYBEm9DoSeW7iai8M.png?auto=format&w=1600 1600w\" width=\"800\" />\n<p>Chromium issues: <a href=\"https://crbug.com/1226363\">1226363</a></p>\n<h2 id=\"sourcemaps\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#sourcemaps\" aria-hidden=\"true\">#</a> Sourcemaps improvements</h2>\n<p>Previously, developers experience random failure during:</p>\n<ul>\n<li>Debugging with <a href=\"https://codepen.io/\">Codepen</a> example</li>\n<li>Identifying source location of performance issues in a <a href=\"https://codepen.io/\">Codepen</a> example</li>\n<li>Missing <strong>Component</strong> tab when <a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\">React DevTools</a> is enabled</li>\n</ul>\n<p>Here are a few fixes on sourcemaps to improve the overall debugging experience:</p>\n<ul>\n<li>Correct mapping between location and offset for inline scripts and source location</li>\n<li>Use fallback information for frame’s text location</li>\n<li>Properly resolve relative urls with frame's URL</li>\n</ul>\n<p>Chromium issues: <a href=\"https://crbug.com/1319828\">1319828</a>, <a href=\"https://crbug.com/1318635\">1318635</a>, <a href=\"https://crbug.com/1305475\">1305475</a></p>\n<h2 id=\"preview-channels\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#preview-channels\" aria-hidden=\"true\">#</a> Download the preview channels</h2>\n<p>Consider using the Chrome <a href=\"https://www.google.com/chrome/canary/\">Canary</a>, <a href=\"https://www.google.com/chrome/dev/\">Dev</a> or <a href=\"https://www.google.com/chrome/beta/\">Beta</a> as your default development browser. These preview channels give you access to the latest DevTools features, test cutting-edge web platform APIs, and find issues on your site before your users do!</p>\n<h2 id=\"contact-us\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#contact-us\" aria-hidden=\"true\">#</a> Getting in touch with the Chrome DevTools team</h2>\n<p>Use the following options to discuss the new features and changes in the post, or anything else related to DevTools.</p>\n<ul>\n<li>Submit a suggestion or feedback to us via <a href=\"https://crbug.com/\">crbug.com</a>.</li>\n<li>Report a DevTools issue using the <strong>More options</strong>   <img alt=\"More\" decoding=\"async\" height=\"20\" loading=\"lazy\" sizes=\"(min-width: 4px) 4px, calc(100vw - 48px)\" src=\"https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format\" srcset=\"https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format&w=4 4w, https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format&w=5 5w, https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format&w=5 5w, https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format&w=6 6w, https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format&w=7 7w, https://wd.imgix.net/image/admin/4sdCQbpBaG4MpoHB1J08.png?auto=format&w=8 8w\" width=\"4\" />   &gt; <strong>Help</strong> &gt; <strong>Report a DevTools issues</strong> in DevTools.</li>\n<li>Tweet at <a href=\"https://twitter.com/intent/tweet?text=@ChromeDevTools\" target=\"_blank\">@ChromeDevTools</a>.</li>\n<li>Leave comments on our What's new in DevTools <a href=\"https://goo.gle/devtools-youtube\">YouTube videos</a>.</li>\n</ul>\n<h2 id=\"whats-new\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#whats-new\" aria-hidden=\"true\">#</a> What's New in DevTools</h2>\n<p>A list of everything that has been covered in the <a href=\"https://developer.chrome.com/tags/new-in-devtools/\">What's New In DevTools</a> series.</p>\n<h3 id=\"chrome103\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome103\" aria-hidden=\"true\">#</a> Chrome 103</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#recorder\">Capture double-click and right-click events in the Recorder panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#lighthouse\">New timespan and snapshot mode in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#zoom\">Improved zoom control in the Performance Insights panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#delete\">Confirm to delete a performance recording</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#color\">Picking a color outside of the browser</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#inline-preview\">Improved inline value preview during debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#webauthn\">Support large blobs for virtual authenticators</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#shortcuts\">New keyboard shortcuts in the Sources panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-103/#sourcemaps\">Sourcemaps improvements</a></li>\n</ul>\n<h3 id=\"chrome102\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome102\" aria-hidden=\"true\">#</a> Chrome 102</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#perf\">Preview feature: New Performance insights panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#emulation\">New shortcuts to emulate light and dark themes</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#network-preview\">Improved security on the Network Preview tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#debugger\">Improved reloading at breakpoint</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#console\">Console updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#recorder\">Cancel user flow recording at the start</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#pseudo\">Display inherited highlight pseudo-elements in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#misc\">Miscellaneous highlights</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#copy\">[Experimental] Copy CSS changes</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/#color-picker\">[Experimental] Picking color outside of browser</a></li>\n</ul>\n<h3 id=\"chrome101\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome101\" aria-hidden=\"true\">#</a> Chrome 101</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-101/#recorder\">Import and export recorded user flows as a JSON file</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-101/#layer\">View cascade layers in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-101/#hwb\">Support for the hwb() color function</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-101/#private-props\">Improved the display of private properties</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-101/#misc\">Miscellaneous highlights</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-101/#lighthouse\">[Experimental] New timespan and snapshot mode in the Lighthouse panel</a></li>\n</ul>\n<h3 id=\"chrome100\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome100\" aria-hidden=\"true\">#</a> Chrome 100</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#supports\">View and edit @supports at rules in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#selector\">Support common selectors by default</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#customize-selector\">Customize the recording’s selector</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#recorder-rename\">Rename a recording</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#properties\">Preview class/function properties on hover</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#perf\">Partially presented frames in the Performance panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-100/#misc\">Miscellaneous highlights</a></li>\n</ul>\n<h3 id=\"chrome99\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome99\" aria-hidden=\"true\">#</a> Chrome 99</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#websocket\">Throttling WebSocket requests</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#reporting-api\">New Reporting API pane in the Application panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#recorder\">Support wait until element is visible/clickable in the Recorder panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#console\">Better console styling, formatting and filtering</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#extension\">Debug Chrome extension with sourcemap files</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#source-tree\">Improved source folder tree in the Sources panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#worker-sourcemap\">Display worker source files in the Sources panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#auto-dark-mode\">Chrome’s Auto Dark Theme updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#touch-friendly\">Touch-friendly color-picker and split pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/#misc\">Miscellaneous highlights</a></li>\n</ul>\n<h3 id=\"chrome98\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome98\" aria-hidden=\"true\">#</a> Chrome 98</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#a11y-tree\">Preview feature: Full-page accessibility tree</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#changes\">More precise changes in the Changes tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#recorder-timeout\">Set longer timeout for user flow recording</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#bfcache\">Ensure your pages are cacheable with the Back/forward cache tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#properties\">New Properties pane filter</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#forced-colors\">Emulate the CSS forced-colors media feature</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#show-rulers\">Show rulers on hover command</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#flexbox-editor\">Support <code>row-reverse</code> and <code>column-reverse</code> in the Flexbox editor</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#shortcuts\">New keyboard shortcuts to replay XHR and expand all search results</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#lighthouse\">Lighthouse 9 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#sources\">Improved Sources panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#misc\">Miscellaneous highlights</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-98/#reporting-api\">[Experimental] Endpoints in the Reporting API pane</a></li>\n</ul>\n<h3 id=\"chrome97\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome97\" aria-hidden=\"true\">#</a> Chrome 97</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-97/#recorder\">Preview feature: New Recorder panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-97/#device\">Refresh device list in Device Mode</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-97/#code-completion\">Autocomplete with Edit as HTML</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-97/#debugging\">Improved code debugging experience</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-97/#sync\">Syncing DevTools settings across devices</a></li>\n</ul>\n<h3 id=\"chrome96\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome96\" aria-hidden=\"true\">#</a> Chrome 96</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#css-overview\">Preview feature: New CSS Overview panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#length\">Restored and improved CSS length edit and copy experince</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#prefers-contrast\">Emulate the CSS prefers-contrast media feature</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#auto-dark-mode\">Emulate the Chrome’s Auto Dark Theme feature</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#copy-as-js\">Copy declarations as JavaScript in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#payload\">New Payload tab in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#properties\">Improved the display of properties in the Properties pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#hide-cors-errors\">Option to hide CORS errors in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#intl\">Proper <code>Intl</code> objects preview and evaluation in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#async\">Consistent async stack traces</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#console-sidebar\">Retain the Console sidebar</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#app-cache\">Deprecated Application cache pane in the Application panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-96/#reporting-api\">[Experimental] New Reporting API pane in the Application panel</a></li>\n</ul>\n<h3 id=\"chrome95\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome95\" aria-hidden=\"true\">#</a> Chrome 95</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#length\">New CSS length authoring tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#hide-issues\">Hide issues in the Issues tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#properties\">Improved the display of properties</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#lighthouse\">Lighthouse 8.4 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#snippets\">Sort snippets in the Sources panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#localized\">New links to translated release notes and report a translation bug</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-95/#command-menu\">Improved UI for DevTools command menu</a></li>\n</ul>\n<h3 id=\"chrome94\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome94\" aria-hidden=\"true\">#</a> Chrome 94</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#localized\">Use DevTools in your preferred language</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#nest-hub\">New Nest Hub devices in the Device list</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#origin-trials\">Origin trials in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#container-queries\">New CSS container queries badge</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#nvert-network-filter\">New checkbox to invert the network filters</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#deprecated\">Upcoming deprecation of the Console sidebar</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#raw-cookies\">Display raw <code>Set-Cookies</code> headers in the Issues tab and Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#native-accessors\">Consistent display native accessors as own properties in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#inline-script\">Proper error stack traces for inline scripts with #sourceURL</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#color-unit\">Change color format in the Computed pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#tooltip\">Replace custom tooltips with native HTML tooltips</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-94/#hide-issues\">[Experimental] Hide issues in the Issues tab</a></li>\n</ul>\n<h3 id=\"chrome93\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome93\" aria-hidden=\"true\">#</a> Chrome 93</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#container-queries\">Editable CSS container queries  in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#web-bundle\">Web bundle preview in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#attribution-reporting\">Attribution Reporting API debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#string\">Better string handling in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#cors\">Improved CORS debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#lighthouse\">Lighthouse 8.1</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#new-note-url\">New note URL in the Manifest pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#matching-selectors\">Fixed CSS matching selectors</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-93/#pretty-print-json\">Pretty-printing JSON responses in the Network panel</a></li>\n</ul>\n<h3 id=\"chrome92\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome92\" aria-hidden=\"true\">#</a> Chrome 92</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#grid-editor\">CSS grid editor</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#const-redeclaration\">Support for <code>const</code> redeclarations in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#source-order\">Source order viewer</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#frame-details\">New shortcut to view frame details</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#cors\">Enhanced CORS debugging support</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#fetch-xhr\">Rename XHR label to Fetch/XHR</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#wasm\">Filter Wasm resource type in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#sec-ua-ch\">User-Agent Client Hints for devices in the Network conditions tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#quirks-mode\">Report Quirks mode issues in the Issues tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#computed-intersections\">Include Compute Intersections in the Performance panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#lighthouse\">Lighthouse 7.5 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#restart-frame\">Deprecated &quot;Restart frame&quot; context menu in the call stack</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#protocol-monitor\">[Experimental] Protocol monitor</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-92/#puppeteer-recorder\">[Experimental] Puppeteer Recorder</a></li>\n</ul>\n<h3 id=\"chrome91\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome91\" aria-hidden=\"true\">#</a> Chrome 91</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#web-vitals\">Web Vitals information pop up</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#memory-inspector\">New Memory inspector</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#css-croll-snap\">Visualize CSS scroll-snap</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#badge-settings\">New badge settings pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#image-preview\">Enhanced image preview with aspect ratio information</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#network-panel\">New network conditions button with options to configure <code>Content-Encoding</code>s</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#computed-value\">shortcut to view computed value</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#accent-color\"><code>accent-color</code> keyword</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#issue-category\">Categorize issue types with colors and icons</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#trust-tokens\">Delete Trust tokens</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#permissions-policy\">Blocked features in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#filter-experiment\">Filter experiments in the Experiments setting</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#vary-header\">New <code>Vary Header</code> column in the Cache storage pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#javascript\">Support JavaScript private brand check</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#breakpoint\">Enhanced support for breakpoints debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#expression-preview\">Support hover preview with <code>[]</code> notation</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#html-outline\">Improved outline of HTML files</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-91/#error-stack-traces\">Proper error stack traces for Wasm debugging</a></li>\n</ul>\n<h3 id=\"chrome90\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome90\" aria-hidden=\"true\">#</a> Chrome 90</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#flexbox\">New CSS flexbox debugging tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#cwv\">New Core Web Vitals overlay</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#issue-count\">Moved issue count to the Console status bar</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#twa\">Report Trusted Web Activity issues</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#double-quotes\">Format strings as (valid) JavaScript string literals in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#trust-token-pane\">New Trust Tokens pane in the Application panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#css-gamut\">Emulate the CSS color-gamut media feature</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#pwa\">Improved Progressive Web Apps tooling</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#remote-address-space\">New <code>Remote Address Space</code> column in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#perf\">Performance improvements</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#permission-policy\">Display allowed/disallowed features in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#\">New <code>SameParty</code> column in the Cookies pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#display-name\">Deprecated non-standard <code>fn.displayName</code> support</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#data-saver-warning\">Deprecation of <code>Don't show Chrome Data Saver warning</code> in the Settings menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#low-contrast\">[Experimental] Automatic low-contrast issue reporting in the Issues tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-90/#accesibility-tree\">[Experimental] Full accessibility tree view in the Elements panel</a></li>\n</ul>\n<h3 id=\"chrome89\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome89\" aria-hidden=\"true\">#</a> Chrome 89</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#trusted-types\">Debugging support for Trusted Types violations</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#node-screenshot\">Capture node screenshot beyond viewport</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#trust-token\">New Trust Tokens tab for network requests</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#lighthouse\">Lighthouse 7 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#force-target\">Support forcing the CSS <code>:target</code> state</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#duplicate-element\">New shortcut to duplicate element</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#color-picker\">Color pickers for custom CSS properties</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#copy-css\">New shortcuts to copy CSS properties</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#cookies-decoded\">New option to show URL-decoded cookies</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#clear-cookies\">Clear only visible cookies</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#third-party-cookies\">New option to clear third-party cookies in the Storage pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#ua-ch\">Edit User-Agent Client Hints for custom devices</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#network-log\">Persist &quot;record network log&quot; setting</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#webtransport\">View WebTransport connections in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#no-throttling\">&quot;Online&quot; renamed to &quot;No throttling&quot;</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#copy-sources-console\">New copy options in the Console, Sources panel, and Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#sw\">New Service Workers information in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#measure-memory\">Measure Memory information in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#issues-feedback\">Provide feedback from the Issues tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#dropped-frames\">Dropped frames in the Performance panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#dual-screen\">Emulate foldable and dual-screen in Device Mode</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#record\">[Experimental] Automate browser testing with Puppeteer Recorder</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#font\">[Experimental] Font editor in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#flexbox\">[Experimental] CSS flexbox debugging tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#csp\">[Experimental] New CSP Violations tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-89/#apca\">[Experimental] New color contrast calculation - Advanced Perceptual Contrast Algorithm (APCA)</a></li>\n</ul>\n<h3 id=\"chrome88\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome88\" aria-hidden=\"true\">#</a> Chrome 88</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#fast-startup\">Faster DevTools startup</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#css-angle\">New CSS angle visualization tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#emulate-image\">Emulate unsupported image types</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#simulate-storage\">Simulate storage quota size in the Storage pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#web-vitals\">New Web Vitals lane in the Performance panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#cors\">Report CORS errors in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#cross-origin\">Cross-origin isolation information in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#web-worker\">New Web Workers information in the Frame details view</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#opener-frame\">Display opener frame details for opened windows</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#sw\">Open Network panel from the Service Workers pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#copy-value\">Copy property value</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#copy-stacktrace\">Copy stacktrace for network initiator</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#wasm-mouseover\">Preview Wasm variable value on mouseover</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#wasm-console\">Evaluate Wasm variable in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#onsistent-kb\">Consistent units of measurement for file/memory sizes</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#pseudo\">Highlight pseudo elements in the Elements panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#flexbox\">[Experimental] CSS Flexbox debugging tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-88/#keyboard-shortcuts\">[Experimental] Customize chords keyboard shortcuts</a></li>\n</ul>\n<h3 id=\"chrome87\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome87\" aria-hidden=\"true\">#</a> Chrome 87</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#css-grid\">New CSS Grid debugging tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#webauthn\">New WebAuthn tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#moveable-tools\">Move tools between top and bottom panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#computed-sidebar-pane\">New Computed sidebar pane in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#grouping-css-prop\">Grouping CSS properties in the Computed pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#lighthouse\">Lighthouse 6.3 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#perf-mark\"><code>performance.mark()</code> events in the Timings section</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#network-filters\">New <code>resource-type</code> and <code>url</code> filters in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#rame-details\">Frame details view updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#deprecate-settings\">Deprecation of <code>Settings</code> in the More tools menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#css-overview\">[Experimental] View and fix color contrast issues in the CSS Overview panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-87/#customized-keyboard-shortcuts\">[Experimental] Customize keyboard shortcuts in DevTools</a></li>\n</ul>\n<h3 id=\"chrome86\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome86\" aria-hidden=\"true\">#</a> Chrome 86</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#media-panel\">New Media panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#capture-node-screenshot\">Capture node screenshots via Elements panel context menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#issues-tab\">Issues tab updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#emulate-local-fonts\">Emulate missing local fonts</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#emulate-inactive-users\">Emulate inactive users</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#emulate-prefers-reduced-data\">Emulate <code>prefers-reduced-data</code></a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#javascript\">Support for new JavaScript features</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#lighthouse\">Lighthouse 6.2 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#deprecate-sw-other-origins\">Deprecation of &quot;other origins&quot; listing in the Service Workers pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#filter-coverage-summary\">Show coverage summary for filtered items</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#frame-detailed-view\">New frame details view in Application panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#accessible-color\">Accessible color suggestion in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#properties\">Reinstate <strong>Properties</strong> pane in the Elements panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#x-client-data\">Human-readable <code>X-Client-Data</code> header values in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#auto-complete-custom-fonts\">Auto-complete custom fonts in the Styles pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#redirect-resource-type\">Consistently display resource type in Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-86/#clear-input-button\">Clear buttons in the Elements and Network panels</a></li>\n</ul>\n<h3 id=\"chrome85\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome85\" aria-hidden=\"true\">#</a> Chrome 85</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#css-in-js\">Style editing for CSS-in-JS frameworks</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#lighthouse\">Lighthouse 6 in the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#fmp-deprecation\">First Meaningful Paint (FMP) deprecation</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#javascript\">Support for new JavaScript features</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#app-shortcut-warnings\">New app shortcut warnings in the Manifest pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#timing-tab\">Service worker <code>respondWith</code> events in the Timing tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#compute-pane\">Consistent display of the Computed pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#wasm\">Bytecode offsets for WebAssembly files</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#sources-panel\">Line-wise copy and cut in Sources Panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#console-settings\">Console settings updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#perf-panel\">Performance panel updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-85/#breakpoints\">New icons for breakpoints, conditional breakpoints, and logpoints</a></li>\n</ul>\n<h3 id=\"chrome84\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome84\" aria-hidden=\"true\">#</a> Chrome 84</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#issues\">Fix site issues with the new Issues tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#a11y\">View accessibility information in the Inspect Mode tooltip</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#performance\">Performance panel updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#promises\">More accurate promise terminology in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#styles\">Styles pane updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#properties\">Deprecation of the <strong>Properties</strong> pane in the Elements panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-84/#app-shortcuts\">App shortcuts support in the Manifest pane</a></li>\n</ul>\n<h3 id=\"chrome83\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome83\" aria-hidden=\"true\">#</a> Chrome 83</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#vision-deficiencies\">Emulate vision deficiencies</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#locales\">Emulate locales</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#COEP\">Cross-Origin Embedder Policy (COEP) debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#debugging-icons\">New icons for breakpoints, conditional breakpoints, and logpoints</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#cookie-path\">View network requests that set a specific cookie</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#dock-to-left\">Dock to left from the Command Menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#settings\">The Settings option in the Main Menu has moved</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#lighthouse\">The Audits panel is now the Lighthouse panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#overrides\">Delete all Local Overrides in a folder</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#long-tasks\">Updated Long Tasks UI</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-83/#maskable-icons\">Maskable icon support in the Manifest pane</a></li>\n</ul>\n<h3 id=\"chrome82\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome82\" aria-hidden=\"true\">#</a> Chrome 82</h3>\n<p><a href=\"https://blog.chromium.org/2020/03/chrome-and-chrome-os-release-updates.html\">Chrome 82 was cancelled</a>.</p>\n<h3 id=\"chrome81\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome81\" aria-hidden=\"true\">#</a> Chrome 81</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-81/#motog4\">Moto G4 support in Device Mode</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-81/#cookies\">Cookie-related updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-81/#manifesticons\">More accurate web app manifest icons</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-81/#content\">Hover over CSS <code>content</code> properties to see unescaped values</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-81/#sourcemaperrors\">Source map errors in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-81/#scrolling\">Setting for disabling scrolling past the end of a file</a></li>\n</ul>\n<h3 id=\"chrome80\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome80\" aria-hidden=\"true\">#</a> Chrome 80</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#redeclarations\">Support for <code>let</code> and <code>class</code> redeclarations in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#webassembly\">Improved WebAssembly debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#initiators\">Request Initiator Chains in the Initiator tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#overview\">Highlight the selected network request in the Overview</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#columns\">URL and path columns in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#useragents\">Updated User-Agent strings</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#config\">New Audits panel configuration UI</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#modes\">Per-function or per-block code coverage modes</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-80/#reload\">Code coverage must now be initiated by a page reload</a></li>\n</ul>\n<h3 id=\"chrome79\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome79\" aria-hidden=\"true\">#</a> Chrome 79</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#blockedcookies\">Debug why a cookie was blocked</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#cookiepreviews\">View cookie values</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#userpreferences\">Simulate different prefers-color-scheme and prefers-reduced-motion preferences</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#coverage\">Code coverage updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#initiator\">Debug why a network resource was requested</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#indentation\">Console and Sources panels respect indentation preferences again</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-79/#console\">New shortcuts for cursor navigation</a></li>\n</ul>\n<h3 id=\"chrome78\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome78\" aria-hidden=\"true\">#</a> Chrome 78</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-78/#multiclient\">Multi-client support in the Audits panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-78/#payments\">Payment Handler debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-78/#audits\">Lighthouse 5.2 in the Audits panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-78/#LCP\">Largest Contentful Paint in the Performance panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-78/#issues\">File DevTools issues from the Main Menu</a></li>\n</ul>\n<h3 id=\"chrome77\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome77\" aria-hidden=\"true\">#</a> Chrome 77</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#copystyles\">Copy element styles</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#layoutshifts\">Visualize layout shifts</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#audits\">Lighthouse 5.1 in the Audits panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#theming\">OS theme syncing</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#breakpointeditor\">Keyboard shortcut for opening the Breakpoint Editor</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#prefetch\">Prefetch cache in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#privateclassfields\">Private properties when viewing objects</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-77/#backgroundservices\">Notifications and push messages in the Application panel</a></li>\n</ul>\n<h3 id=\"chrome76\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome76\" aria-hidden=\"true\">#</a> Chrome 76</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#values\">Autocomplete with CSS values</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#settings\">A new UI for network settings</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#websocket\">WebSocket messages in HAR exports</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#HAR\">HAR import and export buttons</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#memory\">Real-time memory usage</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#ports\">Service worker registration port numbers</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#background\">Inspect Background Fetch and Background Sync events</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-76/#puppeteer\">Puppeteer for Firefox</a></li>\n</ul>\n<h3 id=\"chrome75\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome75\" aria-hidden=\"true\">#</a> Chrome 75</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#presets\">Meaningful presets when autocompleting CSS functions</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#clear\">Clear site data from the Command Menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#indexeddb\">View all IndexedDB databases</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#uncompressed\">View a resource's uncompressed size on hover</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#inline\">Inline breakpoints in the Breakpoints pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#counts\">IndexedDB and Cache resource counts</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#inspect\">Setting for disabling the detailed Inspect tooltip</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-75/#tab\">Setting for toggling tab indentation in the Editor</a></li>\n</ul>\n<h3 id=\"chrome74\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome74\" aria-hidden=\"true\">#</a> Chrome 74</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#highlight\">Highlight all nodes affected by CSS property</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#lighthouse\">Lighthouse v4 in the Audits panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#binary\">WebSocket binary message viewer</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#screenshot\">Capture area screenshot in the Command Menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#swfilters\">Service worker filters in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#perf\">Performance panel updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#longtasks\">Long tasks in Performance panel recordings</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-74/#FP\">First Paint in the Timing section</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/I14fXc7sXdU?t=221\">Shortcut for viewing RGB and HSL color codes</a> (video)</li>\n</ul>\n<h3 id=\"chrome73\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome73\" aria-hidden=\"true\">#</a> Chrome 73</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#logpoints\">Logpoints</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#inspect\">Detailed tooltips in Inspect Mode</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#coverage\">Export code coverage data</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#keyboard\">Navigate the Console with a keyboard</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#AAA\">AAA contrast ratio line in the Color Picker</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#geolocation\">Save custom geolocation overrides</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#folding\">Code folding</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-73/#messages\">Frames tab renamed to Messages tab</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/uddZX9ZK6wY?t=338\">Network panel filtering by property</a> (video)</li>\n</ul>\n<h3 id=\"chrome72\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome72\" aria-hidden=\"true\">#</a> Chrome 72</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-72/#metrics\">Visualize performance metrics</a> in the Performance panel</li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-72/#highlight\">Highlight text nodes</a> in the DOM Tree</li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-72/#copy\">Copy the JS path</a> to a DOM node</li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-72/#audits\">Audits panel updates</a>, including a new audit\nthat detects JS libraries and new keywords for accessing the Audits panel from the Command Menu</li>\n<li>Bonus tip: <a href=\"https://youtu.be/XVJxlEdB230?t=155\">Use Device Mode to inspect media queries</a> (video)</li>\n</ul>\n<h3 id=\"chrome71\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome71\" aria-hidden=\"true\">#</a> Chrome 71</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-71/#hover\">Hover over a Live Expression result</a> to highlight a DOM node</li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-71\">Store DOM nodes as global variables</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-71\">Initiator and priority information now in HAR imports and exports</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-71\">Access the Command Menu from the Main Menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-71\">Picture-in-Picture breakpoints</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/fJxFZO8OEEs?t=154\">Use <code>monitorEvents()</code> to log a node's fired events in the\nConsole</a> (video)</li>\n</ul>\n<h3 id=\"chrome70\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome70\" aria-hidden=\"true\">#</a> Chrome 70</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#watch\">Live Expressions</a> in the Console</li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#nodes\">Highlight DOM nodes during Eager Evaluation</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#performance\">Performance panel optimizations</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#debugging\">More reliable debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#throttling\">Enable network throttling from the Command Menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#autocomplete\">Autocomplete Conditional Breakpoints</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#audiocontext\">Break on AudioContext events</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#ndb\">Debug Node.js apps with ndb</a></li>\n<li>Bonus tip: <a href=\"https://developer.chrome.com/blog/new-in-devtools-70/#bonus\">Measure real world user interactions with the User Timing API</a></li>\n</ul>\n<h3 id=\"chrome68\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome68\" aria-hidden=\"true\">#</a> Chrome 68</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#eagerevaluation\">Eager Evaluation</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#hints\">Argument hints</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#autocomplete\">Function autocompletion</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#keywords\">ES2017 keywords</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#lh3\">Lighthouse 3.0 in the Audits panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#bigint\">BigInt support</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#watch\">Adding property paths to the Watch pane</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-68/#timestamps\">&quot;Show timestamps&quot; moved to Settings</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/br4JZ5qz_20?t=199\">Lesser-known Console methods</a> (video)</li>\n</ul>\n<h3 id=\"chrome67\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome67\" aria-hidden=\"true\">#</a> Chrome 67</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#network-search\">Search across all network headers</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#vars\">CSS variable value previews</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#fetch\">Copy as fetch</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#audits\">New audits, desktop configuration options, and viewing traces</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#stop\">Stop infinite loops</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#tabs\">User Timing in the Performance tabs</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#vm\">JavaScript VM instances clearly listed in the Memory panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#page\">Network tab renamed to Page tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#dark\">Dark theme updates</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#security\">Certificate transparency information in the Security panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-67/#site-isolation\">Site isolation features in the Performance panel</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/4EdPq9Nw6uI?t=184\">Layers panel + Animations Inspector</a> (video)</li>\n</ul>\n<h3 id=\"chrome66\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome66\" aria-hidden=\"true\">#</a> Chrome 66</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-66/#blackboxing\">Blackboxing in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-66/#auto-adjust\">Auto-adjust zooming in Device Mode</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-66/#pretty-printing\">Pretty-printing in the Preview and Response tabs</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-66/#previews\">Previewing HTML content in the Preview tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-66/#overrides\">Local Overrides support for styles inside of HTML</a></li>\n<li>Bonus tip: <a href=\"https://developer.chrome.com/blog/new-in-devtools-66/#tip\">Blackbox framework scripts to make Event Listener Breakpoints more useful</a></li>\n</ul>\n<h3 id=\"chrome65\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome65\" aria-hidden=\"true\">#</a> Chrome 65</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-65/#overrides\">Local Overrides</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-65/#a11y\">New accessibility tools</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-65/#changes\">The Changes tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-65/#audits\">New SEO and performance audits</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-65/#recordings\">Multiple recordings in the Performance panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-65/#stepping\">Reliable code stepping with workers in async code</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/D1pV7ermy6w?t=342\">Automate DevTools actions with Puppeteer</a> (video)</li>\n</ul>\n<h3 id=\"chrome64\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome64\" aria-hidden=\"true\">#</a> Chrome 64</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-64/#perf-monitor\">Performance Monitor</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-64/#console-sidebar\">Console Sidebar</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-64/#group-similar\">Group similar Console messages</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/90wNAn05Cf4?t=159\">Toggle hover pseudo-class</a> (video)</li>\n</ul>\n<h3 id=\"chrome63\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome63\" aria-hidden=\"true\">#</a> Chrome 63</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-63/#multi-client\">Multi-client remote debugging support</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-63/#workspaces\">Workspaces 2.0</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-63/#audits\">4 new audits</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-63/#push\">Simulate push notifications with custom data</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-63/#sync\">Trigger background sync events with custom tags</a></li>\n<li>Bonus tip: <a href=\"https://youtu.be/Eyw_mwbABIQ?t=217\">Event listener breakpoints</a> (video)</li>\n</ul>\n<h3 id=\"chrome62\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome62\" aria-hidden=\"true\">#</a> Chrome 62</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#await\">Top-level await in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#screenshots\">New screenshot workflows</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#css-grid-highlighting\">CSS Grid highlighting</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#query-objects\">A new Console API for querying objects</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#console-filters\">New Console filters</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#har-imports\">HAR imports in the Network panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#cache-previews\">Previewable cache resources</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#cache-debugging\">More predictable cache debugging</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-62/#coverage\">Block-level code coverage</a></li>\n</ul>\n<h3 id=\"chrome61\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome61\" aria-hidden=\"true\">#</a> Chrome 61</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-61/#throttling\">Mobile device throttling simulation</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-61/#storage\">View storage usage</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-61/#time-cached\">View when a service worker cached responses</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-61/#fps-meter\">Enable the FPS meter from the Command Menu</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-61/#mousewheel\">Set mousewheel behavior to zoom or scroll</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-61/#modules\">Debugging support for ES6 modules</a></li>\n</ul>\n<h3 id=\"chrome60\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome60\" aria-hidden=\"true\">#</a> Chrome 60</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#lighthouse\">New Audits panel</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#badges\">3rd-Party Badges</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#continue\">A new gesture for Continue To Here</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#step-into-async\">Step into async</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#object-previews\">More informative object previews in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#context\">More informative context selection in the Console</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#coverage\">Real-time updates in the Coverage tab</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#network-throttling\">Simpler network throttling options</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-60/#async-stacks\">Async stacks on by default</a></li>\n</ul>\n<h3 id=\"chrome59\" tabindex=\"-1\"><a class=\"heading-link\" href=\"https://developer.chrome.com/en/blog/new-in-devtools-103/#chrome59\" aria-hidden=\"true\">#</a> Chrome 59</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-59/#coverage\">CSS and JS code coverage</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-59/#screenshots\">Full-page screenshots</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-59/#block-requests\">Block requests</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-59/#async\">Step over async await</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-59/#command-menu\">Unified Command Menu</a></li>\n</ul>",
      "content_text": "\nInterested in helping improve DevTools? Sign up to participate in Google User Research here.\n\n\n  \n\n# Capture double-click and right-click events in the Recorder panel\nThe Recorder panel can now capture double-click and right-click events.\n\nIn this example, start a recording and try to perform the following steps:\n\nDouble-click the card to enlarge it\nRight-click the card and select an action from the context menu\n\nTo understand how Recorder captured these events, expand the steps:\n\nDouble-click is captured as type: doubleClick.\nRight-click event is captured as type: click but with the button property is set to secondary. The button value of a normal mouse click is primary.\n\nChromium issues: 1300839, 1322879, 1299701, 1323688\n# New timespan and snapshot mode in the Lighthouse panel\nYou can now use Lighthouse to measure your website’s performance beyond page load.\n\nThe Lighthouse panel now supports 3 modes of user flow measurement:\n\nNavigation reports analyze a single page load. Navigation is the most common report type. All Lighthouse reports before the current version are navigation reports.\nTimespans reports analyze an arbitrary time period, typically containing user interactions.\nSnapshots reports analyze the page in a particular state, typically after the user has interacted with it.\n\nFor example, let’s measure the performance of adding items to cart on this demo page. Select the Timespan mode and click Start timespan. Scroll and add a few items to the cart. Once you are done, click on End timespan to generate a Lighthouse report of the user interactions.\n\nSee User flows in Lighthouse to learn about the unique use cases, benefits, and limitations of each mode.\nChromium issue: 1291284\n# Performance Insights updates\n# Improved zoom control in the Performance Insights panel\nDevTools will now zoom in based on your mouse cursor rather than the playhead position.With the latest cursor-based zoom, you can move your mouse to anywhere in the track, and zoom in to the desired area right away.\n          \nSee Performance Insights to learn how to get actionable insights and improve your website’s performance with the panel.\nChromium issue: 1313382\n# Confirm to delete a performance recording\nDevTools now shows a confirmation dialog before deleting a performance recording.\n\nChromium issue: 1318087\n# Reorder panes in the Elements panel\nYou can now reorder panes in the Elements panel based on your preference.\nFor example, when you open DevTools on a narrow screen, the Accessibility pane is hidden under the Show more button. If you frequently debug accessibility issues, you can now drag the pane to the front for easier access.\n\nChromium issue: 1146146\n# Picking a color outside of the browser\nDevTools now supports picking a color outside of the browser. Previously, you could only pick a color within the browser.\nIn the Styles pane, click on any color preview to open a color picker. Use the eyedropper to pick color from anywhere.\n\nChromium issue: 1245191\n# Improved inline value preview during debugging\nThe debugger now shows the inline values preview correctly.\nIn this example, the double function has an input parameter  a and a variable x. Put a breakpoint at the return line and run the code. The inline preview shows values a and x correctly. Previously, the debugger did not show the value x in the inline preview.\n\nChromium issue: 1316340\n# Support large blobs for virtual authenticators\nThe WebAuthn tab now has the new Supports large blob checkbox for virtual authenticators.\nThis checkbox is disabled by default. You can enable it only for the authenticators with ctap2 protocol that support resident keys.\n\nChromium issue: 1321803\n# New keyboard shortcuts in the Sources panel\nTwo new keyboard shortcuts are now available in the  Sources panel:\n\nToggle navigation sidebar (left) with Control / Command + Shift + Y\nToggle debugger sidebar (right) with Control / Command + Shift + H\n\n\nChromium issues: 1226363\n# Sourcemaps improvements\nPreviously, developers experience random failure during:\n\nDebugging with Codepen example\nIdentifying source location of performance issues in a Codepen example\nMissing Component tab when React DevTools is enabled\n\nHere are a few fixes on sourcemaps to improve the overall debugging experience:\n\nCorrect mapping between location and offset for inline scripts and source location\nUse fallback information for frame’s text location\nProperly resolve relative urls with frame's URL\n\nChromium issues: 1319828, 1318635, 1305475\n# Download the preview channels\nConsider using the Chrome Canary, Dev or Beta as your default development browser. These preview channels give you access to the latest DevTools features, test cutting-edge web platform APIs, and find issues on your site before your users do!\n# Getting in touch with the Chrome DevTools team\nUse the following options to discuss the new features and changes in the post, or anything else related to DevTools.\n\nSubmit a suggestion or feedback to us via crbug.com.\nReport a DevTools issue using the More options      > Help > Report a DevTools issues in DevTools.\nTweet at @ChromeDevTools.\nLeave comments on our What's new in DevTools YouTube videos.\n\n# What's New in DevTools\nA list of everything that has been covered in the What's New In DevTools series.\n# Chrome 103\n\nCapture double-click and right-click events in the Recorder panel\nNew timespan and snapshot mode in the Lighthouse panel\nImproved zoom control in the Performance Insights panel\nConfirm to delete a performance recording\nPicking a color outside of the browser\nImproved inline value preview during debugging\nSupport large blobs for virtual authenticators\nNew keyboard shortcuts in the Sources panel\nSourcemaps improvements\n\n# Chrome 102\n\nPreview feature: New Performance insights panel\nNew shortcuts to emulate light and dark themes\nImproved security on the Network Preview tab\nImproved reloading at breakpoint\nConsole updates\nCancel user flow recording at the start\nDisplay inherited highlight pseudo-elements in the Styles pane\nMiscellaneous highlights\n[Experimental] Copy CSS changes\n[Experimental] Picking color outside of browser\n\n# Chrome 101\n\nImport and export recorded user flows as a JSON file\nView cascade layers in the Styles pane\nSupport for the hwb() color function\nImproved the display of private properties\nMiscellaneous highlights\n[Experimental] New timespan and snapshot mode in the Lighthouse panel\n\n# Chrome 100\n\nView and edit @supports at rules in the Styles pane\nSupport common selectors by default\nCustomize the recording’s selector\nRename a recording\nPreview class/function properties on hover\nPartially presented frames in the Performance panel\nMiscellaneous highlights\n\n# Chrome 99\n\nThrottling WebSocket requests\nNew Reporting API pane in the Application panel\nSupport wait until element is visible/clickable in the Recorder panel\nBetter console styling, formatting and filtering\nDebug Chrome extension with sourcemap files\nImproved source folder tree in the Sources panel\nDisplay worker source files in the Sources panel\nChrome’s Auto Dark Theme updates\nTouch-friendly color-picker and split pane\nMiscellaneous highlights\n\n# Chrome 98\n\nPreview feature: Full-page accessibility tree\nMore precise changes in the Changes tab\nSet longer timeout for user flow recording\nEnsure your pages are cacheable with the Back/forward cache tab\nNew Properties pane filter\nEmulate the CSS forced-colors media feature\nShow rulers on hover command\nSupport row-reverse and column-reverse in the Flexbox editor\nNew keyboard shortcuts to replay XHR and expand all search results\nLighthouse 9 in the Lighthouse panel\nImproved Sources panel\nMiscellaneous highlights\n[Experimental] Endpoints in the Reporting API pane\n\n# Chrome 97\n\nPreview feature: New Recorder panel\nRefresh device list in Device Mode\nAutocomplete with Edit as HTML\nImproved code debugging experience\nSyncing DevTools settings across devices\n\n# Chrome 96\n\nPreview feature: New CSS Overview panel\nRestored and improved CSS length edit and copy experince\nEmulate the CSS prefers-contrast media feature\nEmulate the Chrome’s Auto Dark Theme feature\nCopy declarations as JavaScript in the Styles pane\nNew Payload tab in the Network panel\nImproved the display of properties in the Properties pane\nOption to hide CORS errors in the Console\nProper Intl objects preview and evaluation in the Console\nConsistent async stack traces\nRetain the Console sidebar\nDeprecated Application cache pane in the Application panel\n[Experimental] New Reporting API pane in the Application panel\n\n# Chrome 95\n\nNew CSS length authoring tools\nHide issues in the Issues tab\nImproved the display of properties\nLighthouse 8.4 in the Lighthouse panel\nSort snippets in the Sources panel\nNew links to translated release notes and report a translation bug\nImproved UI for DevTools command menu\n\n# Chrome 94\n\nUse DevTools in your preferred language\nNew Nest Hub devices in the Device list\nOrigin trials in the Frame details view\nNew CSS container queries badge\nNew checkbox to invert the network filters\nUpcoming deprecation of the Console sidebar\nDisplay raw Set-Cookies headers in the Issues tab and Network panel\nConsistent display native accessors as own properties in the Console\nProper error stack traces for inline scripts with #sourceURL\nChange color format in the Computed pane\nReplace custom tooltips with native HTML tooltips\n[Experimental] Hide issues in the Issues tab\n\n# Chrome 93\n\nEditable CSS container queries  in the Styles pane\nWeb bundle preview in the Network panel\nAttribution Reporting API debugging\nBetter string handling in the Console\nImproved CORS debugging\nLighthouse 8.1\nNew note URL in the Manifest pane\nFixed CSS matching selectors\nPretty-printing JSON responses in the Network panel\n\n# Chrome 92\n\nCSS grid editor\nSupport for const redeclarations in the Console\nSource order viewer\nNew shortcut to view frame details\nEnhanced CORS debugging support\nRename XHR label to Fetch/XHR\nFilter Wasm resource type in the Network panel\nUser-Agent Client Hints for devices in the Network conditions tab\nReport Quirks mode issues in the Issues tab\nInclude Compute Intersections in the Performance panel\nLighthouse 7.5 in the Lighthouse panel\nDeprecated \"Restart frame\" context menu in the call stack\n[Experimental] Protocol monitor\n[Experimental] Puppeteer Recorder\n\n# Chrome 91\n\nWeb Vitals information pop up\nNew Memory inspector\nVisualize CSS scroll-snap\nNew badge settings pane\nEnhanced image preview with aspect ratio information\nNew network conditions button with options to configure Content-Encodings\nshortcut to view computed value\naccent-color keyword\nCategorize issue types with colors and icons\nDelete Trust tokens\nBlocked features in the Frame details view\nFilter experiments in the Experiments setting\nNew Vary Header column in the Cache storage pane\nSupport JavaScript private brand check\nEnhanced support for breakpoints debugging\nSupport hover preview with [] notation\nImproved outline of HTML files\nProper error stack traces for Wasm debugging\n\n# Chrome 90\n\nNew CSS flexbox debugging tools\nNew Core Web Vitals overlay\nMoved issue count to the Console status bar\nReport Trusted Web Activity issues\nFormat strings as (valid) JavaScript string literals in the Console\nNew Trust Tokens pane in the Application panel\nEmulate the CSS color-gamut media feature\nImproved Progressive Web Apps tooling\nNew Remote Address Space column in the Network panel\nPerformance improvements\nDisplay allowed/disallowed features in the Frame details view\nNew SameParty column in the Cookies pane\nDeprecated non-standard fn.displayName support\nDeprecation of Don't show Chrome Data Saver warning in the Settings menu\n[Experimental] Automatic low-contrast issue reporting in the Issues tab\n[Experimental] Full accessibility tree view in the Elements panel\n\n# Chrome 89\n\nDebugging support for Trusted Types violations\nCapture node screenshot beyond viewport\nNew Trust Tokens tab for network requests\nLighthouse 7 in the Lighthouse panel\nSupport forcing the CSS :target state\nNew shortcut to duplicate element\nColor pickers for custom CSS properties\nNew shortcuts to copy CSS properties\nNew option to show URL-decoded cookies\nClear only visible cookies\nNew option to clear third-party cookies in the Storage pane\nEdit User-Agent Client Hints for custom devices\nPersist \"record network log\" setting\nView WebTransport connections in the Network panel\n\"Online\" renamed to \"No throttling\"\nNew copy options in the Console, Sources panel, and Styles pane\nNew Service Workers information in the Frame details view\nMeasure Memory information in the Frame details view\nProvide feedback from the Issues tab\nDropped frames in the Performance panel\nEmulate foldable and dual-screen in Device Mode\n[Experimental] Automate browser testing with Puppeteer Recorder\n[Experimental] Font editor in the Styles pane\n[Experimental] CSS flexbox debugging tools\n[Experimental] New CSP Violations tab\n[Experimental] New color contrast calculation - Advanced Perceptual Contrast Algorithm (APCA)\n\n# Chrome 88\n\nFaster DevTools startup\nNew CSS angle visualization tools\nEmulate unsupported image types\nSimulate storage quota size in the Storage pane\nNew Web Vitals lane in the Performance panel\nReport CORS errors in the Network panel\nCross-origin isolation information in the Frame details view\nNew Web Workers information in the Frame details view\nDisplay opener frame details for opened windows\nOpen Network panel from the Service Workers pane\nCopy property value\nCopy stacktrace for network initiator\nPreview Wasm variable value on mouseover\nEvaluate Wasm variable in the Console\nConsistent units of measurement for file/memory sizes\nHighlight pseudo elements in the Elements panel\n[Experimental] CSS Flexbox debugging tools\n[Experimental] Customize chords keyboard shortcuts\n\n# Chrome 87\n\nNew CSS Grid debugging tools\nNew WebAuthn tab\nMove tools between top and bottom panel\nNew Computed sidebar pane in the Styles pane\nGrouping CSS properties in the Computed pane\nLighthouse 6.3 in the Lighthouse panel\nperformance.mark() events in the Timings section\nNew resource-type and url filters in the Network panel\nFrame details view updates\nDeprecation of Settings in the More tools menu\n[Experimental] View and fix color contrast issues in the CSS Overview panel\n[Experimental] Customize keyboard shortcuts in DevTools\n\n# Chrome 86\n\nNew Media panel\nCapture node screenshots via Elements panel context menu\nIssues tab updates\nEmulate missing local fonts\nEmulate inactive users\nEmulate prefers-reduced-data\nSupport for new JavaScript features\nLighthouse 6.2 in the Lighthouse panel\nDeprecation of \"other origins\" listing in the Service Workers pane\nShow coverage summary for filtered items\nNew frame details view in Application panel\nAccessible color suggestion in the Styles pane\nReinstate Properties pane in the Elements panel\nHuman-readable X-Client-Data header values in the Network panel\nAuto-complete custom fonts in the Styles pane\nConsistently display resource type in Network panel\nClear buttons in the Elements and Network panels\n\n# Chrome 85\n\nStyle editing for CSS-in-JS frameworks\nLighthouse 6 in the Lighthouse panel\nFirst Meaningful Paint (FMP) deprecation\nSupport for new JavaScript features\nNew app shortcut warnings in the Manifest pane\nService worker respondWith events in the Timing tab\nConsistent display of the Computed pane\nBytecode offsets for WebAssembly files\nLine-wise copy and cut in Sources Panel\nConsole settings updates\nPerformance panel updates\nNew icons for breakpoints, conditional breakpoints, and logpoints\n\n# Chrome 84\n\nFix site issues with the new Issues tab\nView accessibility information in the Inspect Mode tooltip\nPerformance panel updates\nMore accurate promise terminology in the Console\nStyles pane updates\nDeprecation of the Properties pane in the Elements panel\nApp shortcuts support in the Manifest pane\n\n# Chrome 83\n\nEmulate vision deficiencies\nEmulate locales\nCross-Origin Embedder Policy (COEP) debugging\nNew icons for breakpoints, conditional breakpoints, and logpoints\nView network requests that set a specific cookie\nDock to left from the Command Menu\nThe Settings option in the Main Menu has moved\nThe Audits panel is now the Lighthouse panel\nDelete all Local Overrides in a folder\nUpdated Long Tasks UI\nMaskable icon support in the Manifest pane\n\n# Chrome 82\nChrome 82 was cancelled.\n# Chrome 81\n\nMoto G4 support in Device Mode\nCookie-related updates\nMore accurate web app manifest icons\nHover over CSS content properties to see unescaped values\nSource map errors in the Console\nSetting for disabling scrolling past the end of a file\n\n# Chrome 80\n\nSupport for let and class redeclarations in the Console\nImproved WebAssembly debugging\nRequest Initiator Chains in the Initiator tab\nHighlight the selected network request in the Overview\nURL and path columns in the Network panel\nUpdated User-Agent strings\nNew Audits panel configuration UI\nPer-function or per-block code coverage modes\nCode coverage must now be initiated by a page reload\n\n# Chrome 79\n\nDebug why a cookie was blocked\nView cookie values\nSimulate different prefers-color-scheme and prefers-reduced-motion preferences\nCode coverage updates\nDebug why a network resource was requested\nConsole and Sources panels respect indentation preferences again\nNew shortcuts for cursor navigation\n\n# Chrome 78\n\nMulti-client support in the Audits panel\nPayment Handler debugging\nLighthouse 5.2 in the Audits panel\nLargest Contentful Paint in the Performance panel\nFile DevTools issues from the Main Menu\n\n# Chrome 77\n\nCopy element styles\nVisualize layout shifts\nLighthouse 5.1 in the Audits panel\nOS theme syncing\nKeyboard shortcut for opening the Breakpoint Editor\nPrefetch cache in the Network panel\nPrivate properties when viewing objects\nNotifications and push messages in the Application panel\n\n# Chrome 76\n\nAutocomplete with CSS values\nA new UI for network settings\nWebSocket messages in HAR exports\nHAR import and export buttons\nReal-time memory usage\nService worker registration port numbers\nInspect Background Fetch and Background Sync events\nPuppeteer for Firefox\n\n# Chrome 75\n\nMeaningful presets when autocompleting CSS functions\nClear site data from the Command Menu\nView all IndexedDB databases\nView a resource's uncompressed size on hover\nInline breakpoints in the Breakpoints pane\nIndexedDB and Cache resource counts\nSetting for disabling the detailed Inspect tooltip\nSetting for toggling tab indentation in the Editor\n\n# Chrome 74\n\nHighlight all nodes affected by CSS property\nLighthouse v4 in the Audits panel\nWebSocket binary message viewer\nCapture area screenshot in the Command Menu\nService worker filters in the Network panel\nPerformance panel updates\nLong tasks in Performance panel recordings\nFirst Paint in the Timing section\nBonus tip: Shortcut for viewing RGB and HSL color codes (video)\n\n# Chrome 73\n\nLogpoints\nDetailed tooltips in Inspect Mode\nExport code coverage data\nNavigate the Console with a keyboard\nAAA contrast ratio line in the Color Picker\nSave custom geolocation overrides\nCode folding\nFrames tab renamed to Messages tab\nBonus tip: Network panel filtering by property (video)\n\n# Chrome 72\n\nVisualize performance metrics in the Performance panel\nHighlight text nodes in the DOM Tree\nCopy the JS path to a DOM node\nAudits panel updates, including a new audit\nthat detects JS libraries and new keywords for accessing the Audits panel from the Command Menu\nBonus tip: Use Device Mode to inspect media queries (video)\n\n# Chrome 71\n\nHover over a Live Expression result to highlight a DOM node\nStore DOM nodes as global variables\nInitiator and priority information now in HAR imports and exports\nAccess the Command Menu from the Main Menu\nPicture-in-Picture breakpoints\nBonus tip: Use monitorEvents() to log a node's fired events in the\nConsole (video)\n\n# Chrome 70\n\nLive Expressions in the Console\nHighlight DOM nodes during Eager Evaluation\nPerformance panel optimizations\nMore reliable debugging\nEnable network throttling from the Command Menu\nAutocomplete Conditional Breakpoints\nBreak on AudioContext events\nDebug Node.js apps with ndb\nBonus tip: Measure real world user interactions with the User Timing API\n\n# Chrome 68\n\nEager Evaluation\nArgument hints\nFunction autocompletion\nES2017 keywords\nLighthouse 3.0 in the Audits panel\nBigInt support\nAdding property paths to the Watch pane\n\"Show timestamps\" moved to Settings\nBonus tip: Lesser-known Console methods (video)\n\n# Chrome 67\n\nSearch across all network headers\nCSS variable value previews\nCopy as fetch\nNew audits, desktop configuration options, and viewing traces\nStop infinite loops\nUser Timing in the Performance tabs\nJavaScript VM instances clearly listed in the Memory panel\nNetwork tab renamed to Page tab\nDark theme updates\nCertificate transparency information in the Security panel\nSite isolation features in the Performance panel\nBonus tip: Layers panel + Animations Inspector (video)\n\n# Chrome 66\n\nBlackboxing in the Network panel\nAuto-adjust zooming in Device Mode\nPretty-printing in the Preview and Response tabs\nPreviewing HTML content in the Preview tab\nLocal Overrides support for styles inside of HTML\nBonus tip: Blackbox framework scripts to make Event Listener Breakpoints more useful\n\n# Chrome 65\n\nLocal Overrides\nNew accessibility tools\nThe Changes tab\nNew SEO and performance audits\nMultiple recordings in the Performance panel\nReliable code stepping with workers in async code\nBonus tip: Automate DevTools actions with Puppeteer (video)\n\n# Chrome 64\n\nPerformance Monitor\nConsole Sidebar\nGroup similar Console messages\nBonus tip: Toggle hover pseudo-class (video)\n\n# Chrome 63\n\nMulti-client remote debugging support\nWorkspaces 2.0\n4 new audits\nSimulate push notifications with custom data\nTrigger background sync events with custom tags\nBonus tip: Event listener breakpoints (video)\n\n# Chrome 62\n\nTop-level await in the Console\nNew screenshot workflows\nCSS Grid highlighting\nA new Console API for querying objects\nNew Console filters\nHAR imports in the Network panel\nPreviewable cache resources\nMore predictable cache debugging\nBlock-level code coverage\n\n# Chrome 61\n\nMobile device throttling simulation\nView storage usage\nView when a service worker cached responses\nEnable the FPS meter from the Command Menu\nSet mousewheel behavior to zoom or scroll\nDebugging support for ES6 modules\n\n# Chrome 60\n\nNew Audits panel\n3rd-Party Badges\nA new gesture for Continue To Here\nStep into async\nMore informative object previews in the Console\nMore informative context selection in the Console\nReal-time updates in the Coverage tab\nSimpler network throttling options\nAsync stacks on by default\n\n# Chrome 59\n\nCSS and JS code coverage\nFull-page screenshots\nBlock requests\nStep over async await\nUnified Command Menu\n",
      "date_published": "2022-06-27T04:12:57.674Z",
      "date_modified": "2022-06-14T00:00:00.000Z"
    }
  ],
  "description": "Build the next generation of web experiences.",
  "home_page_url": "https://developer.chrome.com/blog"
}